package org.eclipse.ocl.xtext.oclinecore.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.ocl.xtext.oclinecore.services.OCLinEcoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2011, 2022 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalOCLinEcoreParser extends org.eclipse.ocl.xtext.base.utilities.CompatibilityAbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_SINGLE_QUOTED_STRING", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_UNQUOTED_STRING", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_DOUBLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'module'", "'-'", "'abstract'", "'attribute'", "'body'", "'callable'", "'class'", "'composes'", "'datatype'", "'definition'", "'derivation'", "'derived'", "'enum'", "'extends'", "'id'", "'import'", "'initial'", "'interface'", "'key'", "'library'", "'operation'", "'ordered'", "'package'", "'postcondition'", "'precondition'", "'primitive'", "'property'", "'readonly'", "'reference'", "'resolve'", "'static'", "'throws'", "'transient'", "'unique'", "'unsettable'", "'volatile'", "'invariant'", "'('", "')'", "':'", "';'", "'annotation'", "','", "'{'", "'}'", "'='", "'!derived'", "'!id'", "'!ordered'", "'!readonly'", "'!transient'", "'!unique'", "'!unsettable'", "'!volatile'", "'serializable'", "'!serializable'", "'documentation'", "'literal'", "'::*'", "'opposite'", "'#'", "'!composes'", "'!resolve'", "'sysml'", "'<'", "'>'", "'not'", "'not2'", "'*'", "'/'", "'+'", "'>='", "'<='", "'<>'", "'and'", "'and2'", "'implies'", "'implies2'", "'or'", "'or2'", "'xor'", "'xor2'", "'.'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'::'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'..'", "'++'", "'Lambda'", "'with'", "'<-'", "'true'", "'false'", "'invalid'", "'null'", "'@'", "'pre'", "'['", "']'", "'in'", "'|'", "'if'", "'then'", "'else'", "'endif'", "'elseif'", "'let'", "'self'", "'|?'", "'|1'", "'?'", "'&&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_SINGLE_QUOTED_STRING=5;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=12;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=9;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=11;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=10;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=6;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_UNQUOTED_STRING=7;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=8;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalOCLinEcoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalOCLinEcoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalOCLinEcoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalOCLinEcore.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private OCLinEcoreGrammarAccess grammarAccess;

        public InternalOCLinEcoreParser(TokenStream input, OCLinEcoreGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "TopLevelCS";
       	}

       	@Override
       	protected OCLinEcoreGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleTopLevelCS"
    // InternalOCLinEcore.g:80:1: entryRuleTopLevelCS returns [EObject current=null] : iv_ruleTopLevelCS= ruleTopLevelCS EOF ;
    public final EObject entryRuleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelCS = null;


        try {
            // InternalOCLinEcore.g:81:2: (iv_ruleTopLevelCS= ruleTopLevelCS EOF )
            // InternalOCLinEcore.g:82:2: iv_ruleTopLevelCS= ruleTopLevelCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTopLevelCS=ruleTopLevelCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelCS"


    // $ANTLR start "ruleTopLevelCS"
    // InternalOCLinEcore.g:89:1: ruleTopLevelCS returns [EObject current=null] : ( () (otherlv_1= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_3_0= ruleImportCS ) )* ( (lv_ownedPackages_4_0= rulePackageCS ) )* ) ;
    public final EObject ruleTopLevelCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedImports_3_0 = null;

        EObject lv_ownedPackages_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:92:28: ( ( () (otherlv_1= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_3_0= ruleImportCS ) )* ( (lv_ownedPackages_4_0= rulePackageCS ) )* ) )
            // InternalOCLinEcore.g:93:1: ( () (otherlv_1= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_3_0= ruleImportCS ) )* ( (lv_ownedPackages_4_0= rulePackageCS ) )* )
            {
            // InternalOCLinEcore.g:93:1: ( () (otherlv_1= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_3_0= ruleImportCS ) )* ( (lv_ownedPackages_4_0= rulePackageCS ) )* )
            // InternalOCLinEcore.g:93:2: () (otherlv_1= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_3_0= ruleImportCS ) )* ( (lv_ownedPackages_4_0= rulePackageCS ) )*
            {
            // InternalOCLinEcore.g:93:2: ()
            // InternalOCLinEcore.g:94:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTopLevelCSAccess().getTopLevelCSAction_0(),
                          current);

            }

            }

            // InternalOCLinEcore.g:102:2: (otherlv_1= 'module' ruleUnrestrictedName )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==17) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalOCLinEcore.g:102:4: otherlv_1= 'module' ruleUnrestrictedName
                    {
                    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTopLevelCSAccess().getModuleKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTopLevelCSAccess().getUnrestrictedNameParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_4);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:117:3: ( (lv_ownedImports_3_0= ruleImportCS ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==32||LA2_0==36) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalOCLinEcore.g:118:1: (lv_ownedImports_3_0= ruleImportCS )
            	    {
            	    // InternalOCLinEcore.g:118:1: (lv_ownedImports_3_0= ruleImportCS )
            	    // InternalOCLinEcore.g:119:3: lv_ownedImports_3_0= ruleImportCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedImportsImportCSParserRuleCall_2_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedImports_3_0=ruleImportCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedImports",
            	              		lv_ownedImports_3_0,
            	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ImportCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalOCLinEcore.g:135:3: ( (lv_ownedPackages_4_0= rulePackageCS ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==39) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalOCLinEcore.g:136:1: (lv_ownedPackages_4_0= rulePackageCS )
            	    {
            	    // InternalOCLinEcore.g:136:1: (lv_ownedPackages_4_0= rulePackageCS )
            	    // InternalOCLinEcore.g:137:3: lv_ownedPackages_4_0= rulePackageCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedPackagesPackageCSParserRuleCall_3_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_ownedPackages_4_0=rulePackageCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPackages",
            	              		lv_ownedPackages_4_0,
            	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PackageCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelCS"


    // $ANTLR start "entryRuleSIGNED"
    // InternalOCLinEcore.g:163:1: entryRuleSIGNED returns [String current=null] : iv_ruleSIGNED= ruleSIGNED EOF ;
    public final String entryRuleSIGNED() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSIGNED = null;


        try {
            // InternalOCLinEcore.g:164:2: (iv_ruleSIGNED= ruleSIGNED EOF )
            // InternalOCLinEcore.g:165:2: iv_ruleSIGNED= ruleSIGNED EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSIGNEDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSIGNED=ruleSIGNED();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSIGNED.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSIGNED"


    // $ANTLR start "ruleSIGNED"
    // InternalOCLinEcore.g:172:1: ruleSIGNED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSIGNED() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:175:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalOCLinEcore.g:176:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalOCLinEcore.g:176:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalOCLinEcore.g:176:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalOCLinEcore.g:176:2: (kw= '-' )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==18) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalOCLinEcore.g:177:2: kw= '-'
                    {
                    kw=(Token)match(input,18,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSIGNEDAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_1, grammarAccess.getSIGNEDAccess().getINTTerminalRuleCall_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSIGNED"


    // $ANTLR start "entryRuleEnumerationLiteralName"
    // InternalOCLinEcore.g:197:1: entryRuleEnumerationLiteralName returns [String current=null] : iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF ;
    public final String entryRuleEnumerationLiteralName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEnumerationLiteralName = null;


        try {
            // InternalOCLinEcore.g:198:2: (iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF )
            // InternalOCLinEcore.g:199:2: iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralName"


    // $ANTLR start "ruleEnumerationLiteralName"
    // InternalOCLinEcore.g:206:1: ruleEnumerationLiteralName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) ;
    public final AntlrDatatypeRuleToken ruleEnumerationLiteralName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:209:28: ( (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) )
            // InternalOCLinEcore.g:210:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            {
            // InternalOCLinEcore.g:210:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            int alt5=36;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt5=1;
                }
                break;
            case 19:
                {
                alt5=2;
                }
                break;
            case 20:
                {
                alt5=3;
                }
                break;
            case 21:
                {
                alt5=4;
                }
                break;
            case 22:
                {
                alt5=5;
                }
                break;
            case 23:
                {
                alt5=6;
                }
                break;
            case 24:
                {
                alt5=7;
                }
                break;
            case 25:
                {
                alt5=8;
                }
                break;
            case 26:
                {
                alt5=9;
                }
                break;
            case 27:
                {
                alt5=10;
                }
                break;
            case 28:
                {
                alt5=11;
                }
                break;
            case 29:
                {
                alt5=12;
                }
                break;
            case 30:
                {
                alt5=13;
                }
                break;
            case 31:
                {
                alt5=14;
                }
                break;
            case 32:
                {
                alt5=15;
                }
                break;
            case 33:
                {
                alt5=16;
                }
                break;
            case 34:
                {
                alt5=17;
                }
                break;
            case 35:
                {
                alt5=18;
                }
                break;
            case 36:
                {
                alt5=19;
                }
                break;
            case 17:
                {
                alt5=20;
                }
                break;
            case 37:
                {
                alt5=21;
                }
                break;
            case 38:
                {
                alt5=22;
                }
                break;
            case 39:
                {
                alt5=23;
                }
                break;
            case 40:
                {
                alt5=24;
                }
                break;
            case 41:
                {
                alt5=25;
                }
                break;
            case 42:
                {
                alt5=26;
                }
                break;
            case 43:
                {
                alt5=27;
                }
                break;
            case 44:
                {
                alt5=28;
                }
                break;
            case 45:
                {
                alt5=29;
                }
                break;
            case 46:
                {
                alt5=30;
                }
                break;
            case 47:
                {
                alt5=31;
                }
                break;
            case 48:
                {
                alt5=32;
                }
                break;
            case 49:
                {
                alt5=33;
                }
                break;
            case 50:
                {
                alt5=34;
                }
                break;
            case 51:
                {
                alt5=35;
                }
                break;
            case 52:
                {
                alt5=36;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalOCLinEcore.g:211:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EssentialOCLUnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:223:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getAbstractKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:230:2: kw= 'attribute'
                    {
                    kw=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getAttributeKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:237:2: kw= 'body'
                    {
                    kw=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getBodyKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:244:2: kw= 'callable'
                    {
                    kw=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getCallableKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:251:2: kw= 'class'
                    {
                    kw=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getClassKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:258:2: kw= 'composes'
                    {
                    kw=(Token)match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getComposesKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:265:2: kw= 'datatype'
                    {
                    kw=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDatatypeKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:272:2: kw= 'definition'
                    {
                    kw=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDefinitionKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:279:2: kw= 'derivation'
                    {
                    kw=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDerivationKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalOCLinEcore.g:286:2: kw= 'derived'
                    {
                    kw=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDerivedKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalOCLinEcore.g:293:2: kw= 'enum'
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getEnumKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalOCLinEcore.g:300:2: kw= 'extends'
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getExtendsKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalOCLinEcore.g:307:2: kw= 'id'
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getIdKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalOCLinEcore.g:314:2: kw= 'import'
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getImportKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalOCLinEcore.g:321:2: kw= 'initial'
                    {
                    kw=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getInitialKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalOCLinEcore.g:328:2: kw= 'interface'
                    {
                    kw=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getInterfaceKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalOCLinEcore.g:335:2: kw= 'key'
                    {
                    kw=(Token)match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getKeyKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalOCLinEcore.g:342:2: kw= 'library'
                    {
                    kw=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getLibraryKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalOCLinEcore.g:349:2: kw= 'module'
                    {
                    kw=(Token)match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getModuleKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalOCLinEcore.g:356:2: kw= 'operation'
                    {
                    kw=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getOperationKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalOCLinEcore.g:363:2: kw= 'ordered'
                    {
                    kw=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getOrderedKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalOCLinEcore.g:370:2: kw= 'package'
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPackageKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalOCLinEcore.g:377:2: kw= 'postcondition'
                    {
                    kw=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPostconditionKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalOCLinEcore.g:384:2: kw= 'precondition'
                    {
                    kw=(Token)match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPreconditionKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalOCLinEcore.g:391:2: kw= 'primitive'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPrimitiveKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalOCLinEcore.g:398:2: kw= 'property'
                    {
                    kw=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPropertyKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalOCLinEcore.g:405:2: kw= 'readonly'
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getReadonlyKeyword_27());

                    }

                    }
                    break;
                case 29 :
                    // InternalOCLinEcore.g:412:2: kw= 'reference'
                    {
                    kw=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getReferenceKeyword_28());

                    }

                    }
                    break;
                case 30 :
                    // InternalOCLinEcore.g:419:2: kw= 'resolve'
                    {
                    kw=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getResolveKeyword_29());

                    }

                    }
                    break;
                case 31 :
                    // InternalOCLinEcore.g:426:2: kw= 'static'
                    {
                    kw=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getStaticKeyword_30());

                    }

                    }
                    break;
                case 32 :
                    // InternalOCLinEcore.g:433:2: kw= 'throws'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getThrowsKeyword_31());

                    }

                    }
                    break;
                case 33 :
                    // InternalOCLinEcore.g:440:2: kw= 'transient'
                    {
                    kw=(Token)match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getTransientKeyword_32());

                    }

                    }
                    break;
                case 34 :
                    // InternalOCLinEcore.g:447:2: kw= 'unique'
                    {
                    kw=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getUniqueKeyword_33());

                    }

                    }
                    break;
                case 35 :
                    // InternalOCLinEcore.g:454:2: kw= 'unsettable'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getUnsettableKeyword_34());

                    }

                    }
                    break;
                case 36 :
                    // InternalOCLinEcore.g:461:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getVolatileKeyword_35());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralName"


    // $ANTLR start "entryRuleInvariantConstraintCS"
    // InternalOCLinEcore.g:474:1: entryRuleInvariantConstraintCS returns [EObject current=null] : iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF ;
    public final EObject entryRuleInvariantConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantConstraintCS = null;


        try {
            // InternalOCLinEcore.g:475:2: (iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF )
            // InternalOCLinEcore.g:476:2: iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvariantConstraintCS=ruleInvariantConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantConstraintCS"


    // $ANTLR start "ruleInvariantConstraintCS"
    // InternalOCLinEcore.g:483:1: ruleInvariantConstraintCS returns [EObject current=null] : ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) ) ;
    public final EObject ruleInvariantConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCallable_0_0=null;
        Token lv_stereotype_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedMessageSpecification_4_0 = null;

        EObject lv_ownedSpecification_7_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:486:28: ( ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) ) )
            // InternalOCLinEcore.g:487:1: ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) )
            {
            // InternalOCLinEcore.g:487:1: ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) )
            // InternalOCLinEcore.g:487:2: ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' )
            {
            // InternalOCLinEcore.g:487:2: ( (lv_isCallable_0_0= 'callable' ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==22) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalOCLinEcore.g:488:1: (lv_isCallable_0_0= 'callable' )
                    {
                    // InternalOCLinEcore.g:488:1: (lv_isCallable_0_0= 'callable' )
                    // InternalOCLinEcore.g:489:3: lv_isCallable_0_0= 'callable'
                    {
                    lv_isCallable_0_0=(Token)match(input,22,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCallable_0_0, grammarAccess.getInvariantConstraintCSAccess().getIsCallableCallableKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getInvariantConstraintCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCallable", true, "callable");

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:502:3: ( (lv_stereotype_1_0= 'invariant' ) )
            // InternalOCLinEcore.g:503:1: (lv_stereotype_1_0= 'invariant' )
            {
            // InternalOCLinEcore.g:503:1: (lv_stereotype_1_0= 'invariant' )
            // InternalOCLinEcore.g:504:3: lv_stereotype_1_0= 'invariant'
            {
            lv_stereotype_1_0=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_1_0, grammarAccess.getInvariantConstraintCSAccess().getStereotypeInvariantKeyword_1_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInvariantConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_1_0, "invariant");

            }

            }


            }

            // InternalOCLinEcore.g:517:2: ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=RULE_SIMPLE_ID && LA8_0<=RULE_ESCAPED_ID)||LA8_0==17||(LA8_0>=19 && LA8_0<=53)||LA8_0==58||LA8_0==71||(LA8_0>=73 && LA8_0<=74)||LA8_0==76||LA8_0==80) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalOCLinEcore.g:517:3: ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )?
                    {
                    // InternalOCLinEcore.g:517:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:518:1: (lv_name_2_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:518:1: (lv_name_2_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:519:3: lv_name_2_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_name_2_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:535:2: (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==54) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // InternalOCLinEcore.g:535:4: otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')'
                            {
                            otherlv_3=(Token)match(input,54,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getInvariantConstraintCSAccess().getLeftParenthesisKeyword_2_1_0());

                            }
                            // InternalOCLinEcore.g:539:1: ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:540:1: (lv_ownedMessageSpecification_4_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:540:1: (lv_ownedMessageSpecification_4_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:541:3: lv_ownedMessageSpecification_4_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_ownedMessageSpecification_4_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_4_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_5=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getInvariantConstraintCSAccess().getRightParenthesisKeyword_2_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:561:5: ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==56) ) {
                alt10=1;
            }
            else if ( (LA10_0==57) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalOCLinEcore.g:561:6: (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' )
                    {
                    // InternalOCLinEcore.g:561:6: (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' )
                    // InternalOCLinEcore.g:561:8: otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';'
                    {
                    otherlv_6=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getInvariantConstraintCSAccess().getColonKeyword_3_0_0());

                    }
                    // InternalOCLinEcore.g:565:1: ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( ((LA9_0>=RULE_INT && LA9_0<=RULE_SINGLE_QUOTED_STRING)||(LA9_0>=RULE_UNQUOTED_STRING && LA9_0<=RULE_ESCAPED_ID)||(LA9_0>=17 && LA9_0<=54)||LA9_0==58||LA9_0==71||(LA9_0>=73 && LA9_0<=74)||LA9_0==76||LA9_0==80||(LA9_0>=83 && LA9_0<=85)||(LA9_0>=103 && LA9_0<=104)||(LA9_0>=106 && LA9_0<=118)||LA9_0==121||(LA9_0>=124 && LA9_0<=127)||LA9_0==134||(LA9_0>=139 && LA9_0<=140)) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalOCLinEcore.g:566:1: (lv_ownedSpecification_7_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:566:1: (lv_ownedSpecification_7_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:567:3: lv_ownedSpecification_7_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_14);
                            lv_ownedSpecification_7_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedSpecification",
                                      		lv_ownedSpecification_7_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getInvariantConstraintCSAccess().getSemicolonKeyword_3_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:588:7: otherlv_9= ';'
                    {
                    otherlv_9=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getInvariantConstraintCSAccess().getSemicolonKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantConstraintCS"


    // $ANTLR start "entryRulePostconditionConstraintCS"
    // InternalOCLinEcore.g:600:1: entryRulePostconditionConstraintCS returns [EObject current=null] : iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF ;
    public final EObject entryRulePostconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostconditionConstraintCS = null;


        try {
            // InternalOCLinEcore.g:601:2: (iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF )
            // InternalOCLinEcore.g:602:2: iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostconditionConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostconditionConstraintCS=rulePostconditionConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostconditionConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostconditionConstraintCS"


    // $ANTLR start "rulePostconditionConstraintCS"
    // InternalOCLinEcore.g:609:1: rulePostconditionConstraintCS returns [EObject current=null] : ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) ;
    public final EObject rulePostconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_stereotype_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedMessageSpecification_3_0 = null;

        EObject lv_ownedSpecification_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:612:28: ( ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) )
            // InternalOCLinEcore.g:613:1: ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            {
            // InternalOCLinEcore.g:613:1: ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            // InternalOCLinEcore.g:613:2: ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';'
            {
            // InternalOCLinEcore.g:613:2: ( (lv_stereotype_0_0= 'postcondition' ) )
            // InternalOCLinEcore.g:614:1: (lv_stereotype_0_0= 'postcondition' )
            {
            // InternalOCLinEcore.g:614:1: (lv_stereotype_0_0= 'postcondition' )
            // InternalOCLinEcore.g:615:3: lv_stereotype_0_0= 'postcondition'
            {
            lv_stereotype_0_0=(Token)match(input,40,FollowSets000.FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_0_0, grammarAccess.getPostconditionConstraintCSAccess().getStereotypePostconditionKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPostconditionConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_0_0, "postcondition");

            }

            }


            }

            // InternalOCLinEcore.g:628:2: ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_SIMPLE_ID && LA12_0<=RULE_ESCAPED_ID)||LA12_0==17||(LA12_0>=19 && LA12_0<=53)||LA12_0==58||LA12_0==71||(LA12_0>=73 && LA12_0<=74)||LA12_0==76||LA12_0==80) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalOCLinEcore.g:628:3: ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    {
                    // InternalOCLinEcore.g:628:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:629:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:629:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:630:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:646:2: (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==54) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalOCLinEcore.g:646:4: otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')'
                            {
                            otherlv_2=(Token)match(input,54,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getPostconditionConstraintCSAccess().getLeftParenthesisKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:650:1: ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:651:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:651:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:652:3: lv_ownedMessageSpecification_3_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_ownedMessageSpecification_3_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_3_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getPostconditionConstraintCSAccess().getRightParenthesisKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPostconditionConstraintCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:676:1: ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_INT && LA13_0<=RULE_SINGLE_QUOTED_STRING)||(LA13_0>=RULE_UNQUOTED_STRING && LA13_0<=RULE_ESCAPED_ID)||(LA13_0>=17 && LA13_0<=54)||LA13_0==58||LA13_0==71||(LA13_0>=73 && LA13_0<=74)||LA13_0==76||LA13_0==80||(LA13_0>=83 && LA13_0<=85)||(LA13_0>=103 && LA13_0<=104)||(LA13_0>=106 && LA13_0<=118)||LA13_0==121||(LA13_0>=124 && LA13_0<=127)||LA13_0==134||(LA13_0>=139 && LA13_0<=140)) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalOCLinEcore.g:677:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    {
                    // InternalOCLinEcore.g:677:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    // InternalOCLinEcore.g:678:3: lv_ownedSpecification_6_0= ruleSpecificationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_ownedSpecification_6_0=ruleSpecificationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSpecification",
                              		lv_ownedSpecification_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getPostconditionConstraintCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostconditionConstraintCS"


    // $ANTLR start "entryRulePreconditionConstraintCS"
    // InternalOCLinEcore.g:706:1: entryRulePreconditionConstraintCS returns [EObject current=null] : iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF ;
    public final EObject entryRulePreconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionConstraintCS = null;


        try {
            // InternalOCLinEcore.g:707:2: (iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF )
            // InternalOCLinEcore.g:708:2: iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreconditionConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePreconditionConstraintCS=rulePreconditionConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreconditionConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionConstraintCS"


    // $ANTLR start "rulePreconditionConstraintCS"
    // InternalOCLinEcore.g:715:1: rulePreconditionConstraintCS returns [EObject current=null] : ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) ;
    public final EObject rulePreconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_stereotype_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedMessageSpecification_3_0 = null;

        EObject lv_ownedSpecification_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:718:28: ( ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) )
            // InternalOCLinEcore.g:719:1: ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            {
            // InternalOCLinEcore.g:719:1: ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            // InternalOCLinEcore.g:719:2: ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';'
            {
            // InternalOCLinEcore.g:719:2: ( (lv_stereotype_0_0= 'precondition' ) )
            // InternalOCLinEcore.g:720:1: (lv_stereotype_0_0= 'precondition' )
            {
            // InternalOCLinEcore.g:720:1: (lv_stereotype_0_0= 'precondition' )
            // InternalOCLinEcore.g:721:3: lv_stereotype_0_0= 'precondition'
            {
            lv_stereotype_0_0=(Token)match(input,41,FollowSets000.FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_0_0, grammarAccess.getPreconditionConstraintCSAccess().getStereotypePreconditionKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreconditionConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_0_0, "precondition");

            }

            }


            }

            // InternalOCLinEcore.g:734:2: ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_SIMPLE_ID && LA15_0<=RULE_ESCAPED_ID)||LA15_0==17||(LA15_0>=19 && LA15_0<=53)||LA15_0==58||LA15_0==71||(LA15_0>=73 && LA15_0<=74)||LA15_0==76||LA15_0==80) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalOCLinEcore.g:734:3: ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    {
                    // InternalOCLinEcore.g:734:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:735:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:735:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:736:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:752:2: (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==54) ) {
                        alt14=1;
                    }
                    switch (alt14) {
                        case 1 :
                            // InternalOCLinEcore.g:752:4: otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')'
                            {
                            otherlv_2=(Token)match(input,54,FollowSets000.FOLLOW_10); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getPreconditionConstraintCSAccess().getLeftParenthesisKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:756:1: ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:757:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:757:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:758:3: lv_ownedMessageSpecification_3_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_ownedMessageSpecification_3_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_3_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getPreconditionConstraintCSAccess().getRightParenthesisKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPreconditionConstraintCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:782:1: ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=RULE_INT && LA16_0<=RULE_SINGLE_QUOTED_STRING)||(LA16_0>=RULE_UNQUOTED_STRING && LA16_0<=RULE_ESCAPED_ID)||(LA16_0>=17 && LA16_0<=54)||LA16_0==58||LA16_0==71||(LA16_0>=73 && LA16_0<=74)||LA16_0==76||LA16_0==80||(LA16_0>=83 && LA16_0<=85)||(LA16_0>=103 && LA16_0<=104)||(LA16_0>=106 && LA16_0<=118)||LA16_0==121||(LA16_0>=124 && LA16_0<=127)||LA16_0==134||(LA16_0>=139 && LA16_0<=140)) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalOCLinEcore.g:783:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    {
                    // InternalOCLinEcore.g:783:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    // InternalOCLinEcore.g:784:3: lv_ownedSpecification_6_0= ruleSpecificationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_ownedSpecification_6_0=ruleSpecificationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSpecification",
                              		lv_ownedSpecification_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getPreconditionConstraintCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionConstraintCS"


    // $ANTLR start "entryRuleAnnotationCS"
    // InternalOCLinEcore.g:812:1: entryRuleAnnotationCS returns [EObject current=null] : iv_ruleAnnotationCS= ruleAnnotationCS EOF ;
    public final EObject entryRuleAnnotationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationCS = null;


        try {
            // InternalOCLinEcore.g:813:2: (iv_ruleAnnotationCS= ruleAnnotationCS EOF )
            // InternalOCLinEcore.g:814:2: iv_ruleAnnotationCS= ruleAnnotationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationCS=ruleAnnotationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationCS"


    // $ANTLR start "ruleAnnotationCS"
    // InternalOCLinEcore.g:821:1: ruleAnnotationCS returns [EObject current=null] : ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) ) ;
    public final EObject ruleAnnotationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_ownedDetails_4_0 = null;

        EObject lv_ownedDetails_6_0 = null;

        EObject lv_ownedAnnotations_9_0 = null;

        EObject lv_ownedContents_10_0 = null;

        EObject lv_ownedReferences_11_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:824:28: ( ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) ) )
            // InternalOCLinEcore.g:825:1: ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) )
            {
            // InternalOCLinEcore.g:825:1: ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) )
            // InternalOCLinEcore.g:825:2: () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' )
            {
            // InternalOCLinEcore.g:825:2: ()
            // InternalOCLinEcore.g:826:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationCSAccess().getAnnotationCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotationCSAccess().getAnnotationKeyword_1());

            }
            // InternalOCLinEcore.g:838:1: ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_SINGLE_QUOTED_STRING||(LA18_0>=RULE_SIMPLE_ID && LA18_0<=RULE_ESCAPED_ID)||LA18_0==17||(LA18_0>=19 && LA18_0<=53)||LA18_0==58||LA18_0==71||(LA18_0>=73 && LA18_0<=74)||LA18_0==76||LA18_0==80) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalOCLinEcore.g:839:1: ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    // InternalOCLinEcore.g:839:1: ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:840:1: (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:840:1: (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING )
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( ((LA17_0>=RULE_SIMPLE_ID && LA17_0<=RULE_ESCAPED_ID)||LA17_0==17||(LA17_0>=19 && LA17_0<=53)||LA17_0==58||LA17_0==71||(LA17_0>=73 && LA17_0<=74)||LA17_0==76||LA17_0==80) ) {
                        alt17=1;
                    }
                    else if ( (LA17_0==RULE_SINGLE_QUOTED_STRING) ) {
                        alt17=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 17, 0, input);

                        throw nvae;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalOCLinEcore.g:841:3: lv_name_2_1= ruleUnrestrictedName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getNameUnrestrictedNameParserRuleCall_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_name_2_1=ruleUnrestrictedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_1,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:856:8: lv_name_2_2= RULE_SINGLE_QUOTED_STRING
                            {
                            lv_name_2_2=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_2_2, grammarAccess.getAnnotationCSAccess().getNameSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotationCSRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current,
                                     			"name",
                                      		lv_name_2_2,
                                      		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:874:3: (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==54) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalOCLinEcore.g:874:5: otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,54,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAnnotationCSAccess().getLeftParenthesisKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:878:1: ( (lv_ownedDetails_4_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:879:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:879:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    // InternalOCLinEcore.g:880:3: lv_ownedDetails_4_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_ownedDetails_4_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:896:2: (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==59) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:896:4: otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    {
                    	    otherlv_5=(Token)match(input,59,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getAnnotationCSAccess().getCommaKeyword_3_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:900:1: ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:901:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:901:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:902:3: lv_ownedDetails_6_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_ownedDetails_6_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_6_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,55,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAnnotationCSAccess().getRightParenthesisKeyword_3_3());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:922:3: ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==60) ) {
                alt22=1;
            }
            else if ( (LA22_0==57) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalOCLinEcore.g:922:4: (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' )
                    {
                    // InternalOCLinEcore.g:922:4: (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' )
                    // InternalOCLinEcore.g:922:6: otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}'
                    {
                    otherlv_8=(Token)match(input,60,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotationCSAccess().getLeftCurlyBracketKeyword_4_0_0());

                    }
                    // InternalOCLinEcore.g:926:1: ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+
                    int cnt21=0;
                    loop21:
                    do {
                        int alt21=4;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt21=1;
                            }
                            break;
                        case RULE_SIMPLE_ID:
                        case RULE_ESCAPED_ID:
                        case 17:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 74:
                            {
                            alt21=2;
                            }
                            break;
                        case 45:
                            {
                            int LA21_4 = input.LA(2);

                            if ( ((LA21_4>=RULE_SIMPLE_ID && LA21_4<=RULE_ESCAPED_ID)||LA21_4==17||(LA21_4>=19 && LA21_4<=53)||LA21_4==58||LA21_4==71||(LA21_4>=73 && LA21_4<=74)||LA21_4==76||LA21_4==80) ) {
                                alt21=3;
                            }
                            else if ( ((LA21_4>=56 && LA21_4<=57)||LA21_4==60||LA21_4==62) ) {
                                alt21=2;
                            }


                            }
                            break;

                        }

                        switch (alt21) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:926:2: ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:926:2: ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:927:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:927:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:928:3: lv_ownedAnnotations_9_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_ownedAnnotations_9_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_9_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:945:6: ( (lv_ownedContents_10_0= ruleModelElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:945:6: ( (lv_ownedContents_10_0= ruleModelElementCS ) )
                    	    // InternalOCLinEcore.g:946:1: (lv_ownedContents_10_0= ruleModelElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:946:1: (lv_ownedContents_10_0= ruleModelElementCS )
                    	    // InternalOCLinEcore.g:947:3: lv_ownedContents_10_0= ruleModelElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedContentsModelElementCSParserRuleCall_4_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_ownedContents_10_0=ruleModelElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedContents",
                    	              		lv_ownedContents_10_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ModelElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:964:6: ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:964:6: ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) )
                    	    // InternalOCLinEcore.g:965:1: (lv_ownedReferences_11_0= ruleModelElementRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:965:1: (lv_ownedReferences_11_0= ruleModelElementRefCS )
                    	    // InternalOCLinEcore.g:966:3: lv_ownedReferences_11_0= ruleModelElementRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedReferencesModelElementRefCSParserRuleCall_4_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_ownedReferences_11_0=ruleModelElementRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedReferences",
                    	              		lv_ownedReferences_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ModelElementRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt21 >= 1 ) break loop21;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(21, input);
                                throw eee;
                        }
                        cnt21++;
                    } while (true);

                    otherlv_12=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotationCSAccess().getRightCurlyBracketKeyword_4_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:987:7: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getAnnotationCSAccess().getSemicolonKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationCS"


    // $ANTLR start "entryRuleAnnotationElementCS"
    // InternalOCLinEcore.g:999:1: entryRuleAnnotationElementCS returns [EObject current=null] : iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF ;
    public final EObject entryRuleAnnotationElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationElementCS = null;


        try {
            // InternalOCLinEcore.g:1000:2: (iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF )
            // InternalOCLinEcore.g:1001:2: iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationElementCS=ruleAnnotationElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationElementCS"


    // $ANTLR start "ruleAnnotationElementCS"
    // InternalOCLinEcore.g:1008:1: ruleAnnotationElementCS returns [EObject current=null] : (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS ) ;
    public final EObject ruleAnnotationElementCS() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotationCS_0 = null;

        EObject this_DocumentationCS_1 = null;

        EObject this_SysMLCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1011:28: ( (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS ) )
            // InternalOCLinEcore.g:1012:1: (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS )
            {
            // InternalOCLinEcore.g:1012:1: (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS )
            int alt23=3;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt23=1;
                }
                break;
            case 73:
                {
                alt23=2;
                }
                break;
            case 80:
                {
                alt23=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalOCLinEcore.g:1013:2: this_AnnotationCS_0= ruleAnnotationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getAnnotationCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnnotationCS_0=ruleAnnotationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotationCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1026:2: this_DocumentationCS_1= ruleDocumentationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getDocumentationCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DocumentationCS_1=ruleDocumentationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DocumentationCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:1039:2: this_SysMLCS_2= ruleSysMLCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getSysMLCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SysMLCS_2=ruleSysMLCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SysMLCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationElementCS"


    // $ANTLR start "entryRuleAttributeCS"
    // InternalOCLinEcore.g:1058:1: entryRuleAttributeCS returns [EObject current=null] : iv_ruleAttributeCS= ruleAttributeCS EOF ;
    public final EObject entryRuleAttributeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttributeCS = null;


        try {
            // InternalOCLinEcore.g:1059:2: (iv_ruleAttributeCS= ruleAttributeCS EOF )
            // InternalOCLinEcore.g:1060:2: iv_ruleAttributeCS= ruleAttributeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeCS=ruleAttributeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeCS"


    // $ANTLR start "ruleAttributeCS"
    // InternalOCLinEcore.g:1067:1: ruleAttributeCS returns [EObject current=null] : ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'attribute' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' ) ) ;
    public final EObject ruleAttributeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStatic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_default_6_0=null;
        Token otherlv_7=null;
        Token lv_qualifiers_8_0=null;
        Token lv_qualifiers_9_0=null;
        Token lv_qualifiers_10_0=null;
        Token lv_qualifiers_11_0=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedType_4_0 = null;

        EObject lv_ownedAnnotations_27_0 = null;

        EObject lv_ownedDefaultExpressions_31_0 = null;

        EObject lv_ownedDefaultExpressions_36_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1070:28: ( ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'attribute' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' ) ) )
            // InternalOCLinEcore.g:1071:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'attribute' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' ) )
            {
            // InternalOCLinEcore.g:1071:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'attribute' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' ) )
            // InternalOCLinEcore.g:1071:2: ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'attribute' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' )
            {
            // InternalOCLinEcore.g:1071:2: ( (lv_isStatic_0_0= 'static' ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==47) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalOCLinEcore.g:1072:1: (lv_isStatic_0_0= 'static' )
                    {
                    // InternalOCLinEcore.g:1072:1: (lv_isStatic_0_0= 'static' )
                    // InternalOCLinEcore.g:1073:3: lv_isStatic_0_0= 'static'
                    {
                    lv_isStatic_0_0=(Token)match(input,47,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStatic_0_0, grammarAccess.getAttributeCSAccess().getIsStaticStaticKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStatic", true, "static");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,20,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAttributeCSAccess().getAttributeKeyword_1());

            }
            // InternalOCLinEcore.g:1090:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:1091:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:1091:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:1092:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:1108:2: (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==56) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalOCLinEcore.g:1108:4: otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAttributeCSAccess().getColonKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:1112:1: ( (lv_ownedType_4_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:1113:1: (lv_ownedType_4_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:1113:1: (lv_ownedType_4_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:1114:3: lv_ownedType_4_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_28);
                    lv_ownedType_4_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1130:4: (otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==62) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalOCLinEcore.g:1130:6: otherlv_5= '=' ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAttributeCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:1134:1: ( (lv_default_6_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:1135:1: (lv_default_6_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:1135:1: (lv_default_6_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:1136:3: lv_default_6_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_6_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_6_0, grammarAccess.getAttributeCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1152:4: (otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==60) ) {
                int LA30_1 = input.LA(2);

                if ( (LA30_1==28||LA30_1==31||LA30_1==38||LA30_1==44||(LA30_1>=49 && LA30_1<=52)||(LA30_1>=63 && LA30_1<=70)) ) {
                    alt30=1;
                }
            }
            switch (alt30) {
                case 1 :
                    // InternalOCLinEcore.g:1152:6: otherlv_7= '{' ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}'
                    {
                    otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:1156:1: ( ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )? )+
                    int cnt29=0;
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==28||LA29_0==31||LA29_0==38||LA29_0==44||(LA29_0>=49 && LA29_0<=52)||(LA29_0>=63 && LA29_0<=70)) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1156:2: ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) ) (otherlv_24= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:1156:2: ( ( (lv_qualifiers_8_0= 'derived' ) ) | ( (lv_qualifiers_9_0= '!derived' ) ) | ( (lv_qualifiers_10_0= 'id' ) ) | ( (lv_qualifiers_11_0= '!id' ) ) | ( (lv_qualifiers_12_0= 'ordered' ) ) | ( (lv_qualifiers_13_0= '!ordered' ) ) | ( (lv_qualifiers_14_0= 'readonly' ) ) | ( (lv_qualifiers_15_0= '!readonly' ) ) | ( (lv_qualifiers_16_0= 'transient' ) ) | ( (lv_qualifiers_17_0= '!transient' ) ) | ( (lv_qualifiers_18_0= 'unique' ) ) | ( (lv_qualifiers_19_0= '!unique' ) ) | ( (lv_qualifiers_20_0= 'unsettable' ) ) | ( (lv_qualifiers_21_0= '!unsettable' ) ) | ( (lv_qualifiers_22_0= 'volatile' ) ) | ( (lv_qualifiers_23_0= '!volatile' ) ) )
                    	    int alt27=16;
                    	    switch ( input.LA(1) ) {
                    	    case 28:
                    	        {
                    	        alt27=1;
                    	        }
                    	        break;
                    	    case 63:
                    	        {
                    	        alt27=2;
                    	        }
                    	        break;
                    	    case 31:
                    	        {
                    	        alt27=3;
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        alt27=4;
                    	        }
                    	        break;
                    	    case 38:
                    	        {
                    	        alt27=5;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt27=6;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt27=7;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt27=8;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt27=9;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt27=10;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt27=11;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt27=12;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt27=13;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt27=14;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt27=15;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt27=16;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 27, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt27) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1156:3: ( (lv_qualifiers_8_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1156:3: ( (lv_qualifiers_8_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:1157:1: (lv_qualifiers_8_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:1157:1: (lv_qualifiers_8_0= 'derived' )
                    	            // InternalOCLinEcore.g:1158:3: lv_qualifiers_8_0= 'derived'
                    	            {
                    	            lv_qualifiers_8_0=(Token)match(input,28,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_8_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_8_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:1172:6: ( (lv_qualifiers_9_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1172:6: ( (lv_qualifiers_9_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:1173:1: (lv_qualifiers_9_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:1173:1: (lv_qualifiers_9_0= '!derived' )
                    	            // InternalOCLinEcore.g:1174:3: lv_qualifiers_9_0= '!derived'
                    	            {
                    	            lv_qualifiers_9_0=(Token)match(input,63,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_9_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_9_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:1188:6: ( (lv_qualifiers_10_0= 'id' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1188:6: ( (lv_qualifiers_10_0= 'id' ) )
                    	            // InternalOCLinEcore.g:1189:1: (lv_qualifiers_10_0= 'id' )
                    	            {
                    	            // InternalOCLinEcore.g:1189:1: (lv_qualifiers_10_0= 'id' )
                    	            // InternalOCLinEcore.g:1190:3: lv_qualifiers_10_0= 'id'
                    	            {
                    	            lv_qualifiers_10_0=(Token)match(input,31,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_10_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_10_0, "id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:1204:6: ( (lv_qualifiers_11_0= '!id' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1204:6: ( (lv_qualifiers_11_0= '!id' ) )
                    	            // InternalOCLinEcore.g:1205:1: (lv_qualifiers_11_0= '!id' )
                    	            {
                    	            // InternalOCLinEcore.g:1205:1: (lv_qualifiers_11_0= '!id' )
                    	            // InternalOCLinEcore.g:1206:3: lv_qualifiers_11_0= '!id'
                    	            {
                    	            lv_qualifiers_11_0=(Token)match(input,64,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_11_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_11_0, "!id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:1220:6: ( (lv_qualifiers_12_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1220:6: ( (lv_qualifiers_12_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:1221:1: (lv_qualifiers_12_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:1221:1: (lv_qualifiers_12_0= 'ordered' )
                    	            // InternalOCLinEcore.g:1222:3: lv_qualifiers_12_0= 'ordered'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,38,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_12_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:1236:6: ( (lv_qualifiers_13_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1236:6: ( (lv_qualifiers_13_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:1237:1: (lv_qualifiers_13_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:1237:1: (lv_qualifiers_13_0= '!ordered' )
                    	            // InternalOCLinEcore.g:1238:3: lv_qualifiers_13_0= '!ordered'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,65,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:1252:6: ( (lv_qualifiers_14_0= 'readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1252:6: ( (lv_qualifiers_14_0= 'readonly' ) )
                    	            // InternalOCLinEcore.g:1253:1: (lv_qualifiers_14_0= 'readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:1253:1: (lv_qualifiers_14_0= 'readonly' )
                    	            // InternalOCLinEcore.g:1254:3: lv_qualifiers_14_0= 'readonly'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,44,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:1268:6: ( (lv_qualifiers_15_0= '!readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1268:6: ( (lv_qualifiers_15_0= '!readonly' ) )
                    	            // InternalOCLinEcore.g:1269:1: (lv_qualifiers_15_0= '!readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:1269:1: (lv_qualifiers_15_0= '!readonly' )
                    	            // InternalOCLinEcore.g:1270:3: lv_qualifiers_15_0= '!readonly'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,66,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalOCLinEcore.g:1284:6: ( (lv_qualifiers_16_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1284:6: ( (lv_qualifiers_16_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:1285:1: (lv_qualifiers_16_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:1285:1: (lv_qualifiers_16_0= 'transient' )
                    	            // InternalOCLinEcore.g:1286:3: lv_qualifiers_16_0= 'transient'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,49,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalOCLinEcore.g:1300:6: ( (lv_qualifiers_17_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1300:6: ( (lv_qualifiers_17_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:1301:1: (lv_qualifiers_17_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:1301:1: (lv_qualifiers_17_0= '!transient' )
                    	            // InternalOCLinEcore.g:1302:3: lv_qualifiers_17_0= '!transient'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,67,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalOCLinEcore.g:1316:6: ( (lv_qualifiers_18_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1316:6: ( (lv_qualifiers_18_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:1317:1: (lv_qualifiers_18_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:1317:1: (lv_qualifiers_18_0= 'unique' )
                    	            // InternalOCLinEcore.g:1318:3: lv_qualifiers_18_0= 'unique'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,50,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalOCLinEcore.g:1332:6: ( (lv_qualifiers_19_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1332:6: ( (lv_qualifiers_19_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:1333:1: (lv_qualifiers_19_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:1333:1: (lv_qualifiers_19_0= '!unique' )
                    	            // InternalOCLinEcore.g:1334:3: lv_qualifiers_19_0= '!unique'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,68,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalOCLinEcore.g:1348:6: ( (lv_qualifiers_20_0= 'unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1348:6: ( (lv_qualifiers_20_0= 'unsettable' ) )
                    	            // InternalOCLinEcore.g:1349:1: (lv_qualifiers_20_0= 'unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:1349:1: (lv_qualifiers_20_0= 'unsettable' )
                    	            // InternalOCLinEcore.g:1350:3: lv_qualifiers_20_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,51,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalOCLinEcore.g:1364:6: ( (lv_qualifiers_21_0= '!unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1364:6: ( (lv_qualifiers_21_0= '!unsettable' ) )
                    	            // InternalOCLinEcore.g:1365:1: (lv_qualifiers_21_0= '!unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:1365:1: (lv_qualifiers_21_0= '!unsettable' )
                    	            // InternalOCLinEcore.g:1366:3: lv_qualifiers_21_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,69,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalOCLinEcore.g:1380:6: ( (lv_qualifiers_22_0= 'volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1380:6: ( (lv_qualifiers_22_0= 'volatile' ) )
                    	            // InternalOCLinEcore.g:1381:1: (lv_qualifiers_22_0= 'volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:1381:1: (lv_qualifiers_22_0= 'volatile' )
                    	            // InternalOCLinEcore.g:1382:3: lv_qualifiers_22_0= 'volatile'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,52,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalOCLinEcore.g:1396:6: ( (lv_qualifiers_23_0= '!volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1396:6: ( (lv_qualifiers_23_0= '!volatile' ) )
                    	            // InternalOCLinEcore.g:1397:1: (lv_qualifiers_23_0= '!volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:1397:1: (lv_qualifiers_23_0= '!volatile' )
                    	            // InternalOCLinEcore.g:1398:3: lv_qualifiers_23_0= '!volatile'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,70,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:1411:3: (otherlv_24= ',' )?
                    	    int alt28=2;
                    	    int LA28_0 = input.LA(1);

                    	    if ( (LA28_0==59) ) {
                    	        alt28=1;
                    	    }
                    	    switch (alt28) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1411:5: otherlv_24= ','
                    	            {
                    	            otherlv_24=(Token)match(input,59,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_24, grammarAccess.getAttributeCSAccess().getCommaKeyword_5_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt29 >= 1 ) break loop29;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(29, input);
                                throw eee;
                        }
                        cnt29++;
                    } while (true);

                    otherlv_25=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_25, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:1419:3: ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' ) | otherlv_39= ';' )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==60) ) {
                alt36=1;
            }
            else if ( (LA36_0==57) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalOCLinEcore.g:1419:4: (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' )
                    {
                    // InternalOCLinEcore.g:1419:4: (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}' )
                    // InternalOCLinEcore.g:1419:6: otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )* otherlv_38= '}'
                    {
                    otherlv_26=(Token)match(input,60,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalOCLinEcore.g:1423:1: ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' ) | (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) )*
                    loop35:
                    do {
                        int alt35=4;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt35=1;
                            }
                            break;
                        case 33:
                            {
                            alt35=2;
                            }
                            break;
                        case 27:
                            {
                            alt35=3;
                            }
                            break;

                        }

                        switch (alt35) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1423:2: ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1423:2: ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:1424:1: (lv_ownedAnnotations_27_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:1424:1: (lv_ownedAnnotations_27_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:1425:3: lv_ownedAnnotations_27_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_ownedAnnotations_27_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_27_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:1442:6: (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:1442:6: (otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )
                    	    // InternalOCLinEcore.g:1442:8: otherlv_28= 'initial' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';'
                    	    {
                    	    otherlv_28=(Token)match(input,33,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_28, grammarAccess.getAttributeCSAccess().getInitialKeyword_6_0_1_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:1446:1: ( ruleUnrestrictedName )?
                    	    int alt31=2;
                    	    int LA31_0 = input.LA(1);

                    	    if ( ((LA31_0>=RULE_SIMPLE_ID && LA31_0<=RULE_ESCAPED_ID)||LA31_0==17||(LA31_0>=19 && LA31_0<=53)||LA31_0==58||LA31_0==71||(LA31_0>=73 && LA31_0<=74)||LA31_0==76||LA31_0==80) ) {
                    	        alt31=1;
                    	    }
                    	    switch (alt31) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1447:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_17);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_30=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_1_2());

                    	    }
                    	    // InternalOCLinEcore.g:1461:1: ( (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS ) )?
                    	    int alt32=2;
                    	    int LA32_0 = input.LA(1);

                    	    if ( ((LA32_0>=RULE_INT && LA32_0<=RULE_SINGLE_QUOTED_STRING)||(LA32_0>=RULE_UNQUOTED_STRING && LA32_0<=RULE_ESCAPED_ID)||(LA32_0>=17 && LA32_0<=54)||LA32_0==58||LA32_0==71||(LA32_0>=73 && LA32_0<=74)||LA32_0==76||LA32_0==80||(LA32_0>=83 && LA32_0<=85)||(LA32_0>=103 && LA32_0<=104)||(LA32_0>=106 && LA32_0<=118)||LA32_0==121||(LA32_0>=124 && LA32_0<=127)||LA32_0==134||(LA32_0>=139 && LA32_0<=140)) ) {
                    	        alt32=1;
                    	    }
                    	    switch (alt32) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1462:1: (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:1462:1: (lv_ownedDefaultExpressions_31_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:1463:3: lv_ownedDefaultExpressions_31_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_14);
                    	            lv_ownedDefaultExpressions_31_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_31_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:1484:6: (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:1484:6: (otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' )
                    	    // InternalOCLinEcore.g:1484:8: otherlv_33= 'derivation' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';'
                    	    {
                    	    otherlv_33=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getAttributeCSAccess().getDerivationKeyword_6_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:1488:1: ( ruleUnrestrictedName )?
                    	    int alt33=2;
                    	    int LA33_0 = input.LA(1);

                    	    if ( ((LA33_0>=RULE_SIMPLE_ID && LA33_0<=RULE_ESCAPED_ID)||LA33_0==17||(LA33_0>=19 && LA33_0<=53)||LA33_0==58||LA33_0==71||(LA33_0>=73 && LA33_0<=74)||LA33_0==76||LA33_0==80) ) {
                    	        alt33=1;
                    	    }
                    	    switch (alt33) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1489:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_17);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_35=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_35, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:1503:1: ( (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS ) )?
                    	    int alt34=2;
                    	    int LA34_0 = input.LA(1);

                    	    if ( ((LA34_0>=RULE_INT && LA34_0<=RULE_SINGLE_QUOTED_STRING)||(LA34_0>=RULE_UNQUOTED_STRING && LA34_0<=RULE_ESCAPED_ID)||(LA34_0>=17 && LA34_0<=54)||LA34_0==58||LA34_0==71||(LA34_0>=73 && LA34_0<=74)||LA34_0==76||LA34_0==80||(LA34_0>=83 && LA34_0<=85)||(LA34_0>=103 && LA34_0<=104)||(LA34_0>=106 && LA34_0<=118)||LA34_0==121||(LA34_0>=124 && LA34_0<=127)||LA34_0==134||(LA34_0>=139 && LA34_0<=140)) ) {
                    	        alt34=1;
                    	    }
                    	    switch (alt34) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1504:1: (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:1504:1: (lv_ownedDefaultExpressions_36_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:1505:3: lv_ownedDefaultExpressions_36_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_14);
                    	            lv_ownedDefaultExpressions_36_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_36_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_37=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    otherlv_38=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_38, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1530:7: otherlv_39= ';'
                    {
                    otherlv_39=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_39, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttributeCS"


    // $ANTLR start "entryRuleClassCS"
    // InternalOCLinEcore.g:1542:1: entryRuleClassCS returns [EObject current=null] : iv_ruleClassCS= ruleClassCS EOF ;
    public final EObject entryRuleClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassCS = null;


        try {
            // InternalOCLinEcore.g:1543:2: (iv_ruleClassCS= ruleClassCS EOF )
            // InternalOCLinEcore.g:1544:2: iv_ruleClassCS= ruleClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassCS=ruleClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassCS"


    // $ANTLR start "ruleClassCS"
    // InternalOCLinEcore.g:1551:1: ruleClassCS returns [EObject current=null] : (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) ;
    public final EObject ruleClassCS() throws RecognitionException {
        EObject current = null;

        EObject this_StructuredClassCS_0 = null;

        EObject this_DataTypeCS_1 = null;

        EObject this_EnumerationCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1554:28: ( (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) )
            // InternalOCLinEcore.g:1555:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            {
            // InternalOCLinEcore.g:1555:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            int alt37=3;
            switch ( input.LA(1) ) {
            case 19:
            case 23:
                {
                alt37=1;
                }
                break;
            case 25:
            case 42:
                {
                alt37=2;
                }
                break;
            case 29:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalOCLinEcore.g:1556:2: this_StructuredClassCS_0= ruleStructuredClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getStructuredClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuredClassCS_0=ruleStructuredClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuredClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1569:2: this_DataTypeCS_1= ruleDataTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getDataTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataTypeCS_1=ruleDataTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DataTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:1582:2: this_EnumerationCS_2= ruleEnumerationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getEnumerationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationCS_2=ruleEnumerationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassCS"


    // $ANTLR start "entryRuleDataTypeCS"
    // InternalOCLinEcore.g:1601:1: entryRuleDataTypeCS returns [EObject current=null] : iv_ruleDataTypeCS= ruleDataTypeCS EOF ;
    public final EObject entryRuleDataTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeCS = null;


        try {
            // InternalOCLinEcore.g:1602:2: (iv_ruleDataTypeCS= ruleDataTypeCS EOF )
            // InternalOCLinEcore.g:1603:2: iv_ruleDataTypeCS= ruleDataTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataTypeCS=ruleDataTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeCS"


    // $ANTLR start "ruleDataTypeCS"
    // InternalOCLinEcore.g:1610:1: ruleDataTypeCS returns [EObject current=null] : ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) ) ;
    public final EObject ruleDataTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPrimitive_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_instanceClassName_5_0=null;
        Token otherlv_6=null;
        Token lv_isSerializable_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedAnnotations_11_0 = null;

        EObject lv_ownedConstraints_12_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1613:28: ( ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) ) )
            // InternalOCLinEcore.g:1614:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) )
            {
            // InternalOCLinEcore.g:1614:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) )
            // InternalOCLinEcore.g:1614:2: ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' )
            {
            // InternalOCLinEcore.g:1614:2: ( (lv_isPrimitive_0_0= 'primitive' ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==42) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalOCLinEcore.g:1615:1: (lv_isPrimitive_0_0= 'primitive' )
                    {
                    // InternalOCLinEcore.g:1615:1: (lv_isPrimitive_0_0= 'primitive' )
                    // InternalOCLinEcore.g:1616:3: lv_isPrimitive_0_0= 'primitive'
                    {
                    lv_isPrimitive_0_0=(Token)match(input,42,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPrimitive_0_0, grammarAccess.getDataTypeCSAccess().getIsPrimitivePrimitiveKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPrimitive", true, "primitive");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDataTypeCSAccess().getDatatypeKeyword_1());

            }
            // InternalOCLinEcore.g:1633:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:1634:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:1634:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:1635:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_35);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:1651:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==54||LA39_0==81) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalOCLinEcore.g:1652:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:1652:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:1653:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1669:3: (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalOCLinEcore.g:1669:5: otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDataTypeCSAccess().getColonKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:1673:1: ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:1674:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:1674:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:1675:3: lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_5_0, grammarAccess.getDataTypeCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1691:4: (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==60) ) {
                int LA42_1 = input.LA(2);

                if ( ((LA42_1>=71 && LA42_1<=72)) ) {
                    alt42=1;
                }
                else if ( (LA42_1==61) ) {
                    int LA42_4 = input.LA(3);

                    if ( (LA42_4==57||LA42_4==60) ) {
                        alt42=1;
                    }
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalOCLinEcore.g:1691:6: otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}'
                    {
                    otherlv_6=(Token)match(input,60,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:1695:1: ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )?
                    int alt41=3;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==71) ) {
                        alt41=1;
                    }
                    else if ( (LA41_0==72) ) {
                        alt41=2;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalOCLinEcore.g:1695:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            {
                            // InternalOCLinEcore.g:1695:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            // InternalOCLinEcore.g:1696:1: (lv_isSerializable_7_0= 'serializable' )
                            {
                            // InternalOCLinEcore.g:1696:1: (lv_isSerializable_7_0= 'serializable' )
                            // InternalOCLinEcore.g:1697:3: lv_isSerializable_7_0= 'serializable'
                            {
                            lv_isSerializable_7_0=(Token)match(input,71,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_7_0, grammarAccess.getDataTypeCSAccess().getIsSerializableSerializableKeyword_5_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:1711:7: otherlv_8= '!serializable'
                            {
                            otherlv_8=(Token)match(input,72,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getDataTypeCSAccess().getSerializableKeyword_5_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:1719:3: ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==60) ) {
                alt44=1;
            }
            else if ( (LA44_0==57) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalOCLinEcore.g:1719:4: (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' )
                    {
                    // InternalOCLinEcore.g:1719:4: (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' )
                    // InternalOCLinEcore.g:1719:6: otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}'
                    {
                    otherlv_10=(Token)match(input,60,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalOCLinEcore.g:1723:1: ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )*
                    loop43:
                    do {
                        int alt43=3;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==58||LA43_0==73||LA43_0==80) ) {
                            alt43=1;
                        }
                        else if ( (LA43_0==22||LA43_0==53) ) {
                            alt43=2;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1723:2: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1723:2: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:1724:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:1724:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:1725:3: lv_ownedAnnotations_11_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_39);
                    	    lv_ownedAnnotations_11_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:1742:6: ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1742:6: ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:1743:1: (lv_ownedConstraints_12_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:1743:1: (lv_ownedConstraints_12_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:1744:3: lv_ownedConstraints_12_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_6_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_39);
                    	    lv_ownedConstraints_12_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_12_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1765:7: otherlv_14= ';'
                    {
                    otherlv_14=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getDataTypeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeCS"


    // $ANTLR start "entryRuleDetailCS"
    // InternalOCLinEcore.g:1777:1: entryRuleDetailCS returns [EObject current=null] : iv_ruleDetailCS= ruleDetailCS EOF ;
    public final EObject entryRuleDetailCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDetailCS = null;


        try {
            // InternalOCLinEcore.g:1778:2: (iv_ruleDetailCS= ruleDetailCS EOF )
            // InternalOCLinEcore.g:1779:2: iv_ruleDetailCS= ruleDetailCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDetailCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDetailCS=ruleDetailCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDetailCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDetailCS"


    // $ANTLR start "ruleDetailCS"
    // InternalOCLinEcore.g:1786:1: ruleDetailCS returns [EObject current=null] : ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* ) ;
    public final EObject ruleDetailCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token otherlv_1=null;
        Token lv_values_2_1=null;
        Token lv_values_2_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1789:28: ( ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* ) )
            // InternalOCLinEcore.g:1790:1: ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* )
            {
            // InternalOCLinEcore.g:1790:1: ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* )
            // InternalOCLinEcore.g:1790:2: ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )*
            {
            // InternalOCLinEcore.g:1790:2: ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) )
            // InternalOCLinEcore.g:1791:1: ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) )
            {
            // InternalOCLinEcore.g:1791:1: ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) )
            // InternalOCLinEcore.g:1792:1: (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING )
            {
            // InternalOCLinEcore.g:1792:1: (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( ((LA45_0>=RULE_SIMPLE_ID && LA45_0<=RULE_ESCAPED_ID)||LA45_0==17||(LA45_0>=19 && LA45_0<=53)||LA45_0==58||LA45_0==71||(LA45_0>=73 && LA45_0<=74)||LA45_0==76||LA45_0==80) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalOCLinEcore.g:1793:3: lv_name_0_1= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDetailCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_name_0_1=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDetailCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_0_1,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1808:8: lv_name_0_2= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDetailCSAccess().getNameSINGLE_QUOTED_STRINGTerminalRuleCall_0_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDetailCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"name",
                              		lv_name_0_2,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,62,FollowSets000.FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDetailCSAccess().getEqualsSignKeyword_1());

            }
            // InternalOCLinEcore.g:1830:1: ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=RULE_SINGLE_QUOTED_STRING && LA47_0<=RULE_ML_SINGLE_QUOTED_STRING)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalOCLinEcore.g:1831:1: ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) )
            	    {
            	    // InternalOCLinEcore.g:1831:1: ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) )
            	    // InternalOCLinEcore.g:1832:1: (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING )
            	    {
            	    // InternalOCLinEcore.g:1832:1: (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING )
            	    int alt46=2;
            	    int LA46_0 = input.LA(1);

            	    if ( (LA46_0==RULE_SINGLE_QUOTED_STRING) ) {
            	        alt46=1;
            	    }
            	    else if ( (LA46_0==RULE_ML_SINGLE_QUOTED_STRING) ) {
            	        alt46=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 46, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt46) {
            	        case 1 :
            	            // InternalOCLinEcore.g:1833:3: lv_values_2_1= RULE_SINGLE_QUOTED_STRING
            	            {
            	            lv_values_2_1=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_values_2_1, grammarAccess.getDetailCSAccess().getValuesSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_0());

            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDetailCSRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current,
            	                     			"values",
            	                      		lv_values_2_1,
            	                      		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalOCLinEcore.g:1848:8: lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING
            	            {
            	            lv_values_2_2=(Token)match(input,RULE_ML_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_values_2_2, grammarAccess.getDetailCSAccess().getValuesML_SINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1());

            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDetailCSRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current,
            	                     			"values",
            	                      		lv_values_2_2,
            	                      		"org.eclipse.ocl.xtext.base.Base.ML_SINGLE_QUOTED_STRING");

            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDetailCS"


    // $ANTLR start "entryRuleDocumentationCS"
    // InternalOCLinEcore.g:1874:1: entryRuleDocumentationCS returns [EObject current=null] : iv_ruleDocumentationCS= ruleDocumentationCS EOF ;
    public final EObject entryRuleDocumentationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentationCS = null;


        try {
            // InternalOCLinEcore.g:1875:2: (iv_ruleDocumentationCS= ruleDocumentationCS EOF )
            // InternalOCLinEcore.g:1876:2: iv_ruleDocumentationCS= ruleDocumentationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDocumentationCS=ruleDocumentationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentationCS"


    // $ANTLR start "ruleDocumentationCS"
    // InternalOCLinEcore.g:1883:1: ruleDocumentationCS returns [EObject current=null] : ( () otherlv_1= 'documentation' ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? otherlv_8= ';' ) ;
    public final EObject ruleDocumentationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_value_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_ownedDetails_4_0 = null;

        EObject lv_ownedDetails_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1886:28: ( ( () otherlv_1= 'documentation' ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? otherlv_8= ';' ) )
            // InternalOCLinEcore.g:1887:1: ( () otherlv_1= 'documentation' ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? otherlv_8= ';' )
            {
            // InternalOCLinEcore.g:1887:1: ( () otherlv_1= 'documentation' ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? otherlv_8= ';' )
            // InternalOCLinEcore.g:1887:2: () otherlv_1= 'documentation' ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? otherlv_8= ';'
            {
            // InternalOCLinEcore.g:1887:2: ()
            // InternalOCLinEcore.g:1888:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDocumentationCSAccess().getDocumentationCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDocumentationCSAccess().getDocumentationKeyword_1());

            }
            // InternalOCLinEcore.g:1900:1: ( (lv_value_2_0= RULE_SINGLE_QUOTED_STRING ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalOCLinEcore.g:1901:1: (lv_value_2_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:1901:1: (lv_value_2_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:1902:3: lv_value_2_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_value_2_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getDocumentationCSAccess().getValueSINGLE_QUOTED_STRINGTerminalRuleCall_2_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocumentationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"value",
                              		lv_value_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1918:3: (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==54) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalOCLinEcore.g:1918:5: otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,54,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDocumentationCSAccess().getLeftParenthesisKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:1922:1: ( (lv_ownedDetails_4_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:1923:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:1923:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    // InternalOCLinEcore.g:1924:3: lv_ownedDetails_4_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDocumentationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_ownedDetails_4_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDocumentationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:1940:2: (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==59) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1940:4: otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    {
                    	    otherlv_5=(Token)match(input,59,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getDocumentationCSAccess().getCommaKeyword_3_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:1944:1: ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:1945:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:1945:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:1946:3: lv_ownedDetails_6_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDocumentationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_ownedDetails_6_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDocumentationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_6_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,55,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDocumentationCSAccess().getRightParenthesisKeyword_3_3());

                    }

                    }
                    break;

            }

            otherlv_8=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getDocumentationCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentationCS"


    // $ANTLR start "entryRuleEnumerationCS"
    // InternalOCLinEcore.g:1978:1: entryRuleEnumerationCS returns [EObject current=null] : iv_ruleEnumerationCS= ruleEnumerationCS EOF ;
    public final EObject entryRuleEnumerationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationCS = null;


        try {
            // InternalOCLinEcore.g:1979:2: (iv_ruleEnumerationCS= ruleEnumerationCS EOF )
            // InternalOCLinEcore.g:1980:2: iv_ruleEnumerationCS= ruleEnumerationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationCS=ruleEnumerationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationCS"


    // $ANTLR start "ruleEnumerationCS"
    // InternalOCLinEcore.g:1987:1: ruleEnumerationCS returns [EObject current=null] : (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) ) ;
    public final EObject ruleEnumerationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_instanceClassName_4_0=null;
        Token otherlv_5=null;
        Token lv_isSerializable_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedSignature_2_0 = null;

        EObject lv_ownedAnnotations_10_0 = null;

        EObject lv_ownedLiterals_11_0 = null;

        EObject lv_ownedConstraints_12_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1990:28: ( (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) ) )
            // InternalOCLinEcore.g:1991:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) )
            {
            // InternalOCLinEcore.g:1991:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' ) )
            // InternalOCLinEcore.g:1991:3: otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' )
            {
            otherlv_0=(Token)match(input,29,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnumerationCSAccess().getEnumKeyword_0());

            }
            // InternalOCLinEcore.g:1995:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:1996:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:1996:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:1997:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_35);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:2013:2: ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==54||LA51_0==81) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalOCLinEcore.g:2014:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:2014:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:2015:3: lv_ownedSignature_2_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_ownedSignature_2_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2031:3: (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==56) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalOCLinEcore.g:2031:5: otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationCSAccess().getColonKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:2035:1: ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:2036:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:2036:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:2037:3: lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_4_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_4_0, grammarAccess.getEnumerationCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2053:4: (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==60) ) {
                int LA54_1 = input.LA(2);

                if ( ((LA54_1>=71 && LA54_1<=72)) ) {
                    alt54=1;
                }
                else if ( (LA54_1==61) ) {
                    int LA54_4 = input.LA(3);

                    if ( (LA54_4==57||LA54_4==60) ) {
                        alt54=1;
                    }
                }
            }
            switch (alt54) {
                case 1 :
                    // InternalOCLinEcore.g:2053:6: otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}'
                    {
                    otherlv_5=(Token)match(input,60,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:2057:1: ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )?
                    int alt53=3;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==71) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==72) ) {
                        alt53=2;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalOCLinEcore.g:2057:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            {
                            // InternalOCLinEcore.g:2057:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            // InternalOCLinEcore.g:2058:1: (lv_isSerializable_6_0= 'serializable' )
                            {
                            // InternalOCLinEcore.g:2058:1: (lv_isSerializable_6_0= 'serializable' )
                            // InternalOCLinEcore.g:2059:3: lv_isSerializable_6_0= 'serializable'
                            {
                            lv_isSerializable_6_0=(Token)match(input,71,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_6_0, grammarAccess.getEnumerationCSAccess().getIsSerializableSerializableKeyword_4_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:2073:7: otherlv_7= '!serializable'
                            {
                            otherlv_7=(Token)match(input,72,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getEnumerationCSAccess().getSerializableKeyword_4_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2081:3: ( (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' ) | otherlv_14= ';' )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==60) ) {
                alt56=1;
            }
            else if ( (LA56_0==57) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalOCLinEcore.g:2081:4: (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' )
                    {
                    // InternalOCLinEcore.g:2081:4: (otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}' )
                    // InternalOCLinEcore.g:2081:6: otherlv_9= '{' ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )* otherlv_13= '}'
                    {
                    otherlv_9=(Token)match(input,60,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalOCLinEcore.g:2085:1: ( ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) ) )*
                    loop55:
                    do {
                        int alt55=4;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt55=1;
                            }
                            break;
                        case RULE_SIMPLE_ID:
                        case RULE_ESCAPED_ID:
                        case 17:
                        case 19:
                        case 20:
                        case 21:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 74:
                            {
                            alt55=2;
                            }
                            break;
                        case 22:
                            {
                            int LA55_4 = input.LA(2);

                            if ( (LA55_4==53) ) {
                                alt55=3;
                            }
                            else if ( ((LA55_4>=56 && LA55_4<=57)||LA55_4==60||LA55_4==62) ) {
                                alt55=2;
                            }


                            }
                            break;
                        case 53:
                            {
                            alt55=3;
                            }
                            break;

                        }

                        switch (alt55) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2085:2: ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2085:2: ( (lv_ownedAnnotations_10_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:2086:1: (lv_ownedAnnotations_10_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:2086:1: (lv_ownedAnnotations_10_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:2087:3: lv_ownedAnnotations_10_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedAnnotations_10_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_10_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:2104:6: ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2104:6: ( (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS ) )
                    	    // InternalOCLinEcore.g:2105:1: (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS )
                    	    {
                    	    // InternalOCLinEcore.g:2105:1: (lv_ownedLiterals_11_0= ruleEnumerationLiteralCS )
                    	    // InternalOCLinEcore.g:2106:3: lv_ownedLiterals_11_0= ruleEnumerationLiteralCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedLiterals_11_0=ruleEnumerationLiteralCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedLiterals",
                    	              		lv_ownedLiterals_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.EnumerationLiteralCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:2123:6: ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2123:6: ( (lv_ownedConstraints_12_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:2124:1: (lv_ownedConstraints_12_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:2124:1: (lv_ownedConstraints_12_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:2125:3: lv_ownedConstraints_12_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_5_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedConstraints_12_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_12_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2146:7: otherlv_14= ';'
                    {
                    otherlv_14=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getEnumerationCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationCS"


    // $ANTLR start "entryRuleEnumerationLiteralCS"
    // InternalOCLinEcore.g:2158:1: entryRuleEnumerationLiteralCS returns [EObject current=null] : iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF ;
    public final EObject entryRuleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationLiteralCS = null;


        try {
            // InternalOCLinEcore.g:2159:2: (iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF )
            // InternalOCLinEcore.g:2160:2: iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralCS=ruleEnumerationLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralCS"


    // $ANTLR start "ruleEnumerationLiteralCS"
    // InternalOCLinEcore.g:2167:1: ruleEnumerationLiteralCS returns [EObject current=null] : ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )? ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' ) ) ;
    public final EObject ruleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_literal_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_value_6_0 = null;

        EObject lv_ownedAnnotations_8_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2170:28: ( ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )? ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' ) ) )
            // InternalOCLinEcore.g:2171:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )? ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' ) )
            {
            // InternalOCLinEcore.g:2171:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )? ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' ) )
            // InternalOCLinEcore.g:2171:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )? ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' )
            {
            // InternalOCLinEcore.g:2171:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==74) ) {
                alt57=1;
            }
            else if ( ((LA57_0>=RULE_SIMPLE_ID && LA57_0<=RULE_ESCAPED_ID)||LA57_0==17||(LA57_0>=19 && LA57_0<=52)) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalOCLinEcore.g:2171:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    {
                    // InternalOCLinEcore.g:2171:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    // InternalOCLinEcore.g:2171:5: otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) )
                    {
                    otherlv_0=(Token)match(input,74,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralKeyword_0_0_0());

                    }
                    // InternalOCLinEcore.g:2175:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:2176:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:2176:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:2177:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2194:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    {
                    // InternalOCLinEcore.g:2194:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    // InternalOCLinEcore.g:2195:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    {
                    // InternalOCLinEcore.g:2195:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    // InternalOCLinEcore.g:2196:3: lv_name_2_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameEnumerationLiteralNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_name_2_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.EnumerationLiteralName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2212:3: (otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==56) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalOCLinEcore.g:2212:5: otherlv_3= ':' ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationLiteralCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:2216:1: ( (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:2217:1: (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:2217:1: (lv_literal_4_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:2218:3: lv_literal_4_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_literal_4_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literal_4_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralSINGLE_QUOTED_STRINGTerminalRuleCall_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"literal",
                              		lv_literal_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2234:4: (otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==62) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalOCLinEcore.g:2234:6: otherlv_5= '=' ( (lv_value_6_0= ruleSIGNED ) )
                    {
                    otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationLiteralCSAccess().getEqualsSignKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:2238:1: ( (lv_value_6_0= ruleSIGNED ) )
                    // InternalOCLinEcore.g:2239:1: (lv_value_6_0= ruleSIGNED )
                    {
                    // InternalOCLinEcore.g:2239:1: (lv_value_6_0= ruleSIGNED )
                    // InternalOCLinEcore.g:2240:3: lv_value_6_0= ruleSIGNED
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getValueSIGNEDParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_value_6_0=ruleSIGNED();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"value",
                              		lv_value_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SIGNED");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2256:4: ( (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' ) | otherlv_10= ';' )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==60) ) {
                alt61=1;
            }
            else if ( (LA61_0==57) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalOCLinEcore.g:2256:5: (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' )
                    {
                    // InternalOCLinEcore.g:2256:5: (otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}' )
                    // InternalOCLinEcore.g:2256:7: otherlv_7= '{' ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )* otherlv_9= '}'
                    {
                    otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getEnumerationLiteralCSAccess().getLeftCurlyBracketKeyword_3_0_0());

                    }
                    // InternalOCLinEcore.g:2260:1: ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==58||LA60_0==73||LA60_0==80) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2261:1: (lv_ownedAnnotations_8_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:2261:1: (lv_ownedAnnotations_8_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:2262:3: lv_ownedAnnotations_8_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_3_0_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_ownedAnnotations_8_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_8_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEnumerationLiteralCSAccess().getRightCurlyBracketKeyword_3_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2283:7: otherlv_10= ';'
                    {
                    otherlv_10=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getEnumerationLiteralCSAccess().getSemicolonKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralCS"


    // $ANTLR start "entryRuleImportCS"
    // InternalOCLinEcore.g:2295:1: entryRuleImportCS returns [EObject current=null] : iv_ruleImportCS= ruleImportCS EOF ;
    public final EObject entryRuleImportCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportCS = null;


        try {
            // InternalOCLinEcore.g:2296:2: (iv_ruleImportCS= ruleImportCS EOF )
            // InternalOCLinEcore.g:2297:2: iv_ruleImportCS= ruleImportCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImportCS=ruleImportCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportCS"


    // $ANTLR start "ruleImportCS"
    // InternalOCLinEcore.g:2304:1: ruleImportCS returns [EObject current=null] : ( (otherlv_0= 'import' | otherlv_1= 'library' ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )? ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) ) ( (lv_isAll_5_0= '::*' ) )? otherlv_6= ';' ) ;
    public final EObject ruleImportCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_isAll_5_0=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedPathName_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2307:28: ( ( (otherlv_0= 'import' | otherlv_1= 'library' ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )? ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) ) ( (lv_isAll_5_0= '::*' ) )? otherlv_6= ';' ) )
            // InternalOCLinEcore.g:2308:1: ( (otherlv_0= 'import' | otherlv_1= 'library' ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )? ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) ) ( (lv_isAll_5_0= '::*' ) )? otherlv_6= ';' )
            {
            // InternalOCLinEcore.g:2308:1: ( (otherlv_0= 'import' | otherlv_1= 'library' ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )? ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) ) ( (lv_isAll_5_0= '::*' ) )? otherlv_6= ';' )
            // InternalOCLinEcore.g:2308:2: (otherlv_0= 'import' | otherlv_1= 'library' ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )? ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) ) ( (lv_isAll_5_0= '::*' ) )? otherlv_6= ';'
            {
            // InternalOCLinEcore.g:2308:2: (otherlv_0= 'import' | otherlv_1= 'library' )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==32) ) {
                alt62=1;
            }
            else if ( (LA62_0==36) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalOCLinEcore.g:2308:4: otherlv_0= 'import'
                    {
                    otherlv_0=(Token)match(input,32,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getImportCSAccess().getImportKeyword_0_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2313:7: otherlv_1= 'library'
                    {
                    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImportCSAccess().getLibraryKeyword_0_1());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2317:2: ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalOCLinEcore.g:2317:3: ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':'
                    {
                    // InternalOCLinEcore.g:2317:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:2318:1: (lv_name_2_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:2318:1: (lv_name_2_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:2319:3: lv_name_2_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getImportCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_name_2_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getImportCSAccess().getColonKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2339:3: ( (lv_ownedPathName_4_0= ruleURIPathNameCS ) )
            // InternalOCLinEcore.g:2340:1: (lv_ownedPathName_4_0= ruleURIPathNameCS )
            {
            // InternalOCLinEcore.g:2340:1: (lv_ownedPathName_4_0= ruleURIPathNameCS )
            // InternalOCLinEcore.g:2341:3: lv_ownedPathName_4_0= ruleURIPathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_47);
            lv_ownedPathName_4_0=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_4_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:2357:2: ( (lv_isAll_5_0= '::*' ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==75) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalOCLinEcore.g:2358:1: (lv_isAll_5_0= '::*' )
                    {
                    // InternalOCLinEcore.g:2358:1: (lv_isAll_5_0= '::*' )
                    // InternalOCLinEcore.g:2359:3: lv_isAll_5_0= '::*'
                    {
                    lv_isAll_5_0=(Token)match(input,75,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAll_5_0, grammarAccess.getImportCSAccess().getIsAllColonColonAsteriskKeyword_3_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAll", true, "::*");

                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getImportCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportCS"


    // $ANTLR start "entryRuleModelElementCS"
    // InternalOCLinEcore.g:2384:1: entryRuleModelElementCS returns [EObject current=null] : iv_ruleModelElementCS= ruleModelElementCS EOF ;
    public final EObject entryRuleModelElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelElementCS = null;


        try {
            // InternalOCLinEcore.g:2385:2: (iv_ruleModelElementCS= ruleModelElementCS EOF )
            // InternalOCLinEcore.g:2386:2: iv_ruleModelElementCS= ruleModelElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModelElementCS=ruleModelElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelElementCS"


    // $ANTLR start "ruleModelElementCS"
    // InternalOCLinEcore.g:2393:1: ruleModelElementCS returns [EObject current=null] : (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS ) ;
    public final EObject ruleModelElementCS() throws RecognitionException {
        EObject current = null;

        EObject this_ClassCS_0 = null;

        EObject this_EnumerationLiteralCS_1 = null;

        EObject this_OperationCS_2 = null;

        EObject this_PackageCS_3 = null;

        EObject this_StructuralFeatureCS_4 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2396:28: ( (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS ) )
            // InternalOCLinEcore.g:2397:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )
            {
            // InternalOCLinEcore.g:2397:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )
            int alt65=5;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalOCLinEcore.g:2398:2: this_ClassCS_0= ruleClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassCS_0=ruleClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2411:2: this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getEnumerationLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationLiteralCS_1=ruleEnumerationLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:2424:2: this_OperationCS_2= ruleOperationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getOperationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OperationCS_2=ruleOperationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_OperationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:2437:2: this_PackageCS_3= rulePackageCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getPackageCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PackageCS_3=rulePackageCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PackageCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:2450:2: this_StructuralFeatureCS_4= ruleStructuralFeatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getStructuralFeatureCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuralFeatureCS_4=ruleStructuralFeatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuralFeatureCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelElementCS"


    // $ANTLR start "entryRuleModelElementRefCS"
    // InternalOCLinEcore.g:2469:1: entryRuleModelElementRefCS returns [EObject current=null] : iv_ruleModelElementRefCS= ruleModelElementRefCS EOF ;
    public final EObject entryRuleModelElementRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelElementRefCS = null;


        try {
            // InternalOCLinEcore.g:2470:2: (iv_ruleModelElementRefCS= ruleModelElementRefCS EOF )
            // InternalOCLinEcore.g:2471:2: iv_ruleModelElementRefCS= ruleModelElementRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelElementRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModelElementRefCS=ruleModelElementRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelElementRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelElementRefCS"


    // $ANTLR start "ruleModelElementRefCS"
    // InternalOCLinEcore.g:2478:1: ruleModelElementRefCS returns [EObject current=null] : (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' ) ;
    public final EObject ruleModelElementRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedPathName_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2481:28: ( (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' ) )
            // InternalOCLinEcore.g:2482:1: (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' )
            {
            // InternalOCLinEcore.g:2482:1: (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' )
            // InternalOCLinEcore.g:2482:3: otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,45,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getModelElementRefCSAccess().getReferenceKeyword_0());

            }
            // InternalOCLinEcore.g:2486:1: ( (lv_ownedPathName_1_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:2487:1: (lv_ownedPathName_1_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:2487:1: (lv_ownedPathName_1_0= rulePathNameCS )
            // InternalOCLinEcore.g:2488:3: lv_ownedPathName_1_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getModelElementRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_ownedPathName_1_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getModelElementRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_1_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getModelElementRefCSAccess().getSemicolonKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelElementRefCS"


    // $ANTLR start "entryRuleOperationCS"
    // InternalOCLinEcore.g:2516:1: entryRuleOperationCS returns [EObject current=null] : iv_ruleOperationCS= ruleOperationCS EOF ;
    public final EObject entryRuleOperationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCS = null;


        try {
            // InternalOCLinEcore.g:2517:2: (iv_ruleOperationCS= ruleOperationCS EOF )
            // InternalOCLinEcore.g:2518:2: iv_ruleOperationCS= ruleOperationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOperationCS=ruleOperationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCS"


    // $ANTLR start "ruleOperationCS"
    // InternalOCLinEcore.g:2525:1: ruleOperationCS returns [EObject current=null] : ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'operation' ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )? otherlv_8= ')' (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )? (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' ) ) ;
    public final EObject ruleOperationCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStatic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        EObject lv_ownedSignature_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedParameters_5_0 = null;

        EObject lv_ownedParameters_7_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExceptions_12_0 = null;

        EObject lv_ownedExceptions_14_0 = null;

        EObject lv_ownedAnnotations_27_0 = null;

        EObject lv_ownedPreconditions_28_0 = null;

        EObject lv_ownedBodyExpressions_32_0 = null;

        EObject lv_ownedPostconditions_34_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2528:28: ( ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'operation' ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )? otherlv_8= ')' (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )? (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' ) ) )
            // InternalOCLinEcore.g:2529:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'operation' ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )? otherlv_8= ')' (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )? (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' ) )
            {
            // InternalOCLinEcore.g:2529:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'operation' ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )? otherlv_8= ')' (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )? (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' ) )
            // InternalOCLinEcore.g:2529:2: ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'operation' ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )? otherlv_8= ')' (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )? (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )? ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' )
            {
            // InternalOCLinEcore.g:2529:2: ( (lv_isStatic_0_0= 'static' ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==47) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalOCLinEcore.g:2530:1: (lv_isStatic_0_0= 'static' )
                    {
                    // InternalOCLinEcore.g:2530:1: (lv_isStatic_0_0= 'static' )
                    // InternalOCLinEcore.g:2531:3: lv_isStatic_0_0= 'static'
                    {
                    lv_isStatic_0_0=(Token)match(input,47,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStatic_0_0, grammarAccess.getOperationCSAccess().getIsStaticStaticKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStatic", true, "static");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,37,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getOperationCSAccess().getOperationKeyword_1());

            }
            // InternalOCLinEcore.g:2548:1: ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==54||LA67_0==81) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalOCLinEcore.g:2549:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:2549:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:2550:3: lv_ownedSignature_2_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_3);
                    lv_ownedSignature_2_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2566:3: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:2567:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:2567:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:2568:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getOperationCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_50);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalOCLinEcore.g:2588:1: ( ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_SIMPLE_ID && LA69_0<=RULE_ESCAPED_ID)||LA69_0==17||(LA69_0>=19 && LA69_0<=53)||LA69_0==58||LA69_0==71||(LA69_0>=73 && LA69_0<=74)||LA69_0==76||LA69_0==80) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalOCLinEcore.g:2588:2: ( (lv_ownedParameters_5_0= ruleParameterCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )*
                    {
                    // InternalOCLinEcore.g:2588:2: ( (lv_ownedParameters_5_0= ruleParameterCS ) )
                    // InternalOCLinEcore.g:2589:1: (lv_ownedParameters_5_0= ruleParameterCS )
                    {
                    // InternalOCLinEcore.g:2589:1: (lv_ownedParameters_5_0= ruleParameterCS )
                    // InternalOCLinEcore.g:2590:3: lv_ownedParameters_5_0= ruleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_ownedParameters_5_0=ruleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_5_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2606:2: (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==59) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2606:4: otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParameterCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getOperationCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:2610:1: ( (lv_ownedParameters_7_0= ruleParameterCS ) )
                    	    // InternalOCLinEcore.g:2611:1: (lv_ownedParameters_7_0= ruleParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:2611:1: (lv_ownedParameters_7_0= ruleParameterCS )
                    	    // InternalOCLinEcore.g:2612:3: lv_ownedParameters_7_0= ruleParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_ownedParameters_7_0=ruleParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_7_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,55,FollowSets000.FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_6());

            }
            // InternalOCLinEcore.g:2632:1: (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==56) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalOCLinEcore.g:2632:3: otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_9=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getOperationCSAccess().getColonKeyword_7_0());

                    }
                    // InternalOCLinEcore.g:2636:1: ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:2637:1: (lv_ownedType_10_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:2637:1: (lv_ownedType_10_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:2638:3: lv_ownedType_10_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_7_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_ownedType_10_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_10_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2654:4: (otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )* )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==48) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalOCLinEcore.g:2654:6: otherlv_11= 'throws' ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) ) (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_11=(Token)match(input,48,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getOperationCSAccess().getThrowsKeyword_8_0());

                    }
                    // InternalOCLinEcore.g:2658:1: ( (lv_ownedExceptions_12_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:2659:1: (lv_ownedExceptions_12_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:2659:1: (lv_ownedExceptions_12_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:2660:3: lv_ownedExceptions_12_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_ownedExceptions_12_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExceptions",
                              		lv_ownedExceptions_12_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2676:2: (otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) ) )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==59) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2676:4: otherlv_13= ',' ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_13=(Token)match(input,59,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_13, grammarAccess.getOperationCSAccess().getCommaKeyword_8_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:2680:1: ( (lv_ownedExceptions_14_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:2681:1: (lv_ownedExceptions_14_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:2681:1: (lv_ownedExceptions_14_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:2682:3: lv_ownedExceptions_14_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_ownedExceptions_14_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExceptions",
                    	              		lv_ownedExceptions_14_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalOCLinEcore.g:2698:6: (otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}' )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==60) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==28||LA76_1==38||(LA76_1>=49 && LA76_1<=50)||LA76_1==63||LA76_1==65||(LA76_1>=67 && LA76_1<=68)) ) {
                    alt76=1;
                }
            }
            switch (alt76) {
                case 1 :
                    // InternalOCLinEcore.g:2698:8: otherlv_15= '{' ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+ otherlv_25= '}'
                    {
                    otherlv_15=(Token)match(input,60,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_9_0());

                    }
                    // InternalOCLinEcore.g:2702:1: ( ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )? )+
                    int cnt75=0;
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==28||LA75_0==38||(LA75_0>=49 && LA75_0<=50)||LA75_0==63||LA75_0==65||(LA75_0>=67 && LA75_0<=68)) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2702:2: ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) ) (otherlv_24= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:2702:2: ( ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) )
                    	    int alt73=8;
                    	    switch ( input.LA(1) ) {
                    	    case 28:
                    	        {
                    	        alt73=1;
                    	        }
                    	        break;
                    	    case 63:
                    	        {
                    	        alt73=2;
                    	        }
                    	        break;
                    	    case 38:
                    	        {
                    	        alt73=3;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt73=4;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt73=5;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt73=6;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt73=7;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt73=8;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 73, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt73) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:2702:3: ( (lv_qualifiers_16_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2702:3: ( (lv_qualifiers_16_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:2703:1: (lv_qualifiers_16_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:2703:1: (lv_qualifiers_16_0= 'derived' )
                    	            // InternalOCLinEcore.g:2704:3: lv_qualifiers_16_0= 'derived'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,28,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:2718:6: ( (lv_qualifiers_17_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2718:6: ( (lv_qualifiers_17_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:2719:1: (lv_qualifiers_17_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:2719:1: (lv_qualifiers_17_0= '!derived' )
                    	            // InternalOCLinEcore.g:2720:3: lv_qualifiers_17_0= '!derived'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,63,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:2734:6: ( (lv_qualifiers_18_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2734:6: ( (lv_qualifiers_18_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:2735:1: (lv_qualifiers_18_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:2735:1: (lv_qualifiers_18_0= 'ordered' )
                    	            // InternalOCLinEcore.g:2736:3: lv_qualifiers_18_0= 'ordered'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,38,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:2750:6: ( (lv_qualifiers_19_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2750:6: ( (lv_qualifiers_19_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:2751:1: (lv_qualifiers_19_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:2751:1: (lv_qualifiers_19_0= '!ordered' )
                    	            // InternalOCLinEcore.g:2752:3: lv_qualifiers_19_0= '!ordered'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,65,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:2766:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2766:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:2767:1: (lv_qualifiers_20_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:2767:1: (lv_qualifiers_20_0= 'transient' )
                    	            // InternalOCLinEcore.g:2768:3: lv_qualifiers_20_0= 'transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,49,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getOperationCSAccess().getQualifiersTransientKeyword_9_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:2782:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2782:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:2783:1: (lv_qualifiers_21_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:2783:1: (lv_qualifiers_21_0= '!transient' )
                    	            // InternalOCLinEcore.g:2784:3: lv_qualifiers_21_0= '!transient'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,67,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getOperationCSAccess().getQualifiersTransientKeyword_9_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:2798:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2798:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:2799:1: (lv_qualifiers_22_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:2799:1: (lv_qualifiers_22_0= 'unique' )
                    	            // InternalOCLinEcore.g:2800:3: lv_qualifiers_22_0= 'unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,50,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:2814:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2814:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:2815:1: (lv_qualifiers_23_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:2815:1: (lv_qualifiers_23_0= '!unique' )
                    	            // InternalOCLinEcore.g:2816:3: lv_qualifiers_23_0= '!unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,68,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:2829:3: (otherlv_24= ',' )?
                    	    int alt74=2;
                    	    int LA74_0 = input.LA(1);

                    	    if ( (LA74_0==59) ) {
                    	        alt74=1;
                    	    }
                    	    switch (alt74) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:2829:5: otherlv_24= ','
                    	            {
                    	            otherlv_24=(Token)match(input,59,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_24, grammarAccess.getOperationCSAccess().getCommaKeyword_9_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt75 >= 1 ) break loop75;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(75, input);
                                throw eee;
                        }
                        cnt75++;
                    } while (true);

                    otherlv_25=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_25, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_9_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2837:3: ( (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' ) | otherlv_36= ';' )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==60) ) {
                alt80=1;
            }
            else if ( (LA80_0==57) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalOCLinEcore.g:2837:4: (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' )
                    {
                    // InternalOCLinEcore.g:2837:4: (otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}' )
                    // InternalOCLinEcore.g:2837:6: otherlv_26= '{' ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )* otherlv_35= '}'
                    {
                    otherlv_26=(Token)match(input,60,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_10_0_0());

                    }
                    // InternalOCLinEcore.g:2841:1: ( ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) ) | (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' ) | ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) ) )*
                    loop79:
                    do {
                        int alt79=5;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt79=1;
                            }
                            break;
                        case 41:
                            {
                            alt79=2;
                            }
                            break;
                        case 21:
                            {
                            alt79=3;
                            }
                            break;
                        case 40:
                            {
                            alt79=4;
                            }
                            break;

                        }

                        switch (alt79) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2841:2: ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2841:2: ( (lv_ownedAnnotations_27_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:2842:1: (lv_ownedAnnotations_27_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:2842:1: (lv_ownedAnnotations_27_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:2843:3: lv_ownedAnnotations_27_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_10_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_ownedAnnotations_27_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_27_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:2860:6: ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2860:6: ( (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS ) )
                    	    // InternalOCLinEcore.g:2861:1: (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:2861:1: (lv_ownedPreconditions_28_0= rulePreconditionConstraintCS )
                    	    // InternalOCLinEcore.g:2862:3: lv_ownedPreconditions_28_0= rulePreconditionConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedPreconditionsPreconditionConstraintCSParserRuleCall_10_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_ownedPreconditions_28_0=rulePreconditionConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPreconditions",
                    	              		lv_ownedPreconditions_28_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PreconditionConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:2879:6: (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:2879:6: (otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';' )
                    	    // InternalOCLinEcore.g:2879:8: otherlv_29= 'body' ( ruleUnrestrictedName )? otherlv_31= ':' ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )? otherlv_33= ';'
                    	    {
                    	    otherlv_29=(Token)match(input,21,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_29, grammarAccess.getOperationCSAccess().getBodyKeyword_10_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:2883:1: ( ruleUnrestrictedName )?
                    	    int alt77=2;
                    	    int LA77_0 = input.LA(1);

                    	    if ( ((LA77_0>=RULE_SIMPLE_ID && LA77_0<=RULE_ESCAPED_ID)||LA77_0==17||(LA77_0>=19 && LA77_0<=53)||LA77_0==58||LA77_0==71||(LA77_0>=73 && LA77_0<=74)||LA77_0==76||LA77_0==80) ) {
                    	        alt77=1;
                    	    }
                    	    switch (alt77) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:2884:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getOperationCSAccess().getUnrestrictedNameParserRuleCall_10_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_17);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_31=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_31, grammarAccess.getOperationCSAccess().getColonKeyword_10_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:2898:1: ( (lv_ownedBodyExpressions_32_0= ruleSpecificationCS ) )?
                    	    int alt78=2;
                    	    int LA78_0 = input.LA(1);

                    	    if ( ((LA78_0>=RULE_INT && LA78_0<=RULE_SINGLE_QUOTED_STRING)||(LA78_0>=RULE_UNQUOTED_STRING && LA78_0<=RULE_ESCAPED_ID)||(LA78_0>=17 && LA78_0<=54)||LA78_0==58||LA78_0==71||(LA78_0>=73 && LA78_0<=74)||LA78_0==76||LA78_0==80||(LA78_0>=83 && LA78_0<=85)||(LA78_0>=103 && LA78_0<=104)||(LA78_0>=106 && LA78_0<=118)||LA78_0==121||(LA78_0>=124 && LA78_0<=127)||LA78_0==134||(LA78_0>=139 && LA78_0<=140)) ) {
                    	        alt78=1;
                    	    }
                    	    switch (alt78) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:2899:1: (lv_ownedBodyExpressions_32_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:2899:1: (lv_ownedBodyExpressions_32_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:2900:3: lv_ownedBodyExpressions_32_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedBodyExpressionsSpecificationCSParserRuleCall_10_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_14);
                    	            lv_ownedBodyExpressions_32_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedBodyExpressions",
                    	                      		lv_ownedBodyExpressions_32_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_33=(Token)match(input,57,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:2921:6: ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2921:6: ( (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS ) )
                    	    // InternalOCLinEcore.g:2922:1: (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:2922:1: (lv_ownedPostconditions_34_0= rulePostconditionConstraintCS )
                    	    // InternalOCLinEcore.g:2923:3: lv_ownedPostconditions_34_0= rulePostconditionConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedPostconditionsPostconditionConstraintCSParserRuleCall_10_0_1_3_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_ownedPostconditions_34_0=rulePostconditionConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPostconditions",
                    	              		lv_ownedPostconditions_34_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PostconditionConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_10_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2944:7: otherlv_36= ';'
                    {
                    otherlv_36=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCS"


    // $ANTLR start "entryRulePackageCS"
    // InternalOCLinEcore.g:2956:1: entryRulePackageCS returns [EObject current=null] : iv_rulePackageCS= rulePackageCS EOF ;
    public final EObject entryRulePackageCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageCS = null;


        try {
            // InternalOCLinEcore.g:2957:2: (iv_rulePackageCS= rulePackageCS EOF )
            // InternalOCLinEcore.g:2958:2: iv_rulePackageCS= rulePackageCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackageCS=rulePackageCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageCS"


    // $ANTLR start "rulePackageCS"
    // InternalOCLinEcore.g:2965:1: rulePackageCS returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )? (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )? ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) ;
    public final EObject rulePackageCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_nsPrefix_3_0 = null;

        AntlrDatatypeRuleToken lv_nsURI_5_0 = null;

        EObject lv_ownedAnnotations_7_0 = null;

        EObject lv_ownedPackages_8_0 = null;

        EObject lv_ownedClasses_9_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2968:28: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )? (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )? ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) )
            // InternalOCLinEcore.g:2969:1: (otherlv_0= 'package' ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )? (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )? ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            {
            // InternalOCLinEcore.g:2969:1: (otherlv_0= 'package' ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )? (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )? ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            // InternalOCLinEcore.g:2969:3: otherlv_0= 'package' ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )? (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )? ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            {
            otherlv_0=(Token)match(input,39,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPackageCSAccess().getPackageKeyword_0());

            }
            // InternalOCLinEcore.g:2973:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:2974:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:2974:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:2975:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPackageCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:2991:2: (otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==56) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalOCLinEcore.g:2991:4: otherlv_2= ':' ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) )
                    {
                    otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPackageCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:2995:1: ( (lv_nsPrefix_3_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:2996:1: (lv_nsPrefix_3_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:2996:1: (lv_nsPrefix_3_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:2997:3: lv_nsPrefix_3_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPackageCSAccess().getNsPrefixUnrestrictedNameParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_28);
                    lv_nsPrefix_3_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsPrefix",
                              		lv_nsPrefix_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3013:4: (otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==62) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalOCLinEcore.g:3013:6: otherlv_4= '=' ( (lv_nsURI_5_0= ruleURI ) )
                    {
                    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPackageCSAccess().getEqualsSignKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:3017:1: ( (lv_nsURI_5_0= ruleURI ) )
                    // InternalOCLinEcore.g:3018:1: (lv_nsURI_5_0= ruleURI )
                    {
                    // InternalOCLinEcore.g:3018:1: (lv_nsURI_5_0= ruleURI )
                    // InternalOCLinEcore.g:3019:3: lv_nsURI_5_0= ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPackageCSAccess().getNsURIURIParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_nsURI_5_0=ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsURI",
                              		lv_nsURI_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.URI");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3035:4: ( (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==60) ) {
                alt84=1;
            }
            else if ( (LA84_0==57) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalOCLinEcore.g:3035:5: (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' )
                    {
                    // InternalOCLinEcore.g:3035:5: (otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}' )
                    // InternalOCLinEcore.g:3035:7: otherlv_6= '{' ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,60,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getPackageCSAccess().getLeftCurlyBracketKeyword_4_0_0());

                    }
                    // InternalOCLinEcore.g:3039:1: ( ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_8_0= rulePackageCS ) ) | ( (lv_ownedClasses_9_0= ruleClassCS ) ) )*
                    loop83:
                    do {
                        int alt83=4;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt83=1;
                            }
                            break;
                        case 39:
                            {
                            alt83=2;
                            }
                            break;
                        case 19:
                        case 23:
                        case 25:
                        case 29:
                        case 42:
                            {
                            alt83=3;
                            }
                            break;

                        }

                        switch (alt83) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3039:2: ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3039:2: ( (lv_ownedAnnotations_7_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:3040:1: (lv_ownedAnnotations_7_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3040:1: (lv_ownedAnnotations_7_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3041:3: lv_ownedAnnotations_7_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_59);
                    	    lv_ownedAnnotations_7_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_7_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:3058:6: ( (lv_ownedPackages_8_0= rulePackageCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3058:6: ( (lv_ownedPackages_8_0= rulePackageCS ) )
                    	    // InternalOCLinEcore.g:3059:1: (lv_ownedPackages_8_0= rulePackageCS )
                    	    {
                    	    // InternalOCLinEcore.g:3059:1: (lv_ownedPackages_8_0= rulePackageCS )
                    	    // InternalOCLinEcore.g:3060:3: lv_ownedPackages_8_0= rulePackageCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedPackagesPackageCSParserRuleCall_4_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_59);
                    	    lv_ownedPackages_8_0=rulePackageCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPackages",
                    	              		lv_ownedPackages_8_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PackageCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:3077:6: ( (lv_ownedClasses_9_0= ruleClassCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3077:6: ( (lv_ownedClasses_9_0= ruleClassCS ) )
                    	    // InternalOCLinEcore.g:3078:1: (lv_ownedClasses_9_0= ruleClassCS )
                    	    {
                    	    // InternalOCLinEcore.g:3078:1: (lv_ownedClasses_9_0= ruleClassCS )
                    	    // InternalOCLinEcore.g:3079:3: lv_ownedClasses_9_0= ruleClassCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedClassesClassCSParserRuleCall_4_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_59);
                    	    lv_ownedClasses_9_0=ruleClassCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedClasses",
                    	              		lv_ownedClasses_9_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ClassCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPackageCSAccess().getRightCurlyBracketKeyword_4_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:3100:7: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getPackageCSAccess().getSemicolonKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageCS"


    // $ANTLR start "entryRuleParameterCS"
    // InternalOCLinEcore.g:3112:1: entryRuleParameterCS returns [EObject current=null] : iv_ruleParameterCS= ruleParameterCS EOF ;
    public final EObject entryRuleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterCS = null;


        try {
            // InternalOCLinEcore.g:3113:2: (iv_ruleParameterCS= ruleParameterCS EOF )
            // InternalOCLinEcore.g:3114:2: iv_ruleParameterCS= ruleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameterCS=ruleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterCS"


    // $ANTLR start "ruleParameterCS"
    // InternalOCLinEcore.g:3121:1: ruleParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? ) ;
    public final EObject ruleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_qualifiers_4_0=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedAnnotations_11_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3124:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? ) )
            // InternalOCLinEcore.g:3125:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? )
            {
            // InternalOCLinEcore.g:3125:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? )
            // InternalOCLinEcore.g:3125:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )?
            {
            // InternalOCLinEcore.g:3125:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3126:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3126:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3127:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_60);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3143:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==56) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalOCLinEcore.g:3143:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:3147:1: ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:3148:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:3148:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:3149:3: lv_ownedType_2_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    lv_ownedType_2_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3165:4: (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==60) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==38||LA89_1==50||LA89_1==65||LA89_1==68) ) {
                    alt89=1;
                }
            }
            switch (alt89) {
                case 1 :
                    // InternalOCLinEcore.g:3165:6: otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}'
                    {
                    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:3169:1: ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==38||LA88_0==50||LA88_0==65||LA88_0==68) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3169:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3169:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) )
                    	    int alt86=4;
                    	    switch ( input.LA(1) ) {
                    	    case 38:
                    	        {
                    	        alt86=1;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt86=2;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt86=3;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt86=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 86, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt86) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3169:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3169:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3170:1: (lv_qualifiers_4_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3170:1: (lv_qualifiers_4_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3171:3: lv_qualifiers_4_0= 'ordered'
                    	            {
                    	            lv_qualifiers_4_0=(Token)match(input,38,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3185:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3185:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3186:1: (lv_qualifiers_5_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3186:1: (lv_qualifiers_5_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3187:3: lv_qualifiers_5_0= '!ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,65,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3201:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3201:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3202:1: (lv_qualifiers_6_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3202:1: (lv_qualifiers_6_0= 'unique' )
                    	            // InternalOCLinEcore.g:3203:3: lv_qualifiers_6_0= 'unique'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,50,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3217:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3217:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3218:1: (lv_qualifiers_7_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3218:1: (lv_qualifiers_7_0= '!unique' )
                    	            // InternalOCLinEcore.g:3219:3: lv_qualifiers_7_0= '!unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,68,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3232:3: (otherlv_8= ',' )?
                    	    int alt87=2;
                    	    int LA87_0 = input.LA(1);

                    	    if ( (LA87_0==59) ) {
                    	        alt87=1;
                    	    }
                    	    switch (alt87) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3232:5: otherlv_8= ','
                    	            {
                    	            otherlv_8=(Token)match(input,59,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_8, grammarAccess.getParameterCSAccess().getCommaKeyword_2_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    otherlv_9=(Token)match(input,61,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_2_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:3240:3: (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==60) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalOCLinEcore.g:3240:5: otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,60,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:3244:1: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )*
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==58||LA90_0==73||LA90_0==80) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3245:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3245:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3246:3: lv_ownedAnnotations_11_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_3_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_ownedAnnotations_11_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_3_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterCS"


    // $ANTLR start "entryRuleImplicitOppositeCS"
    // InternalOCLinEcore.g:3274:1: entryRuleImplicitOppositeCS returns [EObject current=null] : iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF ;
    public final EObject entryRuleImplicitOppositeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitOppositeCS = null;


        try {
            // InternalOCLinEcore.g:3275:2: (iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF )
            // InternalOCLinEcore.g:3276:2: iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitOppositeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitOppositeCS=ruleImplicitOppositeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitOppositeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitOppositeCS"


    // $ANTLR start "ruleImplicitOppositeCS"
    // InternalOCLinEcore.g:3283:1: ruleImplicitOppositeCS returns [EObject current=null] : (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? ) ;
    public final EObject ruleImplicitOppositeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token lv_qualifiers_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedType_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3286:28: ( (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? ) )
            // InternalOCLinEcore.g:3287:1: (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? )
            {
            // InternalOCLinEcore.g:3287:1: (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? )
            // InternalOCLinEcore.g:3287:3: otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )?
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImplicitOppositeCSAccess().getOppositeKeyword_0());

            }
            // InternalOCLinEcore.g:3291:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3292:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3292:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3293:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImplicitOppositeCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImplicitOppositeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getImplicitOppositeCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:3313:1: ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) )
            // InternalOCLinEcore.g:3314:1: (lv_ownedType_3_0= ruleTypedMultiplicityRefCS )
            {
            // InternalOCLinEcore.g:3314:1: (lv_ownedType_3_0= ruleTypedMultiplicityRefCS )
            // InternalOCLinEcore.g:3315:3: lv_ownedType_3_0= ruleTypedMultiplicityRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImplicitOppositeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_ownedType_3_0=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImplicitOppositeCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_3_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3331:2: (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==60) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalOCLinEcore.g:3331:4: otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}'
                    {
                    otherlv_4=(Token)match(input,60,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getImplicitOppositeCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:3335:1: ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+
                    int cnt94=0;
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==38||LA94_0==50||LA94_0==65||LA94_0==68) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3335:2: ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3335:2: ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) )
                    	    int alt92=4;
                    	    switch ( input.LA(1) ) {
                    	    case 38:
                    	        {
                    	        alt92=1;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt92=2;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt92=3;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt92=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 92, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt92) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3335:3: ( (lv_qualifiers_5_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3335:3: ( (lv_qualifiers_5_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3336:1: (lv_qualifiers_5_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3336:1: (lv_qualifiers_5_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3337:3: lv_qualifiers_5_0= 'ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,38,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersOrderedKeyword_4_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3351:6: ( (lv_qualifiers_6_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3351:6: ( (lv_qualifiers_6_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3352:1: (lv_qualifiers_6_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3352:1: (lv_qualifiers_6_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3353:3: lv_qualifiers_6_0= '!ordered'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,65,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersOrderedKeyword_4_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3367:6: ( (lv_qualifiers_7_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3367:6: ( (lv_qualifiers_7_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3368:1: (lv_qualifiers_7_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3368:1: (lv_qualifiers_7_0= 'unique' )
                    	            // InternalOCLinEcore.g:3369:3: lv_qualifiers_7_0= 'unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,50,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersUniqueKeyword_4_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3383:6: ( (lv_qualifiers_8_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3383:6: ( (lv_qualifiers_8_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3384:1: (lv_qualifiers_8_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3384:1: (lv_qualifiers_8_0= '!unique' )
                    	            // InternalOCLinEcore.g:3385:3: lv_qualifiers_8_0= '!unique'
                    	            {
                    	            lv_qualifiers_8_0=(Token)match(input,68,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_8_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersUniqueKeyword_4_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_8_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3398:3: (otherlv_9= ',' )?
                    	    int alt93=2;
                    	    int LA93_0 = input.LA(1);

                    	    if ( (LA93_0==59) ) {
                    	        alt93=1;
                    	    }
                    	    switch (alt93) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3398:5: otherlv_9= ','
                    	            {
                    	            otherlv_9=(Token)match(input,59,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getImplicitOppositeCSAccess().getCommaKeyword_4_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt94 >= 1 ) break loop94;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(94, input);
                                throw eee;
                        }
                        cnt94++;
                    } while (true);

                    otherlv_10=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getImplicitOppositeCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitOppositeCS"


    // $ANTLR start "entryRuleReferenceCS"
    // InternalOCLinEcore.g:3414:1: entryRuleReferenceCS returns [EObject current=null] : iv_ruleReferenceCS= ruleReferenceCS EOF ;
    public final EObject entryRuleReferenceCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCS = null;


        try {
            // InternalOCLinEcore.g:3415:2: (iv_ruleReferenceCS= ruleReferenceCS EOF )
            // InternalOCLinEcore.g:3416:2: iv_ruleReferenceCS= ruleReferenceCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCS=ruleReferenceCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCS"


    // $ANTLR start "ruleReferenceCS"
    // InternalOCLinEcore.g:3423:1: ruleReferenceCS returns [EObject current=null] : ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'property' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' ) ) ;
    public final EObject ruleReferenceCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStatic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_default_8_0=null;
        Token otherlv_9=null;
        Token lv_qualifiers_10_0=null;
        Token lv_qualifiers_11_0=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedType_6_0 = null;

        EObject lv_ownedAnnotations_31_0 = null;

        EObject lv_ownedDefaultExpressions_40_0 = null;

        EObject lv_ownedDefaultExpressions_45_0 = null;

        EObject lv_ownedImplicitOpposites_47_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3426:28: ( ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'property' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' ) ) )
            // InternalOCLinEcore.g:3427:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'property' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' ) )
            {
            // InternalOCLinEcore.g:3427:1: ( ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'property' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' ) )
            // InternalOCLinEcore.g:3427:2: ( (lv_isStatic_0_0= 'static' ) )? otherlv_1= 'property' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' )
            {
            // InternalOCLinEcore.g:3427:2: ( (lv_isStatic_0_0= 'static' ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==47) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalOCLinEcore.g:3428:1: (lv_isStatic_0_0= 'static' )
                    {
                    // InternalOCLinEcore.g:3428:1: (lv_isStatic_0_0= 'static' )
                    // InternalOCLinEcore.g:3429:3: lv_isStatic_0_0= 'static'
                    {
                    lv_isStatic_0_0=(Token)match(input,47,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStatic_0_0, grammarAccess.getReferenceCSAccess().getIsStaticStaticKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStatic", true, "static");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReferenceCSAccess().getPropertyKeyword_1());

            }
            // InternalOCLinEcore.g:3446:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3447:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3447:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3448:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3464:2: (otherlv_3= '#' ( ( ruleUnrestrictedName ) ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==77) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalOCLinEcore.g:3464:4: otherlv_3= '#' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,77,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getReferenceCSAccess().getNumberSignKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:3468:1: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:3469:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:3469:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:3470:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredOppositePropertyCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3486:4: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==56) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalOCLinEcore.g:3486:6: otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getReferenceCSAccess().getColonKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:3490:1: ( (lv_ownedType_6_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:3491:1: (lv_ownedType_6_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:3491:1: (lv_ownedType_6_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:3492:3: lv_ownedType_6_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_28);
                    lv_ownedType_6_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3508:4: (otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==62) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalOCLinEcore.g:3508:6: otherlv_7= '=' ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_7=(Token)match(input,62,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getReferenceCSAccess().getEqualsSignKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:3512:1: ( (lv_default_8_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:3513:1: (lv_default_8_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:3513:1: (lv_default_8_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:3514:3: lv_default_8_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_8_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_8_0, grammarAccess.getReferenceCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_8_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3530:4: (otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==60) ) {
                int LA103_1 = input.LA(2);

                if ( (LA103_1==24||LA103_1==28||LA103_1==38||LA103_1==44||LA103_1==46||(LA103_1>=49 && LA103_1<=52)||LA103_1==63||(LA103_1>=65 && LA103_1<=70)||(LA103_1>=78 && LA103_1<=79)) ) {
                    alt103=1;
                }
            }
            switch (alt103) {
                case 1 :
                    // InternalOCLinEcore.g:3530:6: otherlv_9= '{' ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}'
                    {
                    otherlv_9=(Token)match(input,60,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:3534:1: ( ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+
                    int cnt102=0;
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==24||LA102_0==28||LA102_0==38||LA102_0==44||LA102_0==46||(LA102_0>=49 && LA102_0<=52)||LA102_0==63||(LA102_0>=65 && LA102_0<=70)||(LA102_0>=78 && LA102_0<=79)) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3534:2: ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3534:2: ( ( (lv_qualifiers_10_0= 'composes' ) ) | ( (lv_qualifiers_11_0= '!composes' ) ) | ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'ordered' ) ) | ( (lv_qualifiers_15_0= '!ordered' ) ) | ( (lv_qualifiers_16_0= 'readonly' ) ) | ( (lv_qualifiers_17_0= '!readonly' ) ) | ( (lv_qualifiers_18_0= 'resolve' ) ) | ( (lv_qualifiers_19_0= '!resolve' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) )
                    	    int alt100=18;
                    	    switch ( input.LA(1) ) {
                    	    case 24:
                    	        {
                    	        alt100=1;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt100=2;
                    	        }
                    	        break;
                    	    case 28:
                    	        {
                    	        alt100=3;
                    	        }
                    	        break;
                    	    case 63:
                    	        {
                    	        alt100=4;
                    	        }
                    	        break;
                    	    case 38:
                    	        {
                    	        alt100=5;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt100=6;
                    	        }
                    	        break;
                    	    case 44:
                    	        {
                    	        alt100=7;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt100=8;
                    	        }
                    	        break;
                    	    case 46:
                    	        {
                    	        alt100=9;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt100=10;
                    	        }
                    	        break;
                    	    case 49:
                    	        {
                    	        alt100=11;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt100=12;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt100=13;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt100=14;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt100=15;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt100=16;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt100=17;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt100=18;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 100, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt100) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3534:3: ( (lv_qualifiers_10_0= 'composes' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3534:3: ( (lv_qualifiers_10_0= 'composes' ) )
                    	            // InternalOCLinEcore.g:3535:1: (lv_qualifiers_10_0= 'composes' )
                    	            {
                    	            // InternalOCLinEcore.g:3535:1: (lv_qualifiers_10_0= 'composes' )
                    	            // InternalOCLinEcore.g:3536:3: lv_qualifiers_10_0= 'composes'
                    	            {
                    	            lv_qualifiers_10_0=(Token)match(input,24,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_10_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_10_0, "composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3550:6: ( (lv_qualifiers_11_0= '!composes' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3550:6: ( (lv_qualifiers_11_0= '!composes' ) )
                    	            // InternalOCLinEcore.g:3551:1: (lv_qualifiers_11_0= '!composes' )
                    	            {
                    	            // InternalOCLinEcore.g:3551:1: (lv_qualifiers_11_0= '!composes' )
                    	            // InternalOCLinEcore.g:3552:3: lv_qualifiers_11_0= '!composes'
                    	            {
                    	            lv_qualifiers_11_0=(Token)match(input,78,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_11_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_11_0, "!composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3566:6: ( (lv_qualifiers_12_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3566:6: ( (lv_qualifiers_12_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:3567:1: (lv_qualifiers_12_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:3567:1: (lv_qualifiers_12_0= 'derived' )
                    	            // InternalOCLinEcore.g:3568:3: lv_qualifiers_12_0= 'derived'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,28,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_12_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3582:6: ( (lv_qualifiers_13_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3582:6: ( (lv_qualifiers_13_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:3583:1: (lv_qualifiers_13_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:3583:1: (lv_qualifiers_13_0= '!derived' )
                    	            // InternalOCLinEcore.g:3584:3: lv_qualifiers_13_0= '!derived'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,63,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:3598:6: ( (lv_qualifiers_14_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3598:6: ( (lv_qualifiers_14_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3599:1: (lv_qualifiers_14_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3599:1: (lv_qualifiers_14_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3600:3: lv_qualifiers_14_0= 'ordered'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,38,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:3614:6: ( (lv_qualifiers_15_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3614:6: ( (lv_qualifiers_15_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3615:1: (lv_qualifiers_15_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3615:1: (lv_qualifiers_15_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3616:3: lv_qualifiers_15_0= '!ordered'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,65,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:3630:6: ( (lv_qualifiers_16_0= 'readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3630:6: ( (lv_qualifiers_16_0= 'readonly' ) )
                    	            // InternalOCLinEcore.g:3631:1: (lv_qualifiers_16_0= 'readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:3631:1: (lv_qualifiers_16_0= 'readonly' )
                    	            // InternalOCLinEcore.g:3632:3: lv_qualifiers_16_0= 'readonly'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,44,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:3646:6: ( (lv_qualifiers_17_0= '!readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3646:6: ( (lv_qualifiers_17_0= '!readonly' ) )
                    	            // InternalOCLinEcore.g:3647:1: (lv_qualifiers_17_0= '!readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:3647:1: (lv_qualifiers_17_0= '!readonly' )
                    	            // InternalOCLinEcore.g:3648:3: lv_qualifiers_17_0= '!readonly'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,66,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalOCLinEcore.g:3662:6: ( (lv_qualifiers_18_0= 'resolve' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3662:6: ( (lv_qualifiers_18_0= 'resolve' ) )
                    	            // InternalOCLinEcore.g:3663:1: (lv_qualifiers_18_0= 'resolve' )
                    	            {
                    	            // InternalOCLinEcore.g:3663:1: (lv_qualifiers_18_0= 'resolve' )
                    	            // InternalOCLinEcore.g:3664:3: lv_qualifiers_18_0= 'resolve'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,46,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalOCLinEcore.g:3678:6: ( (lv_qualifiers_19_0= '!resolve' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3678:6: ( (lv_qualifiers_19_0= '!resolve' ) )
                    	            // InternalOCLinEcore.g:3679:1: (lv_qualifiers_19_0= '!resolve' )
                    	            {
                    	            // InternalOCLinEcore.g:3679:1: (lv_qualifiers_19_0= '!resolve' )
                    	            // InternalOCLinEcore.g:3680:3: lv_qualifiers_19_0= '!resolve'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,79,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "!resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalOCLinEcore.g:3694:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3694:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:3695:1: (lv_qualifiers_20_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:3695:1: (lv_qualifiers_20_0= 'transient' )
                    	            // InternalOCLinEcore.g:3696:3: lv_qualifiers_20_0= 'transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,49,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalOCLinEcore.g:3710:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3710:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:3711:1: (lv_qualifiers_21_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:3711:1: (lv_qualifiers_21_0= '!transient' )
                    	            // InternalOCLinEcore.g:3712:3: lv_qualifiers_21_0= '!transient'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,67,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalOCLinEcore.g:3726:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3726:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3727:1: (lv_qualifiers_22_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3727:1: (lv_qualifiers_22_0= 'unique' )
                    	            // InternalOCLinEcore.g:3728:3: lv_qualifiers_22_0= 'unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,50,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalOCLinEcore.g:3742:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3742:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3743:1: (lv_qualifiers_23_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3743:1: (lv_qualifiers_23_0= '!unique' )
                    	            // InternalOCLinEcore.g:3744:3: lv_qualifiers_23_0= '!unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,68,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalOCLinEcore.g:3758:6: ( (lv_qualifiers_24_0= 'unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3758:6: ( (lv_qualifiers_24_0= 'unsettable' ) )
                    	            // InternalOCLinEcore.g:3759:1: (lv_qualifiers_24_0= 'unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:3759:1: (lv_qualifiers_24_0= 'unsettable' )
                    	            // InternalOCLinEcore.g:3760:3: lv_qualifiers_24_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,51,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalOCLinEcore.g:3774:6: ( (lv_qualifiers_25_0= '!unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3774:6: ( (lv_qualifiers_25_0= '!unsettable' ) )
                    	            // InternalOCLinEcore.g:3775:1: (lv_qualifiers_25_0= '!unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:3775:1: (lv_qualifiers_25_0= '!unsettable' )
                    	            // InternalOCLinEcore.g:3776:3: lv_qualifiers_25_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,69,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 17 :
                    	            // InternalOCLinEcore.g:3790:6: ( (lv_qualifiers_26_0= 'volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3790:6: ( (lv_qualifiers_26_0= 'volatile' ) )
                    	            // InternalOCLinEcore.g:3791:1: (lv_qualifiers_26_0= 'volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:3791:1: (lv_qualifiers_26_0= 'volatile' )
                    	            // InternalOCLinEcore.g:3792:3: lv_qualifiers_26_0= 'volatile'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,52,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_16_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 18 :
                    	            // InternalOCLinEcore.g:3806:6: ( (lv_qualifiers_27_0= '!volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3806:6: ( (lv_qualifiers_27_0= '!volatile' ) )
                    	            // InternalOCLinEcore.g:3807:1: (lv_qualifiers_27_0= '!volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:3807:1: (lv_qualifiers_27_0= '!volatile' )
                    	            // InternalOCLinEcore.g:3808:3: lv_qualifiers_27_0= '!volatile'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,70,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_17_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3821:3: (otherlv_28= ',' )?
                    	    int alt101=2;
                    	    int LA101_0 = input.LA(1);

                    	    if ( (LA101_0==59) ) {
                    	        alt101=1;
                    	    }
                    	    switch (alt101) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3821:5: otherlv_28= ','
                    	            {
                    	            otherlv_28=(Token)match(input,59,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_28, grammarAccess.getReferenceCSAccess().getCommaKeyword_6_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt102 >= 1 ) break loop102;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(102, input);
                                throw eee;
                        }
                        cnt102++;
                    } while (true);

                    otherlv_29=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:3829:3: ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' ) | otherlv_50= ';' )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==60) ) {
                alt110=1;
            }
            else if ( (LA110_0==57) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalOCLinEcore.g:3829:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' )
                    {
                    // InternalOCLinEcore.g:3829:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}' )
                    // InternalOCLinEcore.g:3829:6: otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )* otherlv_49= '}'
                    {
                    otherlv_30=(Token)match(input,60,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalOCLinEcore.g:3833:1: ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' ) | (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) | (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' ) | ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' ) )*
                    loop109:
                    do {
                        int alt109=6;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt109=1;
                            }
                            break;
                        case 35:
                            {
                            alt109=2;
                            }
                            break;
                        case 33:
                            {
                            alt109=3;
                            }
                            break;
                        case 27:
                            {
                            alt109=4;
                            }
                            break;
                        case 76:
                            {
                            alt109=5;
                            }
                            break;

                        }

                        switch (alt109) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3833:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3833:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:3834:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3834:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3835:3: lv_ownedAnnotations_31_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_70);
                    	    lv_ownedAnnotations_31_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_31_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:3852:6: (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:3852:6: (otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';' )
                    	    // InternalOCLinEcore.g:3852:8: otherlv_32= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_36= ';'
                    	    {
                    	    otherlv_32=(Token)match(input,35,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getReferenceCSAccess().getKeyKeyword_7_0_1_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:3856:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalOCLinEcore.g:3857:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalOCLinEcore.g:3857:1: ( ruleUnrestrictedName )
                    	    // InternalOCLinEcore.g:3858:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredKeysPropertyCrossReference_7_0_1_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_71);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    // InternalOCLinEcore.g:3874:2: (otherlv_34= ',' ( ( ruleUnrestrictedName ) ) )*
                    	    loop104:
                    	    do {
                    	        int alt104=2;
                    	        int LA104_0 = input.LA(1);

                    	        if ( (LA104_0==59) ) {
                    	            alt104=1;
                    	        }


                    	        switch (alt104) {
                    	    	case 1 :
                    	    	    // InternalOCLinEcore.g:3874:4: otherlv_34= ',' ( ( ruleUnrestrictedName ) )
                    	    	    {
                    	    	    otherlv_34=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	          	newLeafNode(otherlv_34, grammarAccess.getReferenceCSAccess().getCommaKeyword_7_0_1_1_2_0());

                    	    	    }
                    	    	    // InternalOCLinEcore.g:3878:1: ( ( ruleUnrestrictedName ) )
                    	    	    // InternalOCLinEcore.g:3879:1: ( ruleUnrestrictedName )
                    	    	    {
                    	    	    // InternalOCLinEcore.g:3879:1: ( ruleUnrestrictedName )
                    	    	    // InternalOCLinEcore.g:3880:3: ruleUnrestrictedName
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      		  /* */

                    	    	    }
                    	    	    if ( state.backtracking==0 ) {

                    	    	      			if (current==null) {
                    	    	      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	    	      	        }

                    	    	    }
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredKeysPropertyCrossReference_7_0_1_1_2_1_0());

                    	    	    }
                    	    	    pushFollow(FollowSets000.FOLLOW_71);
                    	    	    ruleUnrestrictedName();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        afterParserOrEnumRuleCall();

                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop104;
                    	        }
                    	    } while (true);

                    	    otherlv_36=(Token)match(input,57,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_36, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_1_3());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:3901:6: (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:3901:6: (otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' )
                    	    // InternalOCLinEcore.g:3901:8: otherlv_37= 'initial' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';'
                    	    {
                    	    otherlv_37=(Token)match(input,33,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getReferenceCSAccess().getInitialKeyword_7_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:3905:1: ( ruleUnrestrictedName )?
                    	    int alt105=2;
                    	    int LA105_0 = input.LA(1);

                    	    if ( ((LA105_0>=RULE_SIMPLE_ID && LA105_0<=RULE_ESCAPED_ID)||LA105_0==17||(LA105_0>=19 && LA105_0<=53)||LA105_0==58||LA105_0==71||(LA105_0>=73 && LA105_0<=74)||LA105_0==76||LA105_0==80) ) {
                    	        alt105=1;
                    	    }
                    	    switch (alt105) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3906:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_17);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_39=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:3920:1: ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )?
                    	    int alt106=2;
                    	    int LA106_0 = input.LA(1);

                    	    if ( ((LA106_0>=RULE_INT && LA106_0<=RULE_SINGLE_QUOTED_STRING)||(LA106_0>=RULE_UNQUOTED_STRING && LA106_0<=RULE_ESCAPED_ID)||(LA106_0>=17 && LA106_0<=54)||LA106_0==58||LA106_0==71||(LA106_0>=73 && LA106_0<=74)||LA106_0==76||LA106_0==80||(LA106_0>=83 && LA106_0<=85)||(LA106_0>=103 && LA106_0<=104)||(LA106_0>=106 && LA106_0<=118)||LA106_0==121||(LA106_0>=124 && LA106_0<=127)||LA106_0==134||(LA106_0>=139 && LA106_0<=140)) ) {
                    	        alt106=1;
                    	    }
                    	    switch (alt106) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3921:1: (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:3921:1: (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:3922:3: lv_ownedDefaultExpressions_40_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_14);
                    	            lv_ownedDefaultExpressions_40_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_40_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_41=(Token)match(input,57,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_41, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:3943:6: (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:3943:6: (otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';' )
                    	    // InternalOCLinEcore.g:3943:8: otherlv_42= 'derivation' ( ruleUnrestrictedName )? otherlv_44= ':' ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )? otherlv_46= ';'
                    	    {
                    	    otherlv_42=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_42, grammarAccess.getReferenceCSAccess().getDerivationKeyword_7_0_1_3_0());

                    	    }
                    	    // InternalOCLinEcore.g:3947:1: ( ruleUnrestrictedName )?
                    	    int alt107=2;
                    	    int LA107_0 = input.LA(1);

                    	    if ( ((LA107_0>=RULE_SIMPLE_ID && LA107_0<=RULE_ESCAPED_ID)||LA107_0==17||(LA107_0>=19 && LA107_0<=53)||LA107_0==58||LA107_0==71||(LA107_0>=73 && LA107_0<=74)||LA107_0==76||LA107_0==80) ) {
                    	        alt107=1;
                    	    }
                    	    switch (alt107) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3948:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_3_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_17);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_44=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_44, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_3_2());

                    	    }
                    	    // InternalOCLinEcore.g:3962:1: ( (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS ) )?
                    	    int alt108=2;
                    	    int LA108_0 = input.LA(1);

                    	    if ( ((LA108_0>=RULE_INT && LA108_0<=RULE_SINGLE_QUOTED_STRING)||(LA108_0>=RULE_UNQUOTED_STRING && LA108_0<=RULE_ESCAPED_ID)||(LA108_0>=17 && LA108_0<=54)||LA108_0==58||LA108_0==71||(LA108_0>=73 && LA108_0<=74)||LA108_0==76||LA108_0==80||(LA108_0>=83 && LA108_0<=85)||(LA108_0>=103 && LA108_0<=104)||(LA108_0>=106 && LA108_0<=118)||LA108_0==121||(LA108_0>=124 && LA108_0<=127)||LA108_0==134||(LA108_0>=139 && LA108_0<=140)) ) {
                    	        alt108=1;
                    	    }
                    	    switch (alt108) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3963:1: (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:3963:1: (lv_ownedDefaultExpressions_45_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:3964:3: lv_ownedDefaultExpressions_45_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_3_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_14);
                    	            lv_ownedDefaultExpressions_45_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_45_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_46=(Token)match(input,57,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_46, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_3_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalOCLinEcore.g:3985:6: ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:3985:6: ( ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';' )
                    	    // InternalOCLinEcore.g:3985:7: ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) ) otherlv_48= ';'
                    	    {
                    	    // InternalOCLinEcore.g:3985:7: ( (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS ) )
                    	    // InternalOCLinEcore.g:3986:1: (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS )
                    	    {
                    	    // InternalOCLinEcore.g:3986:1: (lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS )
                    	    // InternalOCLinEcore.g:3987:3: lv_ownedImplicitOpposites_47_0= ruleImplicitOppositeCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedImplicitOppositesImplicitOppositeCSParserRuleCall_7_0_1_4_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_14);
                    	    lv_ownedImplicitOpposites_47_0=ruleImplicitOppositeCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedImplicitOpposites",
                    	              		lv_ownedImplicitOpposites_47_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ImplicitOppositeCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    otherlv_48=(Token)match(input,57,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_48, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_4_1());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop109;
                        }
                    } while (true);

                    otherlv_49=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_49, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4012:7: otherlv_50= ';'
                    {
                    otherlv_50=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_50, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCS"


    // $ANTLR start "entryRuleSpecificationCS"
    // InternalOCLinEcore.g:4024:1: entryRuleSpecificationCS returns [EObject current=null] : iv_ruleSpecificationCS= ruleSpecificationCS EOF ;
    public final EObject entryRuleSpecificationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecificationCS = null;


        try {
            // InternalOCLinEcore.g:4025:2: (iv_ruleSpecificationCS= ruleSpecificationCS EOF )
            // InternalOCLinEcore.g:4026:2: iv_ruleSpecificationCS= ruleSpecificationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecificationCS=ruleSpecificationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecificationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecificationCS"


    // $ANTLR start "ruleSpecificationCS"
    // InternalOCLinEcore.g:4033:1: ruleSpecificationCS returns [EObject current=null] : ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) ;
    public final EObject ruleSpecificationCS() throws RecognitionException {
        EObject current = null;

        Token lv_exprString_1_0=null;
        EObject lv_ownedExpression_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4036:28: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) )
            // InternalOCLinEcore.g:4037:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            {
            // InternalOCLinEcore.g:4037:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( ((LA111_0>=RULE_INT && LA111_0<=RULE_SINGLE_QUOTED_STRING)||(LA111_0>=RULE_SIMPLE_ID && LA111_0<=RULE_ESCAPED_ID)||(LA111_0>=17 && LA111_0<=54)||LA111_0==58||LA111_0==71||(LA111_0>=73 && LA111_0<=74)||LA111_0==76||LA111_0==80||(LA111_0>=83 && LA111_0<=85)||(LA111_0>=103 && LA111_0<=104)||(LA111_0>=106 && LA111_0<=118)||LA111_0==121||(LA111_0>=124 && LA111_0<=127)||LA111_0==134||(LA111_0>=139 && LA111_0<=140)) ) {
                alt111=1;
            }
            else if ( (LA111_0==RULE_UNQUOTED_STRING) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalOCLinEcore.g:4037:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    {
                    // InternalOCLinEcore.g:4037:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:4038:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:4038:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalOCLinEcore.g:4039:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4056:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    {
                    // InternalOCLinEcore.g:4056:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    // InternalOCLinEcore.g:4057:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:4057:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    // InternalOCLinEcore.g:4058:3: lv_exprString_1_0= RULE_UNQUOTED_STRING
                    {
                    lv_exprString_1_0=(Token)match(input,RULE_UNQUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSpecificationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"exprString",
                              		lv_exprString_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UNQUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecificationCS"


    // $ANTLR start "entryRuleStructuredClassCS"
    // InternalOCLinEcore.g:4082:1: entryRuleStructuredClassCS returns [EObject current=null] : iv_ruleStructuredClassCS= ruleStructuredClassCS EOF ;
    public final EObject entryRuleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredClassCS = null;


        try {
            // InternalOCLinEcore.g:4083:2: (iv_ruleStructuredClassCS= ruleStructuredClassCS EOF )
            // InternalOCLinEcore.g:4084:2: iv_ruleStructuredClassCS= ruleStructuredClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuredClassCS=ruleStructuredClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredClassCS"


    // $ANTLR start "ruleStructuredClassCS"
    // InternalOCLinEcore.g:4091:1: ruleStructuredClassCS returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' ) ) ;
    public final EObject ruleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_instanceClassName_9_0=null;
        Token otherlv_10=null;
        Token lv_isInterface_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedSuperTypes_5_0 = null;

        EObject lv_ownedSuperTypes_7_0 = null;

        EObject lv_ownedAnnotations_14_0 = null;

        EObject lv_ownedOperations_15_0 = null;

        EObject lv_ownedProperties_16_0 = null;

        EObject lv_ownedConstraints_17_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4094:28: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' ) ) )
            // InternalOCLinEcore.g:4095:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' ) )
            {
            // InternalOCLinEcore.g:4095:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' ) )
            // InternalOCLinEcore.g:4095:2: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' )
            {
            // InternalOCLinEcore.g:4095:2: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==19) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalOCLinEcore.g:4096:1: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalOCLinEcore.g:4096:1: (lv_isAbstract_0_0= 'abstract' )
                    // InternalOCLinEcore.g:4097:3: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,19,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructuredClassCSAccess().getIsAbstractAbstractKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructuredClassCSAccess().getClassKeyword_1());

            }
            // InternalOCLinEcore.g:4114:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:4115:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:4115:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:4116:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:4132:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==54||LA113_0==81) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalOCLinEcore.g:4133:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:4133:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:4134:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:4150:3: (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==30) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalOCLinEcore.g:4150:5: otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getStructuredClassCSAccess().getExtendsKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:4154:1: ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:4155:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:4155:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:4156:3: lv_ownedSuperTypes_5_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_ownedSuperTypes_5_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedSuperTypes",
                              		lv_ownedSuperTypes_5_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4172:2: (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    loop114:
                    do {
                        int alt114=2;
                        int LA114_0 = input.LA(1);

                        if ( (LA114_0==59) ) {
                            alt114=1;
                        }


                        switch (alt114) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4172:4: otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,59,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getStructuredClassCSAccess().getCommaKeyword_4_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4176:1: ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:4177:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:4177:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:4178:3: lv_ownedSuperTypes_7_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_75);
                    	    lv_ownedSuperTypes_7_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedSuperTypes",
                    	              		lv_ownedSuperTypes_7_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalOCLinEcore.g:4194:6: (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==56) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalOCLinEcore.g:4194:8: otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,56,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStructuredClassCSAccess().getColonKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:4198:1: ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:4199:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:4199:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:4200:3: lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_9_0, grammarAccess.getStructuredClassCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:4216:4: (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==60) ) {
                int LA118_1 = input.LA(2);

                if ( (LA118_1==34) ) {
                    alt118=1;
                }
                else if ( (LA118_1==61) ) {
                    int LA118_4 = input.LA(3);

                    if ( (LA118_4==57||LA118_4==60) ) {
                        alt118=1;
                    }
                }
            }
            switch (alt118) {
                case 1 :
                    // InternalOCLinEcore.g:4216:6: otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,60,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:4220:1: ( (lv_isInterface_11_0= 'interface' ) )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==34) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalOCLinEcore.g:4221:1: (lv_isInterface_11_0= 'interface' )
                            {
                            // InternalOCLinEcore.g:4221:1: (lv_isInterface_11_0= 'interface' )
                            // InternalOCLinEcore.g:4222:3: lv_isInterface_11_0= 'interface'
                            {
                            lv_isInterface_11_0=(Token)match(input,34,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isInterface_11_0, grammarAccess.getStructuredClassCSAccess().getIsInterfaceInterfaceKeyword_6_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isInterface", true, "interface");

                            }

                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,61,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:4239:3: ( (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' ) | otherlv_19= ';' )
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==60) ) {
                alt120=1;
            }
            else if ( (LA120_0==57) ) {
                alt120=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalOCLinEcore.g:4239:4: (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' )
                    {
                    // InternalOCLinEcore.g:4239:4: (otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}' )
                    // InternalOCLinEcore.g:4239:6: otherlv_13= '{' ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )* otherlv_18= '}'
                    {
                    otherlv_13=(Token)match(input,60,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalOCLinEcore.g:4243:1: ( ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_15_0= ruleOperationCS ) ) | ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) ) )*
                    loop119:
                    do {
                        int alt119=5;
                        switch ( input.LA(1) ) {
                        case 58:
                        case 73:
                        case 80:
                            {
                            alt119=1;
                            }
                            break;
                        case 47:
                            {
                            int LA119_3 = input.LA(2);

                            if ( (LA119_3==37) ) {
                                alt119=2;
                            }
                            else if ( (LA119_3==20||LA119_3==43) ) {
                                alt119=3;
                            }


                            }
                            break;
                        case 37:
                            {
                            alt119=2;
                            }
                            break;
                        case 20:
                        case 43:
                            {
                            alt119=3;
                            }
                            break;
                        case 22:
                        case 53:
                            {
                            alt119=4;
                            }
                            break;

                        }

                        switch (alt119) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4243:2: ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4243:2: ( (lv_ownedAnnotations_14_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:4244:1: (lv_ownedAnnotations_14_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:4244:1: (lv_ownedAnnotations_14_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:4245:3: lv_ownedAnnotations_14_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedAnnotations_14_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_14_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:4262:6: ( (lv_ownedOperations_15_0= ruleOperationCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4262:6: ( (lv_ownedOperations_15_0= ruleOperationCS ) )
                    	    // InternalOCLinEcore.g:4263:1: (lv_ownedOperations_15_0= ruleOperationCS )
                    	    {
                    	    // InternalOCLinEcore.g:4263:1: (lv_ownedOperations_15_0= ruleOperationCS )
                    	    // InternalOCLinEcore.g:4264:3: lv_ownedOperations_15_0= ruleOperationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedOperationsOperationCSParserRuleCall_7_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedOperations_15_0=ruleOperationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedOperations",
                    	              		lv_ownedOperations_15_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.OperationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:4281:6: ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4281:6: ( (lv_ownedProperties_16_0= ruleStructuralFeatureCS ) )
                    	    // InternalOCLinEcore.g:4282:1: (lv_ownedProperties_16_0= ruleStructuralFeatureCS )
                    	    {
                    	    // InternalOCLinEcore.g:4282:1: (lv_ownedProperties_16_0= ruleStructuralFeatureCS )
                    	    // InternalOCLinEcore.g:4283:3: lv_ownedProperties_16_0= ruleStructuralFeatureCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_7_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedProperties_16_0=ruleStructuralFeatureCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedProperties",
                    	              		lv_ownedProperties_16_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.StructuralFeatureCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:4300:6: ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4300:6: ( (lv_ownedConstraints_17_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:4301:1: (lv_ownedConstraints_17_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:4301:1: (lv_ownedConstraints_17_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:4302:3: lv_ownedConstraints_17_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_7_0_1_3_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedConstraints_17_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_17_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop119;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4323:7: otherlv_19= ';'
                    {
                    otherlv_19=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getStructuredClassCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredClassCS"


    // $ANTLR start "entryRuleStructuralFeatureCS"
    // InternalOCLinEcore.g:4335:1: entryRuleStructuralFeatureCS returns [EObject current=null] : iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF ;
    public final EObject entryRuleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuralFeatureCS = null;


        try {
            // InternalOCLinEcore.g:4336:2: (iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF )
            // InternalOCLinEcore.g:4337:2: iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuralFeatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuralFeatureCS=ruleStructuralFeatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuralFeatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuralFeatureCS"


    // $ANTLR start "ruleStructuralFeatureCS"
    // InternalOCLinEcore.g:4344:1: ruleStructuralFeatureCS returns [EObject current=null] : (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) ;
    public final EObject ruleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject this_AttributeCS_0 = null;

        EObject this_ReferenceCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4347:28: ( (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) )
            // InternalOCLinEcore.g:4348:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            {
            // InternalOCLinEcore.g:4348:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            int alt121=2;
            switch ( input.LA(1) ) {
            case 47:
                {
                int LA121_1 = input.LA(2);

                if ( (LA121_1==43) ) {
                    alt121=2;
                }
                else if ( (LA121_1==20) ) {
                    alt121=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 121, 1, input);

                    throw nvae;
                }
                }
                break;
            case 20:
                {
                alt121=1;
                }
                break;
            case 43:
                {
                alt121=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }

            switch (alt121) {
                case 1 :
                    // InternalOCLinEcore.g:4349:2: this_AttributeCS_0= ruleAttributeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getAttributeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AttributeCS_0=ruleAttributeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AttributeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4362:2: this_ReferenceCS_1= ruleReferenceCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getReferenceCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCS_1=ruleReferenceCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReferenceCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuralFeatureCS"


    // $ANTLR start "entryRuleSysMLCS"
    // InternalOCLinEcore.g:4381:1: entryRuleSysMLCS returns [EObject current=null] : iv_ruleSysMLCS= ruleSysMLCS EOF ;
    public final EObject entryRuleSysMLCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSysMLCS = null;


        try {
            // InternalOCLinEcore.g:4382:2: (iv_ruleSysMLCS= ruleSysMLCS EOF )
            // InternalOCLinEcore.g:4383:2: iv_ruleSysMLCS= ruleSysMLCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSysMLCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSysMLCS=ruleSysMLCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSysMLCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSysMLCS"


    // $ANTLR start "ruleSysMLCS"
    // InternalOCLinEcore.g:4390:1: ruleSysMLCS returns [EObject current=null] : ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) ) ;
    public final EObject ruleSysMLCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_ownedDetails_2_0 = null;

        EObject lv_ownedDetails_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4393:28: ( ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) ) )
            // InternalOCLinEcore.g:4394:1: ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) )
            {
            // InternalOCLinEcore.g:4394:1: ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) )
            // InternalOCLinEcore.g:4394:2: () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) )
            {
            // InternalOCLinEcore.g:4394:2: ()
            // InternalOCLinEcore.g:4395:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSysMLCSAccess().getSysMLCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,80,FollowSets000.FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSysMLCSAccess().getSysmlKeyword_1());

            }
            // InternalOCLinEcore.g:4407:1: ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_SINGLE_QUOTED_STRING||(LA123_0>=RULE_SIMPLE_ID && LA123_0<=RULE_ESCAPED_ID)||LA123_0==17||(LA123_0>=19 && LA123_0<=53)||LA123_0==58||LA123_0==71||(LA123_0>=73 && LA123_0<=74)||LA123_0==76||LA123_0==80) ) {
                alt123=1;
            }
            else if ( (LA123_0==60) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalOCLinEcore.g:4407:2: ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' )
                    {
                    // InternalOCLinEcore.g:4407:2: ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' )
                    // InternalOCLinEcore.g:4407:3: ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';'
                    {
                    // InternalOCLinEcore.g:4407:3: ( (lv_ownedDetails_2_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:4408:1: (lv_ownedDetails_2_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:4408:1: (lv_ownedDetails_2_0= ruleDetailCS )
                    // InternalOCLinEcore.g:4409:3: lv_ownedDetails_2_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSysMLCSAccess().getOwnedDetailsDetailCSParserRuleCall_2_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_14);
                    lv_ownedDetails_2_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSysMLCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSysMLCSAccess().getSemicolonKeyword_2_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4430:6: (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' )
                    {
                    // InternalOCLinEcore.g:4430:6: (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' )
                    // InternalOCLinEcore.g:4430:8: otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}'
                    {
                    otherlv_4=(Token)match(input,60,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSysMLCSAccess().getLeftCurlyBracketKeyword_2_1_0());

                    }
                    // InternalOCLinEcore.g:4434:1: ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )*
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==RULE_SINGLE_QUOTED_STRING||(LA122_0>=RULE_SIMPLE_ID && LA122_0<=RULE_ESCAPED_ID)||LA122_0==17||(LA122_0>=19 && LA122_0<=53)||LA122_0==58||LA122_0==71||(LA122_0>=73 && LA122_0<=74)||LA122_0==76||LA122_0==80) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4434:2: ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';'
                    	    {
                    	    // InternalOCLinEcore.g:4434:2: ( (lv_ownedDetails_5_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:4435:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:4435:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:4436:3: lv_ownedDetails_5_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getSysMLCSAccess().getOwnedDetailsDetailCSParserRuleCall_2_1_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_14);
                    	    lv_ownedDetails_5_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSysMLCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_5_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSysMLCSAccess().getSemicolonKeyword_2_1_1_1());

                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getSysMLCSAccess().getRightCurlyBracketKeyword_2_1_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSysMLCS"


    // $ANTLR start "entryRuleTypedMultiplicityRefCS"
    // InternalOCLinEcore.g:4470:1: entryRuleTypedMultiplicityRefCS returns [EObject current=null] : iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF ;
    public final EObject entryRuleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedMultiplicityRefCS = null;


        try {
            // InternalOCLinEcore.g:4471:2: (iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF )
            // InternalOCLinEcore.g:4472:2: iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedMultiplicityRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedMultiplicityRefCS=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedMultiplicityRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedMultiplicityRefCS"


    // $ANTLR start "ruleTypedMultiplicityRefCS"
    // InternalOCLinEcore.g:4479:1: ruleTypedMultiplicityRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4482:28: ( (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:4483:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:4483:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:4484:2: this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getTypedRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_79);
            this_TypedRefCS_0=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypedRefCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:4495:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==130) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalOCLinEcore.g:4496:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:4496:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:4497:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedMultiplicityRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedMultiplicityRefCS"


    // $ANTLR start "entryRuleTemplateSignatureCS"
    // InternalOCLinEcore.g:4521:1: entryRuleTemplateSignatureCS returns [EObject current=null] : iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF ;
    public final EObject entryRuleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateSignatureCS = null;


        try {
            // InternalOCLinEcore.g:4522:2: (iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF )
            // InternalOCLinEcore.g:4523:2: iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateSignatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateSignatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateSignatureCS"


    // $ANTLR start "ruleTemplateSignatureCS"
    // InternalOCLinEcore.g:4530:1: ruleTemplateSignatureCS returns [EObject current=null] : ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) ) ;
    public final EObject ruleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_ownedParameters_1_0 = null;

        EObject lv_ownedParameters_3_0 = null;

        EObject lv_ownedParameters_6_0 = null;

        EObject lv_ownedParameters_8_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4533:28: ( ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) ) )
            // InternalOCLinEcore.g:4534:1: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) )
            {
            // InternalOCLinEcore.g:4534:1: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==54) ) {
                alt127=1;
            }
            else if ( (LA127_0==81) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalOCLinEcore.g:4534:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
                    {
                    // InternalOCLinEcore.g:4534:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
                    // InternalOCLinEcore.g:4534:4: otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,54,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0_0());

                    }
                    // InternalOCLinEcore.g:4538:1: ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) )
                    // InternalOCLinEcore.g:4539:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
                    {
                    // InternalOCLinEcore.g:4539:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
                    // InternalOCLinEcore.g:4540:3: lv_ownedParameters_1_0= ruleTypeParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_ownedParameters_1_0=ruleTypeParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4556:2: (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==59) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4556:4: otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4560:1: ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
                    	    // InternalOCLinEcore.g:4561:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:4561:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
                    	    // InternalOCLinEcore.g:4562:3: lv_ownedParameters_3_0= ruleTypeParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_21);
                    	    lv_ownedParameters_3_0=ruleTypeParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_0_3());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4583:6: (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' )
                    {
                    // InternalOCLinEcore.g:4583:6: (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' )
                    // InternalOCLinEcore.g:4583:8: otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>'
                    {
                    otherlv_5=(Token)match(input,81,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTemplateSignatureCSAccess().getLessThanSignKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:4587:1: ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) )
                    // InternalOCLinEcore.g:4588:1: (lv_ownedParameters_6_0= ruleTypeParameterCS )
                    {
                    // InternalOCLinEcore.g:4588:1: (lv_ownedParameters_6_0= ruleTypeParameterCS )
                    // InternalOCLinEcore.g:4589:3: lv_ownedParameters_6_0= ruleTypeParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_ownedParameters_6_0=ruleTypeParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4605:2: (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==59) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4605:4: otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) )
                    	    {
                    	    otherlv_7=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4609:1: ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) )
                    	    // InternalOCLinEcore.g:4610:1: (lv_ownedParameters_8_0= ruleTypeParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:4610:1: (lv_ownedParameters_8_0= ruleTypeParameterCS )
                    	    // InternalOCLinEcore.g:4611:3: lv_ownedParameters_8_0= ruleTypeParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_ownedParameters_8_0=ruleTypeParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_8_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getTemplateSignatureCSAccess().getGreaterThanSignKeyword_1_3());

                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateSignatureCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalOCLinEcore.g:4639:1: entryRuleTypedRefCS returns [EObject current=null] : iv_ruleTypedRefCS= ruleTypedRefCS EOF ;
    public final EObject entryRuleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedRefCS = null;


        try {
            // InternalOCLinEcore.g:4640:2: (iv_ruleTypedRefCS= ruleTypedRefCS EOF )
            // InternalOCLinEcore.g:4641:2: iv_ruleTypedRefCS= ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedRefCS=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalOCLinEcore.g:4648:1: ruleTypedRefCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) ;
    public final EObject ruleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject this_TypedTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4651:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) )
            // InternalOCLinEcore.g:4652:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            {
            // InternalOCLinEcore.g:4652:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( ((LA128_0>=103 && LA128_0<=104)||(LA128_0>=106 && LA128_0<=118)) ) {
                alt128=1;
            }
            else if ( ((LA128_0>=RULE_SIMPLE_ID && LA128_0<=RULE_ESCAPED_ID)||LA128_0==17||(LA128_0>=19 && LA128_0<=53)||LA128_0==58||LA128_0==71||(LA128_0>=73 && LA128_0<=74)||LA128_0==76||LA128_0==80) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalOCLinEcore.g:4653:2: this_TypeLiteralCS_0= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypeLiteralCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_0=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4666:2: this_TypedTypeRefCS_1= ruleTypedTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedTypeRefCS_1=ruleTypedTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalOCLinEcore.g:4685:1: entryRuleTypedTypeRefCS returns [EObject current=null] : iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF ;
    public final EObject entryRuleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:4686:2: (iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF )
            // InternalOCLinEcore.g:4687:2: iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalOCLinEcore.g:4694:1: ruleTypedTypeRefCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? ) ;
    public final EObject ruleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedBinding_2_0 = null;

        EObject lv_ownedBinding_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4697:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? ) )
            // InternalOCLinEcore.g:4698:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? )
            {
            // InternalOCLinEcore.g:4698:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? )
            // InternalOCLinEcore.g:4698:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )?
            {
            // InternalOCLinEcore.g:4698:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:4699:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:4699:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:4700:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_81);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:4716:2: ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )?
            int alt129=3;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==54) ) {
                alt129=1;
            }
            else if ( (LA129_0==81) ) {
                alt129=2;
            }
            switch (alt129) {
                case 1 :
                    // InternalOCLinEcore.g:4716:3: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )
                    {
                    // InternalOCLinEcore.g:4716:3: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )
                    // InternalOCLinEcore.g:4716:5: otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0_0());

                    }
                    // InternalOCLinEcore.g:4720:1: ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) )
                    // InternalOCLinEcore.g:4721:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    {
                    // InternalOCLinEcore.g:4721:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    // InternalOCLinEcore.g:4722:3: lv_ownedBinding_2_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_ownedBinding_2_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4743:6: (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' )
                    {
                    // InternalOCLinEcore.g:4743:6: (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' )
                    // InternalOCLinEcore.g:4743:8: otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>'
                    {
                    otherlv_4=(Token)match(input,81,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTypedTypeRefCSAccess().getLessThanSignKeyword_1_1_0());

                    }
                    // InternalOCLinEcore.g:4747:1: ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) )
                    // InternalOCLinEcore.g:4748:1: (lv_ownedBinding_5_0= ruleTemplateBindingCS )
                    {
                    // InternalOCLinEcore.g:4748:1: (lv_ownedBinding_5_0= ruleTemplateBindingCS )
                    // InternalOCLinEcore.g:4749:3: lv_ownedBinding_5_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_ownedBinding_5_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_6=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTypedTypeRefCSAccess().getGreaterThanSignKeyword_1_1_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalOCLinEcore.g:4777:1: entryRuleUnrestrictedName returns [String current=null] : iv_ruleUnrestrictedName= ruleUnrestrictedName EOF ;
    public final String entryRuleUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnrestrictedName = null;


        try {
            // InternalOCLinEcore.g:4778:2: (iv_ruleUnrestrictedName= ruleUnrestrictedName EOF )
            // InternalOCLinEcore.g:4779:2: iv_ruleUnrestrictedName= ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnrestrictedName=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalOCLinEcore.g:4786:1: ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' ) ;
    public final AntlrDatatypeRuleToken ruleUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EnumerationLiteralName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4789:28: ( (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' ) )
            // InternalOCLinEcore.g:4790:1: (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' )
            {
            // InternalOCLinEcore.g:4790:1: (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' )
            int alt130=8;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 17:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
                {
                alt130=1;
                }
                break;
            case 58:
                {
                alt130=2;
                }
                break;
            case 73:
                {
                alt130=3;
                }
                break;
            case 53:
                {
                alt130=4;
                }
                break;
            case 74:
                {
                alt130=5;
                }
                break;
            case 76:
                {
                alt130=6;
                }
                break;
            case 71:
                {
                alt130=7;
                }
                break;
            case 80:
                {
                alt130=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }

            switch (alt130) {
                case 1 :
                    // InternalOCLinEcore.g:4791:5: this_EnumerationLiteralName_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEnumerationLiteralNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationLiteralName_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EnumerationLiteralName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4803:2: kw= 'annotation'
                    {
                    kw=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getAnnotationKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:4810:2: kw= 'documentation'
                    {
                    kw=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getDocumentationKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:4817:2: kw= 'invariant'
                    {
                    kw=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getInvariantKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:4824:2: kw= 'literal'
                    {
                    kw=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getLiteralKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:4831:2: kw= 'opposite'
                    {
                    kw=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getOppositeKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:4838:2: kw= 'serializable'
                    {
                    kw=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getSerializableKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:4845:2: kw= 'sysml'
                    {
                    kw=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getSysmlKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalOCLinEcore.g:4862:1: entryRuleEssentialOCLUnaryOperatorName returns [String current=null] : iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF ;
    public final String entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:4863:2: (iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF )
            // InternalOCLinEcore.g:4864:2: iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalOCLinEcore.g:4871:1: ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '-' | kw= 'not' | kw= 'not2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:4874:28: ( (kw= '-' | kw= 'not' | kw= 'not2' ) )
            // InternalOCLinEcore.g:4875:1: (kw= '-' | kw= 'not' | kw= 'not2' )
            {
            // InternalOCLinEcore.g:4875:1: (kw= '-' | kw= 'not' | kw= 'not2' )
            int alt131=3;
            switch ( input.LA(1) ) {
            case 18:
                {
                alt131=1;
                }
                break;
            case 83:
                {
                alt131=2;
                }
                break;
            case 84:
                {
                alt131=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }

            switch (alt131) {
                case 1 :
                    // InternalOCLinEcore.g:4876:2: kw= '-'
                    {
                    kw=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4883:2: kw= 'not'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:4890:2: kw= 'not2'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNot2Keyword_2());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalOCLinEcore.g:4903:1: entryRuleEssentialOCLInfixOperatorName returns [String current=null] : iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF ;
    public final String entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLInfixOperatorName = null;


        try {
            // InternalOCLinEcore.g:4904:2: (iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF )
            // InternalOCLinEcore.g:4905:2: iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalOCLinEcore.g:4912:1: ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:4915:28: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) )
            // InternalOCLinEcore.g:4916:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            {
            // InternalOCLinEcore.g:4916:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            int alt132=18;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt132=1;
                }
                break;
            case 86:
                {
                alt132=2;
                }
                break;
            case 87:
                {
                alt132=3;
                }
                break;
            case 18:
                {
                alt132=4;
                }
                break;
            case 82:
                {
                alt132=5;
                }
                break;
            case 81:
                {
                alt132=6;
                }
                break;
            case 88:
                {
                alt132=7;
                }
                break;
            case 89:
                {
                alt132=8;
                }
                break;
            case 62:
                {
                alt132=9;
                }
                break;
            case 90:
                {
                alt132=10;
                }
                break;
            case 91:
                {
                alt132=11;
                }
                break;
            case 92:
                {
                alt132=12;
                }
                break;
            case 93:
                {
                alt132=13;
                }
                break;
            case 94:
                {
                alt132=14;
                }
                break;
            case 95:
                {
                alt132=15;
                }
                break;
            case 96:
                {
                alt132=16;
                }
                break;
            case 97:
                {
                alt132=17;
                }
                break;
            case 98:
                {
                alt132=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }

            switch (alt132) {
                case 1 :
                    // InternalOCLinEcore.g:4917:2: kw= '*'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4924:2: kw= '/'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:4931:2: kw= '+'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:4938:2: kw= '-'
                    {
                    kw=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:4945:2: kw= '>'
                    {
                    kw=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:4952:2: kw= '<'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:4959:2: kw= '>='
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:4966:2: kw= '<='
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:4973:2: kw= '='
                    {
                    kw=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:4980:2: kw= '<>'
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalOCLinEcore.g:4987:2: kw= 'and'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalOCLinEcore.g:4994:2: kw= 'and2'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAnd2Keyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalOCLinEcore.g:5001:2: kw= 'implies'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalOCLinEcore.g:5008:2: kw= 'implies2'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImplies2Keyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalOCLinEcore.g:5015:2: kw= 'or'
                    {
                    kw=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalOCLinEcore.g:5022:2: kw= 'or2'
                    {
                    kw=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOr2Keyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalOCLinEcore.g:5029:2: kw= 'xor'
                    {
                    kw=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalOCLinEcore.g:5036:2: kw= 'xor2'
                    {
                    kw=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXor2Keyword_17());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalOCLinEcore.g:5049:1: entryRuleEssentialOCLNavigationOperatorName returns [String current=null] : iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF ;
    public final String entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLNavigationOperatorName = null;


        try {
            // InternalOCLinEcore.g:5050:2: (iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF )
            // InternalOCLinEcore.g:5051:2: iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalOCLinEcore.g:5058:1: ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5061:28: ( (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) )
            // InternalOCLinEcore.g:5062:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            {
            // InternalOCLinEcore.g:5062:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            int alt133=4;
            switch ( input.LA(1) ) {
            case 99:
                {
                alt133=1;
                }
                break;
            case 100:
                {
                alt133=2;
                }
                break;
            case 101:
                {
                alt133=3;
                }
                break;
            case 102:
                {
                alt133=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }

            switch (alt133) {
                case 1 :
                    // InternalOCLinEcore.g:5063:2: kw= '.'
                    {
                    kw=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5070:2: kw= '->'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5077:2: kw= '?.'
                    {
                    kw=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5084:2: kw= '?->'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalOCLinEcore.g:5097:1: entryRuleBinaryOperatorName returns [String current=null] : iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF ;
    public final String entryRuleBinaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:5098:2: (iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF )
            // InternalOCLinEcore.g:5099:2: iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBinaryOperatorName=ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalOCLinEcore.g:5106:1: ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_InfixOperatorName_0 = null;

        AntlrDatatypeRuleToken this_NavigationOperatorName_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5109:28: ( (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) )
            // InternalOCLinEcore.g:5110:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            {
            // InternalOCLinEcore.g:5110:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==18||LA134_0==62||(LA134_0>=81 && LA134_0<=82)||(LA134_0>=85 && LA134_0<=98)) ) {
                alt134=1;
            }
            else if ( ((LA134_0>=99 && LA134_0<=102)) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalOCLinEcore.g:5111:5: this_InfixOperatorName_0= ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InfixOperatorName_0=ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_InfixOperatorName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5123:5: this_NavigationOperatorName_1= ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NavigationOperatorName_1=ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NavigationOperatorName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalOCLinEcore.g:5141:1: entryRuleInfixOperatorName returns [String current=null] : iv_ruleInfixOperatorName= ruleInfixOperatorName EOF ;
    public final String entryRuleInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperatorName = null;


        try {
            // InternalOCLinEcore.g:5142:2: (iv_ruleInfixOperatorName= ruleInfixOperatorName EOF )
            // InternalOCLinEcore.g:5143:2: iv_ruleInfixOperatorName= ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInfixOperatorName=ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalOCLinEcore.g:5150:1: ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName ;
    public final AntlrDatatypeRuleToken ruleInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLInfixOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5153:28: (this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName )
            // InternalOCLinEcore.g:5155:5: this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLInfixOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalOCLinEcore.g:5173:1: entryRuleNavigationOperatorName returns [String current=null] : iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF ;
    public final String entryRuleNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNavigationOperatorName = null;


        try {
            // InternalOCLinEcore.g:5174:2: (iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF )
            // InternalOCLinEcore.g:5175:2: iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigationOperatorName=ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalOCLinEcore.g:5182:1: ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName ;
    public final AntlrDatatypeRuleToken ruleNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLNavigationOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5185:28: (this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName )
            // InternalOCLinEcore.g:5187:5: this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLNavigationOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalOCLinEcore.g:5205:1: entryRuleUnaryOperatorName returns [String current=null] : iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF ;
    public final String entryRuleUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:5206:2: (iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF )
            // InternalOCLinEcore.g:5207:2: iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnaryOperatorName=ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalOCLinEcore.g:5214:1: ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName ;
    public final AntlrDatatypeRuleToken ruleUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnaryOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5217:28: (this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName )
            // InternalOCLinEcore.g:5219:5: this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnaryOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalOCLinEcore.g:5237:1: entryRuleEssentialOCLUnrestrictedName returns [String current=null] : iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF ;
    public final String entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnrestrictedName = null;


        try {
            // InternalOCLinEcore.g:5238:2: (iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF )
            // InternalOCLinEcore.g:5239:2: iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalOCLinEcore.g:5246:1: ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Identifier_0= ruleIdentifier ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Identifier_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5249:28: (this_Identifier_0= ruleIdentifier )
            // InternalOCLinEcore.g:5251:5: this_Identifier_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Identifier_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalOCLinEcore.g:5269:1: entryRuleEssentialOCLUnreservedName returns [String current=null] : iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF ;
    public final String entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnreservedName = null;


        try {
            // InternalOCLinEcore.g:5270:2: (iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF )
            // InternalOCLinEcore.g:5271:2: iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalOCLinEcore.g:5278:1: ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_CollectionTypeIdentifier_1 = null;

        AntlrDatatypeRuleToken this_PrimitiveTypeIdentifier_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5281:28: ( (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) )
            // InternalOCLinEcore.g:5282:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            {
            // InternalOCLinEcore.g:5282:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            int alt135=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 17:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 58:
            case 71:
            case 73:
            case 74:
            case 76:
            case 80:
                {
                alt135=1;
                }
                break;
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
                {
                alt135=2;
                }
                break;
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
                {
                alt135=3;
                }
                break;
            case 103:
                {
                alt135=4;
                }
                break;
            case 104:
                {
                alt135=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }

            switch (alt135) {
                case 1 :
                    // InternalOCLinEcore.g:5283:5: this_UnrestrictedName_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnrestrictedName_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_UnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5295:5: this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CollectionTypeIdentifier_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5307:5: this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrimitiveTypeIdentifier_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5319:2: kw= 'Map'
                    {
                    kw=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5326:2: kw= 'Tuple'
                    {
                    kw=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalOCLinEcore.g:5339:1: entryRuleUnreservedName returns [String current=null] : iv_ruleUnreservedName= ruleUnreservedName EOF ;
    public final String entryRuleUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnreservedName = null;


        try {
            // InternalOCLinEcore.g:5340:2: (iv_ruleUnreservedName= ruleUnreservedName EOF )
            // InternalOCLinEcore.g:5341:2: iv_ruleUnreservedName= ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnreservedName=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalOCLinEcore.g:5348:1: ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName ;
    public final AntlrDatatypeRuleToken ruleUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnreservedName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5351:28: (this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName )
            // InternalOCLinEcore.g:5353:5: this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnreservedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIPathNameCS"
    // InternalOCLinEcore.g:5371:1: entryRuleURIPathNameCS returns [EObject current=null] : iv_ruleURIPathNameCS= ruleURIPathNameCS EOF ;
    public final EObject entryRuleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIPathNameCS = null;


        try {
            // InternalOCLinEcore.g:5372:2: (iv_ruleURIPathNameCS= ruleURIPathNameCS EOF )
            // InternalOCLinEcore.g:5373:2: iv_ruleURIPathNameCS= ruleURIPathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIPathNameCS=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIPathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIPathNameCS"


    // $ANTLR start "ruleURIPathNameCS"
    // InternalOCLinEcore.g:5380:1: ruleURIPathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject ruleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5383:28: ( ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalOCLinEcore.g:5384:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalOCLinEcore.g:5384:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalOCLinEcore.g:5384:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalOCLinEcore.g:5384:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) )
            // InternalOCLinEcore.g:5385:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            {
            // InternalOCLinEcore.g:5385:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            // InternalOCLinEcore.g:5386:3: lv_ownedPathElements_0_0= ruleURIFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_ownedPathElements_0_0=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:5402:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==105) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalOCLinEcore.g:5402:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,105,FollowSets000.FOLLOW_85); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:5406:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalOCLinEcore.g:5407:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalOCLinEcore.g:5407:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalOCLinEcore.g:5408:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_84);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIPathNameCS"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalOCLinEcore.g:5432:1: entryRuleURIFirstPathElementCS returns [EObject current=null] : iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF ;
    public final EObject entryRuleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIFirstPathElementCS = null;


        try {
            // InternalOCLinEcore.g:5433:2: (iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF )
            // InternalOCLinEcore.g:5434:2: iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalOCLinEcore.g:5441:1: ruleURIFirstPathElementCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) ;
    public final EObject ruleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5444:28: ( ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) )
            // InternalOCLinEcore.g:5445:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            {
            // InternalOCLinEcore.g:5445:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( ((LA137_0>=RULE_SIMPLE_ID && LA137_0<=RULE_ESCAPED_ID)||LA137_0==17||(LA137_0>=19 && LA137_0<=53)||LA137_0==58||LA137_0==71||(LA137_0>=73 && LA137_0<=74)||LA137_0==76||LA137_0==80) ) {
                alt137=1;
            }
            else if ( (LA137_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalOCLinEcore.g:5445:2: ( ( ruleUnrestrictedName ) )
                    {
                    // InternalOCLinEcore.g:5445:2: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:5446:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:5446:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:5447:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5464:6: ( () ( ( ruleURI ) ) )
                    {
                    // InternalOCLinEcore.g:5464:6: ( () ( ( ruleURI ) ) )
                    // InternalOCLinEcore.g:5464:7: () ( ( ruleURI ) )
                    {
                    // InternalOCLinEcore.g:5464:7: ()
                    // InternalOCLinEcore.g:5465:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:5473:2: ( ( ruleURI ) )
                    // InternalOCLinEcore.g:5474:1: ( ruleURI )
                    {
                    // InternalOCLinEcore.g:5474:1: ( ruleURI )
                    // InternalOCLinEcore.g:5475:3: ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalOCLinEcore.g:5501:1: entryRulePrimitiveTypeIdentifier returns [String current=null] : iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF ;
    public final String entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimitiveTypeIdentifier = null;


        try {
            // InternalOCLinEcore.g:5502:2: (iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF )
            // InternalOCLinEcore.g:5503:2: iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalOCLinEcore.g:5510:1: rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) ;
    public final AntlrDatatypeRuleToken rulePrimitiveTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5513:28: ( (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) )
            // InternalOCLinEcore.g:5514:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            {
            // InternalOCLinEcore.g:5514:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            int alt138=8;
            switch ( input.LA(1) ) {
            case 106:
                {
                alt138=1;
                }
                break;
            case 107:
                {
                alt138=2;
                }
                break;
            case 108:
                {
                alt138=3;
                }
                break;
            case 109:
                {
                alt138=4;
                }
                break;
            case 110:
                {
                alt138=5;
                }
                break;
            case 111:
                {
                alt138=6;
                }
                break;
            case 112:
                {
                alt138=7;
                }
                break;
            case 113:
                {
                alt138=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // InternalOCLinEcore.g:5515:2: kw= 'Boolean'
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5522:2: kw= 'Integer'
                    {
                    kw=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5529:2: kw= 'Real'
                    {
                    kw=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5536:2: kw= 'String'
                    {
                    kw=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5543:2: kw= 'UnlimitedNatural'
                    {
                    kw=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:5550:2: kw= 'OclAny'
                    {
                    kw=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:5557:2: kw= 'OclInvalid'
                    {
                    kw=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:5564:2: kw= 'OclVoid'
                    {
                    kw=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalOCLinEcore.g:5577:1: entryRulePrimitiveTypeCS returns [EObject current=null] : iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF ;
    public final EObject entryRulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveTypeCS = null;


        try {
            // InternalOCLinEcore.g:5578:2: (iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF )
            // InternalOCLinEcore.g:5579:2: iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalOCLinEcore.g:5586:1: rulePrimitiveTypeCS returns [EObject current=null] : ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) ;
    public final EObject rulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5589:28: ( ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) )
            // InternalOCLinEcore.g:5590:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            {
            // InternalOCLinEcore.g:5590:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            // InternalOCLinEcore.g:5591:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            {
            // InternalOCLinEcore.g:5591:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            // InternalOCLinEcore.g:5592:3: lv_name_0_0= rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrimitiveTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalOCLinEcore.g:5616:1: entryRuleCollectionTypeIdentifier returns [String current=null] : iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF ;
    public final String entryRuleCollectionTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCollectionTypeIdentifier = null;


        try {
            // InternalOCLinEcore.g:5617:2: (iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF )
            // InternalOCLinEcore.g:5618:2: iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalOCLinEcore.g:5625:1: ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) ;
    public final AntlrDatatypeRuleToken ruleCollectionTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5628:28: ( (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) )
            // InternalOCLinEcore.g:5629:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            {
            // InternalOCLinEcore.g:5629:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            int alt139=5;
            switch ( input.LA(1) ) {
            case 114:
                {
                alt139=1;
                }
                break;
            case 115:
                {
                alt139=2;
                }
                break;
            case 116:
                {
                alt139=3;
                }
                break;
            case 117:
                {
                alt139=4;
                }
                break;
            case 118:
                {
                alt139=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }

            switch (alt139) {
                case 1 :
                    // InternalOCLinEcore.g:5630:2: kw= 'Set'
                    {
                    kw=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5637:2: kw= 'Bag'
                    {
                    kw=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5644:2: kw= 'Sequence'
                    {
                    kw=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5651:2: kw= 'Collection'
                    {
                    kw=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5658:2: kw= 'OrderedSet'
                    {
                    kw=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalOCLinEcore.g:5671:1: entryRuleCollectionTypeCS returns [EObject current=null] : iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF ;
    public final EObject entryRuleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTypeCS = null;


        try {
            // InternalOCLinEcore.g:5672:2: (iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF )
            // InternalOCLinEcore.g:5673:2: iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeCS=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalOCLinEcore.g:5680:1: ruleCollectionTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedCollectionMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5683:28: ( ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) )
            // InternalOCLinEcore.g:5684:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            {
            // InternalOCLinEcore.g:5684:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            // InternalOCLinEcore.g:5684:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            {
            // InternalOCLinEcore.g:5684:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) )
            // InternalOCLinEcore.g:5685:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            {
            // InternalOCLinEcore.g:5685:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            // InternalOCLinEcore.g:5686:3: lv_name_0_0= ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_name_0_0=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:5702:2: (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==54) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalOCLinEcore.g:5702:4: otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:5706:1: ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) )
                    // InternalOCLinEcore.g:5707:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:5707:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    // InternalOCLinEcore.g:5708:3: lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_ownedType_2_0=ruleTypeExpWithoutMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpWithoutMultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:5724:2: ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==130) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalOCLinEcore.g:5725:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            {
                            // InternalOCLinEcore.g:5725:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            // InternalOCLinEcore.g:5726:3: lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_ownedCollectionMultiplicity_3_0=ruleMultiplicityCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCollectionMultiplicity",
                                      		lv_ownedCollectionMultiplicity_3_0,
                                      		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalOCLinEcore.g:5754:1: entryRuleMapTypeCS returns [EObject current=null] : iv_ruleMapTypeCS= ruleMapTypeCS EOF ;
    public final EObject entryRuleMapTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTypeCS = null;


        try {
            // InternalOCLinEcore.g:5755:2: (iv_ruleMapTypeCS= ruleMapTypeCS EOF )
            // InternalOCLinEcore.g:5756:2: iv_ruleMapTypeCS= ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapTypeCS=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalOCLinEcore.g:5763:1: ruleMapTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleMapTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedKeyType_2_0 = null;

        EObject lv_ownedValueType_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5766:28: ( ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) )
            // InternalOCLinEcore.g:5767:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            {
            // InternalOCLinEcore.g:5767:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            // InternalOCLinEcore.g:5767:2: ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            {
            // InternalOCLinEcore.g:5767:2: ( (lv_name_0_0= 'Map' ) )
            // InternalOCLinEcore.g:5768:1: (lv_name_0_0= 'Map' )
            {
            // InternalOCLinEcore.g:5768:1: (lv_name_0_0= 'Map' )
            // InternalOCLinEcore.g:5769:3: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,103,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMapTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Map");

            }

            }


            }

            // InternalOCLinEcore.g:5782:2: (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==54) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalOCLinEcore.g:5782:4: otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:5786:1: ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:5787:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:5787:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:5788:3: lv_ownedKeyType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_ownedKeyType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedKeyType",
                              		lv_ownedKeyType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());

                    }
                    // InternalOCLinEcore.g:5808:1: ( (lv_ownedValueType_4_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:5809:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:5809:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:5810:3: lv_ownedValueType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_ownedValueType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedValueType",
                              		lv_ownedValueType_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalOCLinEcore.g:5838:1: entryRuleTupleTypeCS returns [EObject current=null] : iv_ruleTupleTypeCS= ruleTupleTypeCS EOF ;
    public final EObject entryRuleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTypeCS = null;


        try {
            // InternalOCLinEcore.g:5839:2: (iv_ruleTupleTypeCS= ruleTupleTypeCS EOF )
            // InternalOCLinEcore.g:5840:2: iv_ruleTupleTypeCS= ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleTypeCS=ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalOCLinEcore.g:5847:1: ruleTupleTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5850:28: ( ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) )
            // InternalOCLinEcore.g:5851:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalOCLinEcore.g:5851:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            // InternalOCLinEcore.g:5851:2: ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            {
            // InternalOCLinEcore.g:5851:2: ( (lv_name_0_0= 'Tuple' ) )
            // InternalOCLinEcore.g:5852:1: (lv_name_0_0= 'Tuple' )
            {
            // InternalOCLinEcore.g:5852:1: (lv_name_0_0= 'Tuple' )
            // InternalOCLinEcore.g:5853:3: lv_name_0_0= 'Tuple'
            {
            lv_name_0_0=(Token)match(input,104,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTupleTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Tuple");

            }

            }


            }

            // InternalOCLinEcore.g:5866:2: (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==54) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalOCLinEcore.g:5866:4: otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:5870:1: ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( ((LA144_0>=RULE_SIMPLE_ID && LA144_0<=RULE_ESCAPED_ID)||LA144_0==17||(LA144_0>=19 && LA144_0<=53)||LA144_0==58||LA144_0==71||(LA144_0>=73 && LA144_0<=74)||LA144_0==76||LA144_0==80) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // InternalOCLinEcore.g:5870:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            {
                            // InternalOCLinEcore.g:5870:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) )
                            // InternalOCLinEcore.g:5871:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            {
                            // InternalOCLinEcore.g:5871:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            // InternalOCLinEcore.g:5872:3: lv_ownedParts_2_0= ruleTuplePartCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_21);
                            lv_ownedParts_2_0=ruleTuplePartCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedParts",
                                      		lv_ownedParts_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:5888:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            loop143:
                            do {
                                int alt143=2;
                                int LA143_0 = input.LA(1);

                                if ( (LA143_0==59) ) {
                                    alt143=1;
                                }


                                switch (alt143) {
                            	case 1 :
                            	    // InternalOCLinEcore.g:5888:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    {
                            	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());

                            	    }
                            	    // InternalOCLinEcore.g:5892:1: ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    // InternalOCLinEcore.g:5893:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    {
                            	    // InternalOCLinEcore.g:5893:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    // InternalOCLinEcore.g:5894:3: lv_ownedParts_4_0= ruleTuplePartCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_21);
                            	    lv_ownedParts_4_0=ruleTuplePartCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                            	      	        }
                            	             		add(
                            	             			current,
                            	             			"ownedParts",
                            	              		lv_ownedParts_4_0,
                            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                            	      	        afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop143;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalOCLinEcore.g:5922:1: entryRuleTuplePartCS returns [EObject current=null] : iv_ruleTuplePartCS= ruleTuplePartCS EOF ;
    public final EObject entryRuleTuplePartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuplePartCS = null;


        try {
            // InternalOCLinEcore.g:5923:2: (iv_ruleTuplePartCS= ruleTuplePartCS EOF )
            // InternalOCLinEcore.g:5924:2: iv_ruleTuplePartCS= ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTuplePartCS=ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuplePartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalOCLinEcore.g:5931:1: ruleTuplePartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleTuplePartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5934:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalOCLinEcore.g:5935:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalOCLinEcore.g:5935:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalOCLinEcore.g:5935:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalOCLinEcore.g:5935:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:5936:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:5936:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:5937:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());

            }
            // InternalOCLinEcore.g:5957:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalOCLinEcore.g:5958:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalOCLinEcore.g:5958:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalOCLinEcore.g:5959:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalOCLinEcore.g:5983:1: entryRuleCollectionLiteralExpCS returns [EObject current=null] : iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF ;
    public final EObject entryRuleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:5984:2: (iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF )
            // InternalOCLinEcore.g:5985:2: iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalOCLinEcore.g:5992:1: ruleCollectionLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5995:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:5996:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:5996:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:5996:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:5996:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalOCLinEcore.g:5997:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalOCLinEcore.g:5997:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalOCLinEcore.g:5998:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6018:1: ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=RULE_INT && LA147_0<=RULE_SINGLE_QUOTED_STRING)||(LA147_0>=RULE_SIMPLE_ID && LA147_0<=RULE_ESCAPED_ID)||(LA147_0>=17 && LA147_0<=54)||LA147_0==56||LA147_0==58||LA147_0==71||(LA147_0>=73 && LA147_0<=74)||LA147_0==76||LA147_0==80||(LA147_0>=83 && LA147_0<=85)||(LA147_0>=103 && LA147_0<=104)||(LA147_0>=106 && LA147_0<=118)||LA147_0==121||(LA147_0>=124 && LA147_0<=127)||LA147_0==134||(LA147_0>=139 && LA147_0<=140)) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalOCLinEcore.g:6018:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:6018:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) )
                    // InternalOCLinEcore.g:6019:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    {
                    // InternalOCLinEcore.g:6019:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    // InternalOCLinEcore.g:6020:3: lv_ownedParts_2_0= ruleCollectionLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_ownedParts_2_0=ruleCollectionLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6036:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==59) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6036:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6040:1: ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    // InternalOCLinEcore.g:6041:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:6041:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    // InternalOCLinEcore.g:6042:3: lv_ownedParts_4_0= ruleCollectionLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_ownedParts_4_0=ruleCollectionLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalOCLinEcore.g:6070:1: entryRuleCollectionLiteralPartCS returns [EObject current=null] : iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF ;
    public final EObject entryRuleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:6071:2: (iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF )
            // InternalOCLinEcore.g:6072:2: iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalOCLinEcore.g:6079:1: ruleCollectionLiteralPartCS returns [EObject current=null] : ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) ;
    public final EObject ruleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedExpression_0_0 = null;

        EObject lv_ownedLastExpression_2_0 = null;

        EObject lv_ownedExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6082:28: ( ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) )
            // InternalOCLinEcore.g:6083:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            {
            // InternalOCLinEcore.g:6083:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalOCLinEcore.g:6083:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:6083:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:6083:3: ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    {
                    // InternalOCLinEcore.g:6083:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:6084:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:6084:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalOCLinEcore.g:6085:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6101:2: (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==119) ) {
                        alt148=1;
                    }
                    switch (alt148) {
                        case 1 :
                            // InternalOCLinEcore.g:6101:4: otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            {
                            otherlv_1=(Token)match(input,119,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());

                            }
                            // InternalOCLinEcore.g:6105:1: ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:6106:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:6106:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            // InternalOCLinEcore.g:6107:3: lv_ownedLastExpression_2_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedLastExpression_2_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedLastExpression",
                                      		lv_ownedLastExpression_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6124:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    {
                    // InternalOCLinEcore.g:6124:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6125:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6125:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    // InternalOCLinEcore.g:6126:3: lv_ownedExpression_3_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_3_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalOCLinEcore.g:6150:1: entryRuleCollectionPatternCS returns [EObject current=null] : iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF ;
    public final EObject entryRuleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionPatternCS = null;


        try {
            // InternalOCLinEcore.g:6151:2: (iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF )
            // InternalOCLinEcore.g:6152:2: iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionPatternCS=ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionPatternCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalOCLinEcore.g:6159:1: ruleCollectionPatternCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;

        AntlrDatatypeRuleToken lv_restVariableName_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6162:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) )
            // InternalOCLinEcore.g:6163:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            {
            // InternalOCLinEcore.g:6163:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            // InternalOCLinEcore.g:6163:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}'
            {
            // InternalOCLinEcore.g:6163:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalOCLinEcore.g:6164:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalOCLinEcore.g:6164:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalOCLinEcore.g:6165:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6185:1: ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( ((LA151_0>=RULE_SIMPLE_ID && LA151_0<=RULE_ESCAPED_ID)||LA151_0==17||(LA151_0>=19 && LA151_0<=53)||LA151_0==56||LA151_0==58||LA151_0==71||(LA151_0>=73 && LA151_0<=74)||LA151_0==76||LA151_0==80) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalOCLinEcore.g:6185:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    {
                    // InternalOCLinEcore.g:6185:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6186:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6186:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    // InternalOCLinEcore.g:6187:3: lv_ownedParts_2_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_ownedParts_2_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6203:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==59) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6203:4: otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6207:1: ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    // InternalOCLinEcore.g:6208:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    {
                    	    // InternalOCLinEcore.g:6208:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    // InternalOCLinEcore.g:6209:3: lv_ownedParts_4_0= rulePatternExpCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_95);
                    	    lv_ownedParts_4_0=rulePatternExpCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);

                    // InternalOCLinEcore.g:6225:4: (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    // InternalOCLinEcore.g:6225:6: otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    {
                    otherlv_5=(Token)match(input,120,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());

                    }
                    // InternalOCLinEcore.g:6229:1: ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    // InternalOCLinEcore.g:6230:1: (lv_restVariableName_6_0= ruleIdentifier )
                    {
                    // InternalOCLinEcore.g:6230:1: (lv_restVariableName_6_0= ruleIdentifier )
                    // InternalOCLinEcore.g:6231:3: lv_restVariableName_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_restVariableName_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		set(
                             			current,
                             			"restVariableName",
                              		lv_restVariableName_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalOCLinEcore.g:6259:1: entryRuleShadowPartCS returns [EObject current=null] : iv_ruleShadowPartCS= ruleShadowPartCS EOF ;
    public final EObject entryRuleShadowPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShadowPartCS = null;


        try {
            // InternalOCLinEcore.g:6260:2: (iv_ruleShadowPartCS= ruleShadowPartCS EOF )
            // InternalOCLinEcore.g:6261:2: iv_ruleShadowPartCS= ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShadowPartCS=ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShadowPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalOCLinEcore.g:6268:1: ruleShadowPartCS returns [EObject current=null] : ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) ;
    public final EObject ruleShadowPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedInitExpression_2_1 = null;

        EObject lv_ownedInitExpression_2_2 = null;

        EObject lv_ownedInitExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6271:28: ( ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) )
            // InternalOCLinEcore.g:6272:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            {
            // InternalOCLinEcore.g:6272:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( ((LA153_0>=RULE_SIMPLE_ID && LA153_0<=RULE_ESCAPED_ID)||LA153_0==17||(LA153_0>=19 && LA153_0<=53)||LA153_0==58||LA153_0==71||(LA153_0>=73 && LA153_0<=74)||LA153_0==76||LA153_0==80) ) {
                alt153=1;
            }
            else if ( (LA153_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalOCLinEcore.g:6272:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    {
                    // InternalOCLinEcore.g:6272:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    // InternalOCLinEcore.g:6272:3: ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:6272:3: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:6273:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:6273:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:6274:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getShadowPartCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_1=(Token)match(input,62,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());

                    }
                    // InternalOCLinEcore.g:6294:1: ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    // InternalOCLinEcore.g:6295:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    {
                    // InternalOCLinEcore.g:6295:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6296:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6296:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    int alt152=2;
                    alt152 = dfa152.predict(input);
                    switch (alt152) {
                        case 1 :
                            // InternalOCLinEcore.g:6297:3: lv_ownedInitExpression_2_1= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_1=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_1,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:6312:8: lv_ownedInitExpression_2_2= rulePatternExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_2=rulePatternExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_2,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6331:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    {
                    // InternalOCLinEcore.g:6331:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    // InternalOCLinEcore.g:6332:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    {
                    // InternalOCLinEcore.g:6332:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    // InternalOCLinEcore.g:6333:3: lv_ownedInitExpression_3_0= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_3_0=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.StringLiteralExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalOCLinEcore.g:6357:1: entryRulePatternExpCS returns [EObject current=null] : iv_rulePatternExpCS= rulePatternExpCS EOF ;
    public final EObject entryRulePatternExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpCS = null;


        try {
            // InternalOCLinEcore.g:6358:2: (iv_rulePatternExpCS= rulePatternExpCS EOF )
            // InternalOCLinEcore.g:6359:2: iv_rulePatternExpCS= rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternExpCS=rulePatternExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalOCLinEcore.g:6366:1: rulePatternExpCS returns [EObject current=null] : ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject rulePatternExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_patternVariableName_0_0 = null;

        EObject lv_ownedPatternType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6369:28: ( ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) )
            // InternalOCLinEcore.g:6370:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalOCLinEcore.g:6370:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            // InternalOCLinEcore.g:6370:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            {
            // InternalOCLinEcore.g:6370:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=RULE_SIMPLE_ID && LA154_0<=RULE_ESCAPED_ID)||LA154_0==17||(LA154_0>=19 && LA154_0<=53)||LA154_0==58||LA154_0==71||(LA154_0>=73 && LA154_0<=74)||LA154_0==76||LA154_0==80) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalOCLinEcore.g:6371:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:6371:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:6372:3: lv_patternVariableName_0_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_patternVariableName_0_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"patternVariableName",
                              		lv_patternVariableName_0_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());

            }
            // InternalOCLinEcore.g:6392:1: ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            // InternalOCLinEcore.g:6393:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            {
            // InternalOCLinEcore.g:6393:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            // InternalOCLinEcore.g:6394:3: lv_ownedPatternType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedPatternType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPatternType",
                      		lv_ownedPatternType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalOCLinEcore.g:6418:1: entryRuleLambdaLiteralExpCS returns [EObject current=null] : iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF ;
    public final EObject entryRuleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLambdaLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6419:2: (iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF )
            // InternalOCLinEcore.g:6420:2: iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLambdaLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalOCLinEcore.g:6427:1: ruleLambdaLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) ;
    public final EObject ruleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedExpressionCS_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6430:28: ( (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) )
            // InternalOCLinEcore.g:6431:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            {
            // InternalOCLinEcore.g:6431:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            // InternalOCLinEcore.g:6431:3: otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,121,FollowSets000.FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());

            }
            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6439:1: ( (lv_ownedExpressionCS_2_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6440:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6440:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            // InternalOCLinEcore.g:6441:3: lv_ownedExpressionCS_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_ownedExpressionCS_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpressionCS",
                      		lv_ownedExpressionCS_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalOCLinEcore.g:6469:1: entryRuleMapLiteralExpCS returns [EObject current=null] : iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF ;
    public final EObject entryRuleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6470:2: (iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF )
            // InternalOCLinEcore.g:6471:2: iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalOCLinEcore.g:6478:1: ruleMapLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6481:28: ( ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:6482:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:6482:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:6482:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:6482:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) )
            // InternalOCLinEcore.g:6483:1: (lv_ownedType_0_0= ruleMapTypeCS )
            {
            // InternalOCLinEcore.g:6483:1: (lv_ownedType_0_0= ruleMapTypeCS )
            // InternalOCLinEcore.g:6484:3: lv_ownedType_0_0= ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_ownedType_0_0=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6504:1: ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( ((LA156_0>=RULE_INT && LA156_0<=RULE_SINGLE_QUOTED_STRING)||(LA156_0>=RULE_SIMPLE_ID && LA156_0<=RULE_ESCAPED_ID)||(LA156_0>=17 && LA156_0<=54)||LA156_0==58||LA156_0==71||(LA156_0>=73 && LA156_0<=74)||LA156_0==76||LA156_0==80||(LA156_0>=83 && LA156_0<=85)||(LA156_0>=103 && LA156_0<=104)||(LA156_0>=106 && LA156_0<=118)||LA156_0==121||(LA156_0>=124 && LA156_0<=127)||LA156_0==134||(LA156_0>=139 && LA156_0<=140)) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalOCLinEcore.g:6504:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:6504:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) )
                    // InternalOCLinEcore.g:6505:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    {
                    // InternalOCLinEcore.g:6505:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    // InternalOCLinEcore.g:6506:3: lv_ownedParts_2_0= ruleMapLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_ownedParts_2_0=ruleMapLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6522:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    loop155:
                    do {
                        int alt155=2;
                        int LA155_0 = input.LA(1);

                        if ( (LA155_0==59) ) {
                            alt155=1;
                        }


                        switch (alt155) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6522:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6526:1: ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    // InternalOCLinEcore.g:6527:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:6527:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    // InternalOCLinEcore.g:6528:3: lv_ownedParts_4_0= ruleMapLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_ownedParts_4_0=ruleMapLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop155;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalOCLinEcore.g:6556:1: entryRuleMapLiteralPartCS returns [EObject current=null] : iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF ;
    public final EObject entryRuleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:6557:2: (iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF )
            // InternalOCLinEcore.g:6558:2: iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalOCLinEcore.g:6565:1: ruleMapLiteralPartCS returns [EObject current=null] : ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedKey_0_0 = null;

        EObject lv_ownedValue_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6568:28: ( ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:6569:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:6569:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:6569:2: ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:6569:2: ( (lv_ownedKey_0_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6570:1: (lv_ownedKey_0_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6570:1: (lv_ownedKey_0_0= ruleExpCS )
            // InternalOCLinEcore.g:6571:3: lv_ownedKey_0_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_98);
            lv_ownedKey_0_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedKey",
                      		lv_ownedKey_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:6587:2: (otherlv_1= 'with' | otherlv_2= '<-' )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==122) ) {
                alt157=1;
            }
            else if ( (LA157_0==123) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalOCLinEcore.g:6587:4: otherlv_1= 'with'
                    {
                    otherlv_1=(Token)match(input,122,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getWithKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6592:7: otherlv_2= '<-'
                    {
                    otherlv_2=(Token)match(input,123,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:6596:2: ( (lv_ownedValue_3_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6597:1: (lv_ownedValue_3_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6597:1: (lv_ownedValue_3_0= ruleExpCS )
            // InternalOCLinEcore.g:6598:3: lv_ownedValue_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedValue_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalOCLinEcore.g:6622:1: entryRulePrimitiveLiteralExpCS returns [EObject current=null] : iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF ;
    public final EObject entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6623:2: (iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF )
            // InternalOCLinEcore.g:6624:2: iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalOCLinEcore.g:6631:1: rulePrimitiveLiteralExpCS returns [EObject current=null] : (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) ;
    public final EObject rulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NumberLiteralExpCS_0 = null;

        EObject this_StringLiteralExpCS_1 = null;

        EObject this_BooleanLiteralExpCS_2 = null;

        EObject this_UnlimitedNaturalLiteralExpCS_3 = null;

        EObject this_InvalidLiteralExpCS_4 = null;

        EObject this_NullLiteralExpCS_5 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6634:28: ( (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) )
            // InternalOCLinEcore.g:6635:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            {
            // InternalOCLinEcore.g:6635:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            int alt158=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt158=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
                {
                alt158=2;
                }
                break;
            case 124:
            case 125:
                {
                alt158=3;
                }
                break;
            case 85:
                {
                alt158=4;
                }
                break;
            case 126:
                {
                alt158=5;
                }
                break;
            case 127:
                {
                alt158=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // InternalOCLinEcore.g:6636:2: this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumberLiteralExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6649:2: this_StringLiteralExpCS_1= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringLiteralExpCS_1=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteralExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:6662:2: this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteralExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:6675:2: this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnlimitedNaturalLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:6688:2: this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InvalidLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:6701:2: this_NullLiteralExpCS_5= ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullLiteralExpCS_5=ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalOCLinEcore.g:6720:1: entryRuleTupleLiteralExpCS returns [EObject current=null] : iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF ;
    public final EObject entryRuleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6721:2: (iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF )
            // InternalOCLinEcore.g:6722:2: iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalOCLinEcore.g:6729:1: ruleTupleLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6732:28: ( (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) )
            // InternalOCLinEcore.g:6733:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:6733:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            // InternalOCLinEcore.g:6733:3: otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,104,FollowSets000.FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());

            }
            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6741:1: ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) )
            // InternalOCLinEcore.g:6742:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            {
            // InternalOCLinEcore.g:6742:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            // InternalOCLinEcore.g:6743:3: lv_ownedParts_2_0= ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_91);
            lv_ownedParts_2_0=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParts",
                      		lv_ownedParts_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:6759:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==59) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // InternalOCLinEcore.g:6759:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    {
            	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());

            	    }
            	    // InternalOCLinEcore.g:6763:1: ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    // InternalOCLinEcore.g:6764:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    {
            	    // InternalOCLinEcore.g:6764:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    // InternalOCLinEcore.g:6765:3: lv_ownedParts_4_0= ruleTupleLiteralPartCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_91);
            	    lv_ownedParts_4_0=ruleTupleLiteralPartCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParts",
            	              		lv_ownedParts_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);

            otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalOCLinEcore.g:6793:1: entryRuleTupleLiteralPartCS returns [EObject current=null] : iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF ;
    public final EObject entryRuleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:6794:2: (iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF )
            // InternalOCLinEcore.g:6795:2: iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalOCLinEcore.g:6802:1: ruleTupleLiteralPartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) ;
    public final EObject ruleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6805:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:6806:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:6806:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:6806:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:6806:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:6807:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:6807:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:6808:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_99);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:6824:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==56) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalOCLinEcore.g:6824:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:6828:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:6829:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:6829:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:6830:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());

            }
            // InternalOCLinEcore.g:6850:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6851:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6851:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            // InternalOCLinEcore.g:6852:3: lv_ownedInitExpression_4_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_4_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_4_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalOCLinEcore.g:6876:1: entryRuleNumberLiteralExpCS returns [EObject current=null] : iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF ;
    public final EObject entryRuleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6877:2: (iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF )
            // InternalOCLinEcore.g:6878:2: iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalOCLinEcore.g:6885:1: ruleNumberLiteralExpCS returns [EObject current=null] : ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) ;
    public final EObject ruleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6888:28: ( ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) )
            // InternalOCLinEcore.g:6889:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            {
            // InternalOCLinEcore.g:6889:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            // InternalOCLinEcore.g:6890:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            {
            // InternalOCLinEcore.g:6890:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            // InternalOCLinEcore.g:6891:3: lv_symbol_0_0= ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_symbol_0_0=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"symbol",
                      		lv_symbol_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalOCLinEcore.g:6915:1: entryRuleStringLiteralExpCS returns [EObject current=null] : iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF ;
    public final EObject entryRuleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6916:2: (iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF )
            // InternalOCLinEcore.g:6917:2: iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalOCLinEcore.g:6924:1: ruleStringLiteralExpCS returns [EObject current=null] : ( (lv_segments_0_0= ruleStringLiteral ) )+ ;
    public final EObject ruleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_segments_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6927:28: ( ( (lv_segments_0_0= ruleStringLiteral ) )+ )
            // InternalOCLinEcore.g:6928:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            {
            // InternalOCLinEcore.g:6928:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            int cnt161=0;
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==RULE_SINGLE_QUOTED_STRING) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalOCLinEcore.g:6929:1: (lv_segments_0_0= ruleStringLiteral )
            	    {
            	    // InternalOCLinEcore.g:6929:1: (lv_segments_0_0= ruleStringLiteral )
            	    // InternalOCLinEcore.g:6930:3: lv_segments_0_0= ruleStringLiteral
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_100);
            	    lv_segments_0_0=ruleStringLiteral();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"segments",
            	              		lv_segments_0_0,
            	              		"org.eclipse.ocl.xtext.base.Base.StringLiteral");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt161 >= 1 ) break loop161;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(161, input);
                        throw eee;
                }
                cnt161++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalOCLinEcore.g:6954:1: entryRuleBooleanLiteralExpCS returns [EObject current=null] : iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF ;
    public final EObject entryRuleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6955:2: (iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF )
            // InternalOCLinEcore.g:6956:2: iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalOCLinEcore.g:6963:1: ruleBooleanLiteralExpCS returns [EObject current=null] : ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) ;
    public final EObject ruleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;
        Token lv_symbol_1_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:6966:28: ( ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) )
            // InternalOCLinEcore.g:6967:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            {
            // InternalOCLinEcore.g:6967:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==124) ) {
                alt162=1;
            }
            else if ( (LA162_0==125) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // InternalOCLinEcore.g:6967:2: ( (lv_symbol_0_0= 'true' ) )
                    {
                    // InternalOCLinEcore.g:6967:2: ( (lv_symbol_0_0= 'true' ) )
                    // InternalOCLinEcore.g:6968:1: (lv_symbol_0_0= 'true' )
                    {
                    // InternalOCLinEcore.g:6968:1: (lv_symbol_0_0= 'true' )
                    // InternalOCLinEcore.g:6969:3: lv_symbol_0_0= 'true'
                    {
                    lv_symbol_0_0=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_0_0, "true");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6983:6: ( (lv_symbol_1_0= 'false' ) )
                    {
                    // InternalOCLinEcore.g:6983:6: ( (lv_symbol_1_0= 'false' ) )
                    // InternalOCLinEcore.g:6984:1: (lv_symbol_1_0= 'false' )
                    {
                    // InternalOCLinEcore.g:6984:1: (lv_symbol_1_0= 'false' )
                    // InternalOCLinEcore.g:6985:3: lv_symbol_1_0= 'false'
                    {
                    lv_symbol_1_0=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_1_0, "false");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalOCLinEcore.g:7006:1: entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final EObject entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7007:2: (iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalOCLinEcore.g:7008:2: iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalOCLinEcore.g:7015:1: ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7018:28: ( ( () otherlv_1= '*' ) )
            // InternalOCLinEcore.g:7019:1: ( () otherlv_1= '*' )
            {
            // InternalOCLinEcore.g:7019:1: ( () otherlv_1= '*' )
            // InternalOCLinEcore.g:7019:2: () otherlv_1= '*'
            {
            // InternalOCLinEcore.g:7019:2: ()
            // InternalOCLinEcore.g:7020:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalOCLinEcore.g:7040:1: entryRuleInvalidLiteralExpCS returns [EObject current=null] : iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF ;
    public final EObject entryRuleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvalidLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7041:2: (iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF )
            // InternalOCLinEcore.g:7042:2: iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvalidLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalOCLinEcore.g:7049:1: ruleInvalidLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'invalid' ) ;
    public final EObject ruleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7052:28: ( ( () otherlv_1= 'invalid' ) )
            // InternalOCLinEcore.g:7053:1: ( () otherlv_1= 'invalid' )
            {
            // InternalOCLinEcore.g:7053:1: ( () otherlv_1= 'invalid' )
            // InternalOCLinEcore.g:7053:2: () otherlv_1= 'invalid'
            {
            // InternalOCLinEcore.g:7053:2: ()
            // InternalOCLinEcore.g:7054:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalOCLinEcore.g:7074:1: entryRuleNullLiteralExpCS returns [EObject current=null] : iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF ;
    public final EObject entryRuleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7075:2: (iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF )
            // InternalOCLinEcore.g:7076:2: iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalOCLinEcore.g:7083:1: ruleNullLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7086:28: ( ( () otherlv_1= 'null' ) )
            // InternalOCLinEcore.g:7087:1: ( () otherlv_1= 'null' )
            {
            // InternalOCLinEcore.g:7087:1: ( () otherlv_1= 'null' )
            // InternalOCLinEcore.g:7087:2: () otherlv_1= 'null'
            {
            // InternalOCLinEcore.g:7087:2: ()
            // InternalOCLinEcore.g:7088:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalOCLinEcore.g:7108:1: entryRuleTypeLiteralCS returns [EObject current=null] : iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF ;
    public final EObject entryRuleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralCS = null;


        try {
            // InternalOCLinEcore.g:7109:2: (iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF )
            // InternalOCLinEcore.g:7110:2: iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralCS=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalOCLinEcore.g:7117:1: ruleTypeLiteralCS returns [EObject current=null] : (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) ;
    public final EObject ruleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrimitiveTypeCS_0 = null;

        EObject this_CollectionTypeCS_1 = null;

        EObject this_MapTypeCS_2 = null;

        EObject this_TupleTypeCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7120:28: ( (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) )
            // InternalOCLinEcore.g:7121:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            {
            // InternalOCLinEcore.g:7121:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            int alt163=4;
            switch ( input.LA(1) ) {
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
                {
                alt163=1;
                }
                break;
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
                {
                alt163=2;
                }
                break;
            case 103:
                {
                alt163=3;
                }
                break;
            case 104:
                {
                alt163=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }

            switch (alt163) {
                case 1 :
                    // InternalOCLinEcore.g:7122:2: this_PrimitiveTypeCS_0= rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeCS_0=rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveTypeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7135:2: this_CollectionTypeCS_1= ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeCS_1=ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:7148:2: this_MapTypeCS_2= ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapTypeCS_2=ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapTypeCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:7161:2: this_TupleTypeCS_3= ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleTypeCS_3=ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleTypeCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalOCLinEcore.g:7180:1: entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null] : iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF ;
    public final EObject entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralWithMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:7181:2: (iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalOCLinEcore.g:7182:2: iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralWithMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalOCLinEcore.g:7189:1: ruleTypeLiteralWithMultiplicityCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7192:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:7193:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:7193:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:7194:2: this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_79);
            this_TypeLiteralCS_0=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeLiteralCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:7205:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==130) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalOCLinEcore.g:7206:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:7206:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:7207:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalOCLinEcore.g:7231:1: entryRuleTypeLiteralExpCS returns [EObject current=null] : iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF ;
    public final EObject entryRuleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7232:2: (iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF )
            // InternalOCLinEcore.g:7233:2: iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalOCLinEcore.g:7240:1: ruleTypeLiteralExpCS returns [EObject current=null] : ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) ;
    public final EObject ruleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedType_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7243:28: ( ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) )
            // InternalOCLinEcore.g:7244:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            {
            // InternalOCLinEcore.g:7244:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            // InternalOCLinEcore.g:7245:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalOCLinEcore.g:7245:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            // InternalOCLinEcore.g:7246:3: lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalOCLinEcore.g:7270:1: entryRuleTypeNameExpCS returns [EObject current=null] : iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF ;
    public final EObject entryRuleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameExpCS = null;


        try {
            // InternalOCLinEcore.g:7271:2: (iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF )
            // InternalOCLinEcore.g:7272:2: iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeNameExpCS=ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalOCLinEcore.g:7279:1: ruleTypeNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) ;
    public final EObject ruleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7282:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) )
            // InternalOCLinEcore.g:7283:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            {
            // InternalOCLinEcore.g:7283:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            // InternalOCLinEcore.g:7283:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            {
            // InternalOCLinEcore.g:7283:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:7284:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:7284:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:7285:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:7301:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==60) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalOCLinEcore.g:7301:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    {
                    // InternalOCLinEcore.g:7301:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
                    // InternalOCLinEcore.g:7302:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:7302:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    // InternalOCLinEcore.g:7303:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:7319:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    int alt165=2;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==60) ) {
                        alt165=1;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalOCLinEcore.g:7319:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                            {
                            otherlv_2=(Token)match(input,60,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:7323:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:7324:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:7324:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            // InternalOCLinEcore.g:7325:3: lv_ownedPatternGuard_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_38);
                            lv_ownedPatternGuard_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedPatternGuard",
                                      		lv_ownedPatternGuard_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalOCLinEcore.g:7353:1: entryRuleTypeExpWithoutMultiplicityCS returns [EObject current=null] : iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF ;
    public final EObject entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpWithoutMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:7354:2: (iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalOCLinEcore.g:7355:2: iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpWithoutMultiplicityCS=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpWithoutMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalOCLinEcore.g:7362:1: ruleTypeExpWithoutMultiplicityCS returns [EObject current=null] : (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) ;
    public final EObject ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeNameExpCS_0 = null;

        EObject this_TypeLiteralCS_1 = null;

        EObject this_CollectionPatternCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7365:28: ( (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) )
            // InternalOCLinEcore.g:7366:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            {
            // InternalOCLinEcore.g:7366:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            int alt167=3;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalOCLinEcore.g:7367:2: this_TypeNameExpCS_0= ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeNameExpCS_0=ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeNameExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7380:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_1=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:7393:2: this_CollectionPatternCS_2= ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionPatternCS_2=ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionPatternCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalOCLinEcore.g:7412:1: entryRuleTypeExpCS returns [EObject current=null] : iv_ruleTypeExpCS= ruleTypeExpCS EOF ;
    public final EObject entryRuleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpCS = null;


        try {
            // InternalOCLinEcore.g:7413:2: (iv_ruleTypeExpCS= ruleTypeExpCS EOF )
            // InternalOCLinEcore.g:7414:2: iv_ruleTypeExpCS= ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpCS=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalOCLinEcore.g:7421:1: ruleTypeExpCS returns [EObject current=null] : (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeExpWithoutMultiplicityCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7424:28: ( (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:7425:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:7425:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:7426:2: this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_79);
            this_TypeExpWithoutMultiplicityCS_0=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeExpWithoutMultiplicityCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:7437:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==130) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalOCLinEcore.g:7438:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:7438:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:7439:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalOCLinEcore.g:7463:1: entryRuleExpCS returns [EObject current=null] : iv_ruleExpCS= ruleExpCS EOF ;
    public final EObject entryRuleExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpCS = null;


        try {
            // InternalOCLinEcore.g:7464:2: (iv_ruleExpCS= ruleExpCS EOF )
            // InternalOCLinEcore.g:7465:2: iv_ruleExpCS= ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpCS=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalOCLinEcore.g:7472:1: ruleExpCS returns [EObject current=null] : ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) ;
    public final EObject ruleExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;

        EObject this_PrefixedLetExpCS_4 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7475:28: ( ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) )
            // InternalOCLinEcore.g:7476:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            {
            // InternalOCLinEcore.g:7476:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            int alt170=2;
            alt170 = dfa170.predict(input);
            switch (alt170) {
                case 1 :
                    // InternalOCLinEcore.g:7476:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:7476:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:7477:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedPrimaryExpCS_0;
                              afterParserOrEnumRuleCall();

                    }
                    // InternalOCLinEcore.g:7488:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==18||LA169_0==62||(LA169_0>=81 && LA169_0<=82)||(LA169_0>=85 && LA169_0<=102)) ) {
                        alt169=1;
                    }
                    switch (alt169) {
                        case 1 :
                            // InternalOCLinEcore.g:7488:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                            {
                            // InternalOCLinEcore.g:7488:2: ()
                            // InternalOCLinEcore.g:7489:2:
                            {
                            if ( state.backtracking==0 ) {

                              	  /* */

                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
                                          current);

                            }

                            }

                            // InternalOCLinEcore.g:7497:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                            // InternalOCLinEcore.g:7498:1: (lv_name_2_0= ruleBinaryOperatorName )
                            {
                            // InternalOCLinEcore.g:7498:1: (lv_name_2_0= ruleBinaryOperatorName )
                            // InternalOCLinEcore.g:7499:3: lv_name_2_0= ruleBinaryOperatorName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_94);
                            lv_name_2_0=ruleBinaryOperatorName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:7515:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:7516:1: (lv_ownedRight_3_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:7516:1: (lv_ownedRight_3_0= ruleExpCS )
                            // InternalOCLinEcore.g:7517:3: lv_ownedRight_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedRight_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedRight",
                                      		lv_ownedRight_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7535:2: this_PrefixedLetExpCS_4= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrefixedLetExpCS_4=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedLetExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalOCLinEcore.g:7554:1: entryRulePrefixedLetExpCS returns [EObject current=null] : iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF ;
    public final EObject entryRulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedLetExpCS = null;


        try {
            // InternalOCLinEcore.g:7555:2: (iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF )
            // InternalOCLinEcore.g:7556:2: iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalOCLinEcore.g:7563:1: rulePrefixedLetExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) ;
    public final EObject rulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_LetExpCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7566:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) )
            // InternalOCLinEcore.g:7567:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            {
            // InternalOCLinEcore.g:7567:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==18||(LA171_0>=83 && LA171_0<=84)) ) {
                alt171=1;
            }
            else if ( (LA171_0==139) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // InternalOCLinEcore.g:7567:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:7567:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    // InternalOCLinEcore.g:7567:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    {
                    // InternalOCLinEcore.g:7567:3: ()
                    // InternalOCLinEcore.g:7568:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:7576:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalOCLinEcore.g:7577:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalOCLinEcore.g:7577:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalOCLinEcore.g:7578:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:7594:2: ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    // InternalOCLinEcore.g:7595:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    {
                    // InternalOCLinEcore.g:7595:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    // InternalOCLinEcore.g:7596:3: lv_ownedRight_2_0= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7614:2: this_LetExpCS_3= ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LetExpCS_3=ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LetExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalOCLinEcore.g:7633:1: entryRulePrefixedPrimaryExpCS returns [EObject current=null] : iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF ;
    public final EObject entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedPrimaryExpCS = null;


        try {
            // InternalOCLinEcore.g:7634:2: (iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF )
            // InternalOCLinEcore.g:7635:2: iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedPrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalOCLinEcore.g:7642:1: rulePrefixedPrimaryExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) ;
    public final EObject rulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_PrimaryExpCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7645:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) )
            // InternalOCLinEcore.g:7646:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            {
            // InternalOCLinEcore.g:7646:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==18||(LA172_0>=83 && LA172_0<=84)) ) {
                alt172=1;
            }
            else if ( ((LA172_0>=RULE_INT && LA172_0<=RULE_SINGLE_QUOTED_STRING)||(LA172_0>=RULE_SIMPLE_ID && LA172_0<=RULE_ESCAPED_ID)||LA172_0==17||(LA172_0>=19 && LA172_0<=54)||LA172_0==58||LA172_0==71||(LA172_0>=73 && LA172_0<=74)||LA172_0==76||LA172_0==80||LA172_0==85||(LA172_0>=103 && LA172_0<=104)||(LA172_0>=106 && LA172_0<=118)||LA172_0==121||(LA172_0>=124 && LA172_0<=127)||LA172_0==134||LA172_0==140) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalOCLinEcore.g:7646:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:7646:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    // InternalOCLinEcore.g:7646:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    {
                    // InternalOCLinEcore.g:7646:3: ()
                    // InternalOCLinEcore.g:7647:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:7655:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalOCLinEcore.g:7656:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalOCLinEcore.g:7656:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalOCLinEcore.g:7657:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_27);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:7673:2: ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    // InternalOCLinEcore.g:7674:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    {
                    // InternalOCLinEcore.g:7674:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    // InternalOCLinEcore.g:7675:3: lv_ownedRight_2_0= rulePrefixedPrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7693:2: this_PrimaryExpCS_3= rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimaryExpCS_3=rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalOCLinEcore.g:7712:1: entryRulePrimaryExpCS returns [EObject current=null] : iv_rulePrimaryExpCS= rulePrimaryExpCS EOF ;
    public final EObject entryRulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpCS = null;


        try {
            // InternalOCLinEcore.g:7713:2: (iv_rulePrimaryExpCS= rulePrimaryExpCS EOF )
            // InternalOCLinEcore.g:7714:2: iv_rulePrimaryExpCS= rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimaryExpCS=rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalOCLinEcore.g:7721:1: rulePrimaryExpCS returns [EObject current=null] : (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) ;
    public final EObject rulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NestedExpCS_0 = null;

        EObject this_IfExpCS_1 = null;

        EObject this_SelfExpCS_2 = null;

        EObject this_PrimitiveLiteralExpCS_3 = null;

        EObject this_TupleLiteralExpCS_4 = null;

        EObject this_MapLiteralExpCS_5 = null;

        EObject this_CollectionLiteralExpCS_6 = null;

        EObject this_LambdaLiteralExpCS_7 = null;

        EObject this_TypeLiteralExpCS_8 = null;

        EObject this_NameExpCS_9 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7724:28: ( (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) )
            // InternalOCLinEcore.g:7725:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            {
            // InternalOCLinEcore.g:7725:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            int alt173=10;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // InternalOCLinEcore.g:7726:2: this_NestedExpCS_0= ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedExpCS_0=ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NestedExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7739:2: this_IfExpCS_1= ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfExpCS_1=ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:7752:2: this_SelfExpCS_2= ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SelfExpCS_2=ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SelfExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:7765:2: this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:7778:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:7791:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:7804:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionLiteralExpCS_6;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:7817:2: this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LambdaLiteralExpCS_7;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:7830:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralExpCS_8;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:7843:2: this_NameExpCS_9= ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NameExpCS_9=ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NameExpCS_9;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalOCLinEcore.g:7862:1: entryRuleNameExpCS returns [EObject current=null] : iv_ruleNameExpCS= ruleNameExpCS EOF ;
    public final EObject entryRuleNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameExpCS = null;


        try {
            // InternalOCLinEcore.g:7863:2: (iv_ruleNameExpCS= ruleNameExpCS EOF )
            // InternalOCLinEcore.g:7864:2: iv_ruleNameExpCS= ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNameExpCS=ruleNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalOCLinEcore.g:7871:1: ruleNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) ;
    public final EObject ruleNameExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPre_4_0=null;
        Token otherlv_5=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedSquareBracketedClauses_1_0 = null;

        EObject lv_ownedRoundBracketedClause_2_0 = null;

        EObject lv_ownedCurlyBracketedClause_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7874:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) )
            // InternalOCLinEcore.g:7875:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            {
            // InternalOCLinEcore.g:7875:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            // InternalOCLinEcore.g:7875:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            {
            // InternalOCLinEcore.g:7875:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:7876:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:7876:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:7877:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_102);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:7893:2: ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==130) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalOCLinEcore.g:7894:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    {
            	    // InternalOCLinEcore.g:7894:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    // InternalOCLinEcore.g:7895:3: lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_102);
            	    lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSquareBracketedClauses",
            	              		lv_ownedSquareBracketedClauses_1_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            // InternalOCLinEcore.g:7911:3: ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==54) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalOCLinEcore.g:7912:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:7912:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    // InternalOCLinEcore.g:7913:3: lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:7929:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==60) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalOCLinEcore.g:7930:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:7930:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    // InternalOCLinEcore.g:7931:3: lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:7947:3: ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==128) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalOCLinEcore.g:7947:4: ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre'
                    {
                    // InternalOCLinEcore.g:7947:4: ( (lv_isPre_4_0= '@' ) )
                    // InternalOCLinEcore.g:7948:1: (lv_isPre_4_0= '@' )
                    {
                    // InternalOCLinEcore.g:7948:1: (lv_isPre_4_0= '@' )
                    // InternalOCLinEcore.g:7949:3: lv_isPre_4_0= '@'
                    {
                    lv_isPre_4_0=(Token)match(input,128,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNameExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPre", true, "@");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalOCLinEcore.g:7974:1: entryRuleCurlyBracketedClauseCS returns [EObject current=null] : iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF ;
    public final EObject entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurlyBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:7975:2: (iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF )
            // InternalOCLinEcore.g:7976:2: iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurlyBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalOCLinEcore.g:7983:1: ruleCurlyBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7986:28: ( ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:7987:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:7987:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:7987:2: () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:7987:2: ()
            // InternalOCLinEcore.g:7988:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:8000:1: ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==RULE_SINGLE_QUOTED_STRING||(LA179_0>=RULE_SIMPLE_ID && LA179_0<=RULE_ESCAPED_ID)||LA179_0==17||(LA179_0>=19 && LA179_0<=53)||LA179_0==58||LA179_0==71||(LA179_0>=73 && LA179_0<=74)||LA179_0==76||LA179_0==80) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalOCLinEcore.g:8000:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:8000:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) )
                    // InternalOCLinEcore.g:8001:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    {
                    // InternalOCLinEcore.g:8001:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    // InternalOCLinEcore.g:8002:3: lv_ownedParts_2_0= ruleShadowPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_ownedParts_2_0=ruleShadowPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8018:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    loop178:
                    do {
                        int alt178=2;
                        int LA178_0 = input.LA(1);

                        if ( (LA178_0==59) ) {
                            alt178=1;
                        }


                        switch (alt178) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:8018:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,59,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:8022:1: ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    // InternalOCLinEcore.g:8023:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:8023:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    // InternalOCLinEcore.g:8024:3: lv_ownedParts_4_0= ruleShadowPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_ownedParts_4_0=ruleShadowPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop178;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalOCLinEcore.g:8052:1: entryRuleRoundBracketedClauseCS returns [EObject current=null] : iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF ;
    public final EObject entryRuleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:8053:2: (iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF )
            // InternalOCLinEcore.g:8054:2: iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalOCLinEcore.g:8061:1: ruleRoundBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) ;
    public final EObject ruleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedArguments_2_0 = null;

        EObject lv_ownedArguments_3_1 = null;

        EObject lv_ownedArguments_3_2 = null;

        EObject lv_ownedArguments_3_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8064:28: ( ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) )
            // InternalOCLinEcore.g:8065:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            {
            // InternalOCLinEcore.g:8065:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            // InternalOCLinEcore.g:8065:2: () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')'
            {
            // InternalOCLinEcore.g:8065:2: ()
            // InternalOCLinEcore.g:8066:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());

            }
            // InternalOCLinEcore.g:8078:1: ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( ((LA182_0>=RULE_INT && LA182_0<=RULE_SINGLE_QUOTED_STRING)||(LA182_0>=RULE_SIMPLE_ID && LA182_0<=RULE_ESCAPED_ID)||(LA182_0>=17 && LA182_0<=54)||LA182_0==56||LA182_0==58||LA182_0==71||(LA182_0>=73 && LA182_0<=74)||LA182_0==76||LA182_0==80||(LA182_0>=83 && LA182_0<=85)||(LA182_0>=103 && LA182_0<=104)||(LA182_0>=106 && LA182_0<=118)||LA182_0==121||(LA182_0>=124 && LA182_0<=127)||LA182_0==134||(LA182_0>=139 && LA182_0<=140)) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalOCLinEcore.g:8078:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    {
                    // InternalOCLinEcore.g:8078:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) )
                    // InternalOCLinEcore.g:8079:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    {
                    // InternalOCLinEcore.g:8079:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    // InternalOCLinEcore.g:8080:3: lv_ownedArguments_2_0= ruleNavigatingArgCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_107);
                    lv_ownedArguments_2_0=ruleNavigatingArgCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedArguments",
                              		lv_ownedArguments_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8096:2: ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    loop181:
                    do {
                        int alt181=2;
                        int LA181_0 = input.LA(1);

                        if ( (LA181_0==57||LA181_0==59||LA181_0==133) ) {
                            alt181=1;
                        }


                        switch (alt181) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:8097:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:8097:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    // InternalOCLinEcore.g:8098:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    {
                    	    // InternalOCLinEcore.g:8098:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    int alt180=3;
                    	    switch ( input.LA(1) ) {
                    	    case 59:
                    	        {
                    	        alt180=1;
                    	        }
                    	        break;
                    	    case 57:
                    	        {
                    	        alt180=2;
                    	        }
                    	        break;
                    	    case 133:
                    	        {
                    	        alt180=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 180, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt180) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:8099:3: lv_ownedArguments_3_1= ruleNavigatingCommaArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_107);
                    	            lv_ownedArguments_3_1=ruleNavigatingCommaArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_1,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:8114:8: lv_ownedArguments_3_2= ruleNavigatingSemiArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_107);
                    	            lv_ownedArguments_3_2=ruleNavigatingSemiArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_2,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:8129:8: lv_ownedArguments_3_3= ruleNavigatingBarArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_1_0_2());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_107);
                    	            lv_ownedArguments_3_3=ruleNavigatingBarArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_3,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop181;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalOCLinEcore.g:8159:1: entryRuleSquareBracketedClauseCS returns [EObject current=null] : iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF ;
    public final EObject entryRuleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSquareBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:8160:2: (iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF )
            // InternalOCLinEcore.g:8161:2: iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSquareBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalOCLinEcore.g:8168:1: ruleSquareBracketedClauseCS returns [EObject current=null] : (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedTerms_1_0 = null;

        EObject lv_ownedTerms_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8171:28: ( (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) )
            // InternalOCLinEcore.g:8172:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            {
            // InternalOCLinEcore.g:8172:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            // InternalOCLinEcore.g:8172:3: otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,130,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalOCLinEcore.g:8176:1: ( (lv_ownedTerms_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:8177:1: (lv_ownedTerms_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:8177:1: (lv_ownedTerms_1_0= ruleExpCS )
            // InternalOCLinEcore.g:8178:3: lv_ownedTerms_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_108);
            lv_ownedTerms_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedTerms",
                      		lv_ownedTerms_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8194:2: (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )*
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==59) ) {
                    alt183=1;
                }


                switch (alt183) {
            	case 1 :
            	    // InternalOCLinEcore.g:8194:4: otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,59,FollowSets000.FOLLOW_94); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalOCLinEcore.g:8198:1: ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    // InternalOCLinEcore.g:8199:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    {
            	    // InternalOCLinEcore.g:8199:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    // InternalOCLinEcore.g:8200:3: lv_ownedTerms_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_ownedTerms_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTerms",
            	              		lv_ownedTerms_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);

            otherlv_4=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalOCLinEcore.g:8228:1: entryRuleNavigatingArgCS returns [EObject current=null] : iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF ;
    public final EObject entryRuleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgCS = null;


        try {
            // InternalOCLinEcore.g:8229:2: (iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF )
            // InternalOCLinEcore.g:8230:2: iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgCS=ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalOCLinEcore.g:8237:1: ruleNavigatingArgCS returns [EObject current=null] : ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) ) ;
    public final EObject ruleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_ownedNameExpression_0_0 = null;

        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_10_0 = null;

        EObject lv_ownedInitExpression_12_0 = null;

        EObject lv_ownedType_14_0 = null;

        EObject lv_ownedCoIterator_17_0 = null;

        EObject lv_ownedInitExpression_19_0 = null;

        EObject lv_ownedType_21_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8240:28: ( ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) ) )
            // InternalOCLinEcore.g:8241:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) )
            {
            // InternalOCLinEcore.g:8241:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) )
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( ((LA193_0>=RULE_INT && LA193_0<=RULE_SINGLE_QUOTED_STRING)||(LA193_0>=RULE_SIMPLE_ID && LA193_0<=RULE_ESCAPED_ID)||(LA193_0>=17 && LA193_0<=54)||LA193_0==58||LA193_0==71||(LA193_0>=73 && LA193_0<=74)||LA193_0==76||LA193_0==80||(LA193_0>=83 && LA193_0<=85)||(LA193_0>=103 && LA193_0<=104)||(LA193_0>=106 && LA193_0<=118)||LA193_0==121||(LA193_0>=124 && LA193_0<=127)||LA193_0==134||(LA193_0>=139 && LA193_0<=140)) ) {
                alt193=1;
            }
            else if ( (LA193_0==56) ) {
                alt193=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }
            switch (alt193) {
                case 1 :
                    // InternalOCLinEcore.g:8241:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? )
                    {
                    // InternalOCLinEcore.g:8241:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? )
                    // InternalOCLinEcore.g:8241:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?
                    {
                    // InternalOCLinEcore.g:8241:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) )
                    // InternalOCLinEcore.g:8242:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    {
                    // InternalOCLinEcore.g:8242:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    // InternalOCLinEcore.g:8243:3: lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedNameExpression",
                              		lv_ownedNameExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8259:2: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?
                    int alt192=4;
                    alt192 = dfa192.predict(input);
                    switch (alt192) {
                        case 1 :
                            // InternalOCLinEcore.g:8259:3: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                            {
                            // InternalOCLinEcore.g:8259:3: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                            // InternalOCLinEcore.g:8259:4: (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                            {
                            // InternalOCLinEcore.g:8259:4: (otherlv_1= 'with' | otherlv_2= '<-' )
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==122) ) {
                                alt184=1;
                            }
                            else if ( (LA184_0==123) ) {
                                alt184=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 184, 0, input);

                                throw nvae;
                            }
                            switch (alt184) {
                                case 1 :
                                    // InternalOCLinEcore.g:8259:6: otherlv_1= 'with'
                                    {
                                    otherlv_1=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_0_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalOCLinEcore.g:8264:7: otherlv_2= '<-'
                                    {
                                    otherlv_2=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_0_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8268:2: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:8269:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:8269:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:8270:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:8286:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                            int alt185=2;
                            int LA185_0 = input.LA(1);

                            if ( (LA185_0==62) ) {
                                alt185=1;
                            }
                            switch (alt185) {
                                case 1 :
                                    // InternalOCLinEcore.g:8286:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                                    {
                                    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_4, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());

                                    }
                                    // InternalOCLinEcore.g:8290:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                                    // InternalOCLinEcore.g:8291:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                                    {
                                    // InternalOCLinEcore.g:8291:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                                    // InternalOCLinEcore.g:8292:3: lv_ownedInitExpression_5_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_5_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_5_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:8309:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
                            {
                            // InternalOCLinEcore.g:8309:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
                            // InternalOCLinEcore.g:8309:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
                            {
                            otherlv_6=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_1_0());

                            }
                            // InternalOCLinEcore.g:8313:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
                            // InternalOCLinEcore.g:8314:1: (lv_ownedType_7_0= ruleTypeExpCS )
                            {
                            // InternalOCLinEcore.g:8314:1: (lv_ownedType_7_0= ruleTypeExpCS )
                            // InternalOCLinEcore.g:8315:3: lv_ownedType_7_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_111);
                            lv_ownedType_7_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_7_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:8331:2: ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )?
                            int alt187=2;
                            int LA187_0 = input.LA(1);

                            if ( ((LA187_0>=122 && LA187_0<=123)) ) {
                                alt187=1;
                            }
                            switch (alt187) {
                                case 1 :
                                    // InternalOCLinEcore.g:8331:3: (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                                    {
                                    // InternalOCLinEcore.g:8331:3: (otherlv_8= 'with' | otherlv_9= '<-' )
                                    int alt186=2;
                                    int LA186_0 = input.LA(1);

                                    if ( (LA186_0==122) ) {
                                        alt186=1;
                                    }
                                    else if ( (LA186_0==123) ) {
                                        alt186=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 186, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt186) {
                                        case 1 :
                                            // InternalOCLinEcore.g:8331:5: otherlv_8= 'with'
                                            {
                                            otherlv_8=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_8, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_1_2_0_0());

                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalOCLinEcore.g:8336:7: otherlv_9= '<-'
                                            {
                                            otherlv_9=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_9, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_1_2_0_1());

                                            }

                                            }
                                            break;

                                    }

                                    // InternalOCLinEcore.g:8340:2: ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                                    // InternalOCLinEcore.g:8341:1: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalOCLinEcore.g:8341:1: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                                    // InternalOCLinEcore.g:8342:3: lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_110);
                                    lv_ownedCoIterator_10_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_10_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8358:4: (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
                            int alt188=2;
                            int LA188_0 = input.LA(1);

                            if ( (LA188_0==62) ) {
                                alt188=1;
                            }
                            switch (alt188) {
                                case 1 :
                                    // InternalOCLinEcore.g:8358:6: otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                                    {
                                    otherlv_11=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_11, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_1_3_0());

                                    }
                                    // InternalOCLinEcore.g:8362:1: ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                                    // InternalOCLinEcore.g:8363:1: (lv_ownedInitExpression_12_0= ruleExpCS )
                                    {
                                    // InternalOCLinEcore.g:8363:1: (lv_ownedInitExpression_12_0= ruleExpCS )
                                    // InternalOCLinEcore.g:8364:3: lv_ownedInitExpression_12_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_12_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_12_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalOCLinEcore.g:8381:6: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
                            {
                            // InternalOCLinEcore.g:8381:6: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
                            // InternalOCLinEcore.g:8381:7: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
                            {
                            // InternalOCLinEcore.g:8381:7: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )?
                            int alt189=2;
                            int LA189_0 = input.LA(1);

                            if ( (LA189_0==56) ) {
                                alt189=1;
                            }
                            switch (alt189) {
                                case 1 :
                                    // InternalOCLinEcore.g:8381:9: otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                                    {
                                    otherlv_13=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_13, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_2_0_0());

                                    }
                                    // InternalOCLinEcore.g:8385:1: ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                                    // InternalOCLinEcore.g:8386:1: (lv_ownedType_14_0= ruleTypeExpCS )
                                    {
                                    // InternalOCLinEcore.g:8386:1: (lv_ownedType_14_0= ruleTypeExpCS )
                                    // InternalOCLinEcore.g:8387:3: lv_ownedType_14_0= ruleTypeExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_112);
                                    lv_ownedType_14_0=ruleTypeExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedType",
                                              		lv_ownedType_14_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8403:4: ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )?
                            int alt191=2;
                            int LA191_0 = input.LA(1);

                            if ( ((LA191_0>=122 && LA191_0<=123)) ) {
                                alt191=1;
                            }
                            switch (alt191) {
                                case 1 :
                                    // InternalOCLinEcore.g:8403:5: (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                                    {
                                    // InternalOCLinEcore.g:8403:5: (otherlv_15= 'with' | otherlv_16= '<-' )
                                    int alt190=2;
                                    int LA190_0 = input.LA(1);

                                    if ( (LA190_0==122) ) {
                                        alt190=1;
                                    }
                                    else if ( (LA190_0==123) ) {
                                        alt190=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 190, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt190) {
                                        case 1 :
                                            // InternalOCLinEcore.g:8403:7: otherlv_15= 'with'
                                            {
                                            otherlv_15=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_2_1_0_0());

                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalOCLinEcore.g:8408:7: otherlv_16= '<-'
                                            {
                                            otherlv_16=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_16, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_2_1_0_1());

                                            }

                                            }
                                            break;

                                    }

                                    // InternalOCLinEcore.g:8412:2: ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                                    // InternalOCLinEcore.g:8413:1: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalOCLinEcore.g:8413:1: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                                    // InternalOCLinEcore.g:8414:3: lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_113);
                                    lv_ownedCoIterator_17_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_17_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_18=(Token)match(input,132,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_18, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_2_2());

                            }
                            // InternalOCLinEcore.g:8434:1: ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8435:1: (lv_ownedInitExpression_19_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8435:1: (lv_ownedInitExpression_19_0= ruleExpCS )
                            // InternalOCLinEcore.g:8436:3: lv_ownedInitExpression_19_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_19_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_19_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8453:6: (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:8453:6: (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) )
                    // InternalOCLinEcore.g:8453:8: otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) )
                    {
                    otherlv_20=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:8457:1: ( (lv_ownedType_21_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8458:1: (lv_ownedType_21_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8458:1: (lv_ownedType_21_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8459:3: lv_ownedType_21_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_21_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_21_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalOCLinEcore.g:8483:1: entryRuleNavigatingBarArgCS returns [EObject current=null] : iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF ;
    public final EObject entryRuleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingBarArgCS = null;


        try {
            // InternalOCLinEcore.g:8484:2: (iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF )
            // InternalOCLinEcore.g:8485:2: iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingBarArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalOCLinEcore.g:8492:1: ruleNavigatingBarArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8495:28: ( ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalOCLinEcore.g:8496:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalOCLinEcore.g:8496:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalOCLinEcore.g:8496:2: ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalOCLinEcore.g:8496:2: ( (lv_prefix_0_0= '|' ) )
            // InternalOCLinEcore.g:8497:1: (lv_prefix_0_0= '|' )
            {
            // InternalOCLinEcore.g:8497:1: (lv_prefix_0_0= '|' )
            // InternalOCLinEcore.g:8498:3: lv_prefix_0_0= '|'
            {
            lv_prefix_0_0=(Token)match(input,133,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, "|");

            }

            }


            }

            // InternalOCLinEcore.g:8511:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:8512:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:8512:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:8513:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8529:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==56) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalOCLinEcore.g:8529:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:8533:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8534:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8534:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8535:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8551:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==62) ) {
                        alt194=1;
                    }
                    switch (alt194) {
                        case 1 :
                            // InternalOCLinEcore.g:8551:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalOCLinEcore.g:8555:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8556:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8556:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalOCLinEcore.g:8557:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalOCLinEcore.g:8581:1: entryRuleNavigatingCommaArgCS returns [EObject current=null] : iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF ;
    public final EObject entryRuleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingCommaArgCS = null;


        try {
            // InternalOCLinEcore.g:8582:2: (iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF )
            // InternalOCLinEcore.g:8583:2: iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingCommaArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalOCLinEcore.g:8590:1: ruleNavigatingCommaArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? ) ;
    public final EObject ruleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedCoIterator_4_0 = null;

        EObject lv_ownedInitExpression_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedCoIterator_11_0 = null;

        EObject lv_ownedInitExpression_13_0 = null;

        EObject lv_ownedType_15_0 = null;

        EObject lv_ownedCoIterator_18_0 = null;

        EObject lv_ownedInitExpression_20_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8593:28: ( ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? ) )
            // InternalOCLinEcore.g:8594:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? )
            {
            // InternalOCLinEcore.g:8594:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? )
            // InternalOCLinEcore.g:8594:2: ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?
            {
            // InternalOCLinEcore.g:8594:2: ( (lv_prefix_0_0= ',' ) )
            // InternalOCLinEcore.g:8595:1: (lv_prefix_0_0= ',' )
            {
            // InternalOCLinEcore.g:8595:1: (lv_prefix_0_0= ',' )
            // InternalOCLinEcore.g:8596:3: lv_prefix_0_0= ','
            {
            lv_prefix_0_0=(Token)match(input,59,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ",");

            }

            }


            }

            // InternalOCLinEcore.g:8609:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:8610:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:8610:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:8611:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8627:2: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?
            int alt204=4;
            alt204 = dfa204.predict(input);
            switch (alt204) {
                case 1 :
                    // InternalOCLinEcore.g:8627:3: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:8627:3: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:8627:4: (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
                    {
                    // InternalOCLinEcore.g:8627:4: (otherlv_2= 'with' | otherlv_3= '<-' )
                    int alt196=2;
                    int LA196_0 = input.LA(1);

                    if ( (LA196_0==122) ) {
                        alt196=1;
                    }
                    else if ( (LA196_0==123) ) {
                        alt196=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 196, 0, input);

                        throw nvae;
                    }
                    switch (alt196) {
                        case 1 :
                            // InternalOCLinEcore.g:8627:6: otherlv_2= 'with'
                            {
                            otherlv_2=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_0_0_0());

                            }

                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:8632:7: otherlv_3= '<-'
                            {
                            otherlv_3=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_0_0_1());

                            }

                            }
                            break;

                    }

                    // InternalOCLinEcore.g:8636:2: ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) )
                    // InternalOCLinEcore.g:8637:1: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
                    {
                    // InternalOCLinEcore.g:8637:1: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
                    // InternalOCLinEcore.g:8638:3: lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedCoIterator_4_0=ruleCoIteratorVariableCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCoIterator",
                              		lv_ownedCoIterator_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8654:2: (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==62) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalOCLinEcore.g:8654:4: otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            {
                            otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());

                            }
                            // InternalOCLinEcore.g:8658:1: ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8659:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8659:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                            // InternalOCLinEcore.g:8660:3: lv_ownedInitExpression_6_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_6_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_6_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8677:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:8677:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:8677:8: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
                    {
                    otherlv_7=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_1_0());

                    }
                    // InternalOCLinEcore.g:8681:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8682:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8682:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8683:3: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8699:2: ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )?
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( ((LA199_0>=122 && LA199_0<=123)) ) {
                        alt199=1;
                    }
                    switch (alt199) {
                        case 1 :
                            // InternalOCLinEcore.g:8699:3: (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                            {
                            // InternalOCLinEcore.g:8699:3: (otherlv_9= 'with' | otherlv_10= '<-' )
                            int alt198=2;
                            int LA198_0 = input.LA(1);

                            if ( (LA198_0==122) ) {
                                alt198=1;
                            }
                            else if ( (LA198_0==123) ) {
                                alt198=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 198, 0, input);

                                throw nvae;
                            }
                            switch (alt198) {
                                case 1 :
                                    // InternalOCLinEcore.g:8699:5: otherlv_9= 'with'
                                    {
                                    otherlv_9=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_9, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_1_2_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalOCLinEcore.g:8704:7: otherlv_10= '<-'
                                    {
                                    otherlv_10=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_10, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_1_2_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8708:2: ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:8709:1: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:8709:1: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:8710:3: lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_110);
                            lv_ownedCoIterator_11_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_11_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalOCLinEcore.g:8726:4: (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==62) ) {
                        alt200=1;
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalOCLinEcore.g:8726:6: otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                            {
                            otherlv_12=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_1_3_0());

                            }
                            // InternalOCLinEcore.g:8730:1: ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8731:1: (lv_ownedInitExpression_13_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8731:1: (lv_ownedInitExpression_13_0= ruleExpCS )
                            // InternalOCLinEcore.g:8732:3: lv_ownedInitExpression_13_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_13_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_13_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:8749:6: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:8749:6: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
                    // InternalOCLinEcore.g:8749:7: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
                    {
                    // InternalOCLinEcore.g:8749:7: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )?
                    int alt201=2;
                    int LA201_0 = input.LA(1);

                    if ( (LA201_0==56) ) {
                        alt201=1;
                    }
                    switch (alt201) {
                        case 1 :
                            // InternalOCLinEcore.g:8749:9: otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                            {
                            otherlv_14=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_2_0_0());

                            }
                            // InternalOCLinEcore.g:8753:1: ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                            // InternalOCLinEcore.g:8754:1: (lv_ownedType_15_0= ruleTypeExpCS )
                            {
                            // InternalOCLinEcore.g:8754:1: (lv_ownedType_15_0= ruleTypeExpCS )
                            // InternalOCLinEcore.g:8755:3: lv_ownedType_15_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_112);
                            lv_ownedType_15_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_15_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalOCLinEcore.g:8771:4: ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( ((LA203_0>=122 && LA203_0<=123)) ) {
                        alt203=1;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalOCLinEcore.g:8771:5: (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                            {
                            // InternalOCLinEcore.g:8771:5: (otherlv_16= 'with' | otherlv_17= '<-' )
                            int alt202=2;
                            int LA202_0 = input.LA(1);

                            if ( (LA202_0==122) ) {
                                alt202=1;
                            }
                            else if ( (LA202_0==123) ) {
                                alt202=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 202, 0, input);

                                throw nvae;
                            }
                            switch (alt202) {
                                case 1 :
                                    // InternalOCLinEcore.g:8771:7: otherlv_16= 'with'
                                    {
                                    otherlv_16=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_16, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_2_1_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalOCLinEcore.g:8776:7: otherlv_17= '<-'
                                    {
                                    otherlv_17=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_17, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_2_1_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8780:2: ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:8781:1: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:8781:1: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:8782:3: lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_113);
                            lv_ownedCoIterator_18_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_18_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_19=(Token)match(input,132,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_2_2());

                    }
                    // InternalOCLinEcore.g:8802:1: ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:8803:1: (lv_ownedInitExpression_20_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:8803:1: (lv_ownedInitExpression_20_0= ruleExpCS )
                    // InternalOCLinEcore.g:8804:3: lv_ownedInitExpression_20_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_20_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_20_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalOCLinEcore.g:8828:1: entryRuleNavigatingSemiArgCS returns [EObject current=null] : iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF ;
    public final EObject entryRuleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingSemiArgCS = null;


        try {
            // InternalOCLinEcore.g:8829:2: (iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF )
            // InternalOCLinEcore.g:8830:2: iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingSemiArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalOCLinEcore.g:8837:1: ruleNavigatingSemiArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8840:28: ( ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalOCLinEcore.g:8841:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalOCLinEcore.g:8841:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalOCLinEcore.g:8841:2: ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalOCLinEcore.g:8841:2: ( (lv_prefix_0_0= ';' ) )
            // InternalOCLinEcore.g:8842:1: (lv_prefix_0_0= ';' )
            {
            // InternalOCLinEcore.g:8842:1: (lv_prefix_0_0= ';' )
            // InternalOCLinEcore.g:8843:3: lv_prefix_0_0= ';'
            {
            lv_prefix_0_0=(Token)match(input,57,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ";");

            }

            }


            }

            // InternalOCLinEcore.g:8856:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:8857:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:8857:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:8858:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8874:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==56) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalOCLinEcore.g:8874:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:8878:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8879:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8879:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8880:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8896:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt205=2;
                    int LA205_0 = input.LA(1);

                    if ( (LA205_0==62) ) {
                        alt205=1;
                    }
                    switch (alt205) {
                        case 1 :
                            // InternalOCLinEcore.g:8896:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalOCLinEcore.g:8900:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8901:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8901:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalOCLinEcore.g:8902:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalOCLinEcore.g:8926:1: entryRuleNavigatingArgExpCS returns [EObject current=null] : iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF ;
    public final EObject entryRuleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgExpCS = null;


        try {
            // InternalOCLinEcore.g:8927:2: (iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF )
            // InternalOCLinEcore.g:8928:2: iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalOCLinEcore.g:8935:1: ruleNavigatingArgExpCS returns [EObject current=null] : this_ExpCS_0= ruleExpCS ;
    public final EObject ruleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_ExpCS_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8938:28: (this_ExpCS_0= ruleExpCS )
            // InternalOCLinEcore.g:8940:2: this_ExpCS_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ExpCS_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpCS_0;
                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleCoIteratorVariableCS"
    // InternalOCLinEcore.g:8959:1: entryRuleCoIteratorVariableCS returns [EObject current=null] : iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF ;
    public final EObject entryRuleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoIteratorVariableCS = null;


        try {
            // InternalOCLinEcore.g:8960:2: (iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF )
            // InternalOCLinEcore.g:8961:2: iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCoIteratorVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCoIteratorVariableCS=ruleCoIteratorVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCoIteratorVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoIteratorVariableCS"


    // $ANTLR start "ruleCoIteratorVariableCS"
    // InternalOCLinEcore.g:8968:1: ruleCoIteratorVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8971:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalOCLinEcore.g:8972:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalOCLinEcore.g:8972:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalOCLinEcore.g:8972:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalOCLinEcore.g:8972:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:8973:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:8973:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:8974:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8990:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==56) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalOCLinEcore.g:8990:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCoIteratorVariableCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:8994:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8995:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8995:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8996:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoIteratorVariableCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalOCLinEcore.g:9020:1: entryRuleIfExpCS returns [EObject current=null] : iv_ruleIfExpCS= ruleIfExpCS EOF ;
    public final EObject entryRuleIfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpCS = null;


        try {
            // InternalOCLinEcore.g:9021:2: (iv_ruleIfExpCS= ruleIfExpCS EOF )
            // InternalOCLinEcore.g:9022:2: iv_ruleIfExpCS= ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfExpCS=ruleIfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalOCLinEcore.g:9029:1: ruleIfExpCS returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) ;
    public final EObject ruleIfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedCondition_1_1 = null;

        EObject lv_ownedCondition_1_2 = null;

        EObject lv_ownedThenExpression_3_0 = null;

        EObject lv_ownedIfThenExpressions_4_0 = null;

        EObject lv_ownedElseExpression_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9032:28: ( (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) )
            // InternalOCLinEcore.g:9033:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            {
            // InternalOCLinEcore.g:9033:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            // InternalOCLinEcore.g:9033:3: otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif'
            {
            otherlv_0=(Token)match(input,134,FollowSets000.FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());

            }
            // InternalOCLinEcore.g:9037:1: ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) )
            // InternalOCLinEcore.g:9038:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            {
            // InternalOCLinEcore.g:9038:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            // InternalOCLinEcore.g:9039:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            {
            // InternalOCLinEcore.g:9039:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            int alt208=2;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalOCLinEcore.g:9040:3: lv_ownedCondition_1_1= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_115);
                    lv_ownedCondition_1_1=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_1,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9055:8: lv_ownedCondition_1_2= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_115);
                    lv_ownedCondition_1_2=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_2,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());

            }
            // InternalOCLinEcore.g:9077:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9078:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9078:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalOCLinEcore.g:9079:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_116);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9095:2: ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )*
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==138) ) {
                    alt209=1;
                }


                switch (alt209) {
            	case 1 :
            	    // InternalOCLinEcore.g:9096:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    {
            	    // InternalOCLinEcore.g:9096:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    // InternalOCLinEcore.g:9097:3: lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_116);
            	    lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedIfThenExpressions",
            	              		lv_ownedIfThenExpressions_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);

            otherlv_5=(Token)match(input,136,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());

            }
            // InternalOCLinEcore.g:9117:1: ( (lv_ownedElseExpression_6_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9118:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9118:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            // InternalOCLinEcore.g:9119:3: lv_ownedElseExpression_6_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_117);
            lv_ownedElseExpression_6_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedElseExpression",
                      		lv_ownedElseExpression_6_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalOCLinEcore.g:9147:1: entryRuleElseIfThenExpCS returns [EObject current=null] : iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF ;
    public final EObject entryRuleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfThenExpCS = null;


        try {
            // InternalOCLinEcore.g:9148:2: (iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF )
            // InternalOCLinEcore.g:9149:2: iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfThenExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalOCLinEcore.g:9156:1: ruleElseIfThenExpCS returns [EObject current=null] : (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;

        EObject lv_ownedThenExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9159:28: ( (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9160:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9160:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9160:3: otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,138,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());

            }
            // InternalOCLinEcore.g:9164:1: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9165:1: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9165:1: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalOCLinEcore.g:9166:3: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());

            }
            // InternalOCLinEcore.g:9186:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9187:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9187:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalOCLinEcore.g:9188:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalOCLinEcore.g:9212:1: entryRuleLetExpCS returns [EObject current=null] : iv_ruleLetExpCS= ruleLetExpCS EOF ;
    public final EObject entryRuleLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpCS = null;


        try {
            // InternalOCLinEcore.g:9213:2: (iv_ruleLetExpCS= ruleLetExpCS EOF )
            // InternalOCLinEcore.g:9214:2: iv_ruleLetExpCS= ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetExpCS=ruleLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalOCLinEcore.g:9221:1: ruleLetExpCS returns [EObject current=null] : (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedVariables_1_0 = null;

        EObject lv_ownedVariables_3_0 = null;

        EObject lv_ownedInExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9224:28: ( (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9225:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9225:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9225:3: otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,139,FollowSets000.FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());

            }
            // InternalOCLinEcore.g:9229:1: ( (lv_ownedVariables_1_0= ruleLetVariableCS ) )
            // InternalOCLinEcore.g:9230:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            {
            // InternalOCLinEcore.g:9230:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            // InternalOCLinEcore.g:9231:3: lv_ownedVariables_1_0= ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_118);
            lv_ownedVariables_1_0=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedVariables",
                      		lv_ownedVariables_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9247:2: (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==59) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalOCLinEcore.g:9247:4: otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    {
            	    otherlv_2=(Token)match(input,59,FollowSets000.FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalOCLinEcore.g:9251:1: ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    // InternalOCLinEcore.g:9252:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    {
            	    // InternalOCLinEcore.g:9252:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    // InternalOCLinEcore.g:9253:3: lv_ownedVariables_3_0= ruleLetVariableCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_118);
            	    lv_ownedVariables_3_0=ruleLetVariableCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedVariables",
            	              		lv_ownedVariables_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);

            otherlv_4=(Token)match(input,132,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());

            }
            // InternalOCLinEcore.g:9273:1: ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9274:1: (lv_ownedInExpression_5_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9274:1: (lv_ownedInExpression_5_0= ruleExpCS )
            // InternalOCLinEcore.g:9275:3: lv_ownedInExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalOCLinEcore.g:9299:1: entryRuleLetVariableCS returns [EObject current=null] : iv_ruleLetVariableCS= ruleLetVariableCS EOF ;
    public final EObject entryRuleLetVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetVariableCS = null;


        try {
            // InternalOCLinEcore.g:9300:2: (iv_ruleLetVariableCS= ruleLetVariableCS EOF )
            // InternalOCLinEcore.g:9301:2: iv_ruleLetVariableCS= ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetVariableCS=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalOCLinEcore.g:9308:1: ruleLetVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRoundBracketedClause_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9311:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9312:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9312:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9312:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:9312:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:9313:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:9313:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:9314:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9330:2: ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==54) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalOCLinEcore.g:9331:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:9331:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    // InternalOCLinEcore.g:9332:3: lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_99);
                    lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:9348:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==56) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalOCLinEcore.g:9348:5: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    {
                    otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:9352:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:9353:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:9353:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:9354:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_40);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());

            }
            // InternalOCLinEcore.g:9374:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9375:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9375:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            // InternalOCLinEcore.g:9376:3: lv_ownedInitExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalOCLinEcore.g:9400:1: entryRuleNestedExpCS returns [EObject current=null] : iv_ruleNestedExpCS= ruleNestedExpCS EOF ;
    public final EObject entryRuleNestedExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpCS = null;


        try {
            // InternalOCLinEcore.g:9401:2: (iv_ruleNestedExpCS= ruleNestedExpCS EOF )
            // InternalOCLinEcore.g:9402:2: iv_ruleNestedExpCS= ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedExpCS=ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalOCLinEcore.g:9409:1: ruleNestedExpCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) ;
    public final EObject ruleNestedExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedExpression_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9412:28: ( (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) )
            // InternalOCLinEcore.g:9413:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            {
            // InternalOCLinEcore.g:9413:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            // InternalOCLinEcore.g:9413:3: otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,54,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalOCLinEcore.g:9417:1: ( (lv_ownedExpression_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9418:1: (lv_ownedExpression_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9418:1: (lv_ownedExpression_1_0= ruleExpCS )
            // InternalOCLinEcore.g:9419:3: lv_ownedExpression_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_ownedExpression_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalOCLinEcore.g:9447:1: entryRuleSelfExpCS returns [EObject current=null] : iv_ruleSelfExpCS= ruleSelfExpCS EOF ;
    public final EObject entryRuleSelfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfExpCS = null;


        try {
            // InternalOCLinEcore.g:9448:2: (iv_ruleSelfExpCS= ruleSelfExpCS EOF )
            // InternalOCLinEcore.g:9449:2: iv_ruleSelfExpCS= ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSelfExpCS=ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalOCLinEcore.g:9456:1: ruleSelfExpCS returns [EObject current=null] : ( () otherlv_1= 'self' ) ;
    public final EObject ruleSelfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9459:28: ( ( () otherlv_1= 'self' ) )
            // InternalOCLinEcore.g:9460:1: ( () otherlv_1= 'self' )
            {
            // InternalOCLinEcore.g:9460:1: ( () otherlv_1= 'self' )
            // InternalOCLinEcore.g:9460:2: () otherlv_1= 'self'
            {
            // InternalOCLinEcore.g:9460:2: ()
            // InternalOCLinEcore.g:9461:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalOCLinEcore.g:9481:1: entryRuleMultiplicityBoundsCS returns [EObject current=null] : iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF ;
    public final EObject entryRuleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityBoundsCS = null;


        try {
            // InternalOCLinEcore.g:9482:2: (iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF )
            // InternalOCLinEcore.g:9483:2: iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityBoundsCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalOCLinEcore.g:9490:1: ruleMultiplicityBoundsCS returns [EObject current=null] : ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) ;
    public final EObject ruleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_lowerBound_0_0 = null;

        AntlrDatatypeRuleToken lv_upperBound_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9493:28: ( ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) )
            // InternalOCLinEcore.g:9494:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            {
            // InternalOCLinEcore.g:9494:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            // InternalOCLinEcore.g:9494:2: ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            {
            // InternalOCLinEcore.g:9494:2: ( (lv_lowerBound_0_0= ruleLOWER ) )
            // InternalOCLinEcore.g:9495:1: (lv_lowerBound_0_0= ruleLOWER )
            {
            // InternalOCLinEcore.g:9495:1: (lv_lowerBound_0_0= ruleLOWER )
            // InternalOCLinEcore.g:9496:3: lv_lowerBound_0_0= ruleLOWER
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_93);
            lv_lowerBound_0_0=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
              	        }
                     		set(
                     			current,
                     			"lowerBound",
                      		lv_lowerBound_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9512:2: (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==119) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalOCLinEcore.g:9512:4: otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) )
                    {
                    otherlv_1=(Token)match(input,119,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:9516:1: ( (lv_upperBound_2_0= ruleUPPER ) )
                    // InternalOCLinEcore.g:9517:1: (lv_upperBound_2_0= ruleUPPER )
                    {
                    // InternalOCLinEcore.g:9517:1: (lv_upperBound_2_0= ruleUPPER )
                    // InternalOCLinEcore.g:9518:3: lv_upperBound_2_0= ruleUPPER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_upperBound_2_0=ruleUPPER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
                      	        }
                             		set(
                             			current,
                             			"upperBound",
                              		lv_upperBound_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.UPPER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalOCLinEcore.g:9542:1: entryRuleMultiplicityCS returns [EObject current=null] : iv_ruleMultiplicityCS= ruleMultiplicityCS EOF ;
    public final EObject entryRuleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:9543:2: (iv_ruleMultiplicityCS= ruleMultiplicityCS EOF )
            // InternalOCLinEcore.g:9544:2: iv_ruleMultiplicityCS= ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityCS=ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalOCLinEcore.g:9551:1: ruleMultiplicityCS returns [EObject current=null] : (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) ;
    public final EObject ruleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_isNullFree_4_0=null;
        Token otherlv_5=null;
        EObject this_MultiplicityBoundsCS_1 = null;

        EObject this_MultiplicityStringCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9554:28: ( (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) )
            // InternalOCLinEcore.g:9555:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            {
            // InternalOCLinEcore.g:9555:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            // InternalOCLinEcore.g:9555:3: otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']'
            {
            otherlv_0=(Token)match(input,130,FollowSets000.FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalOCLinEcore.g:9559:1: (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==RULE_INT) ) {
                alt214=1;
            }
            else if ( (LA214_0==85||LA214_0==87||LA214_0==143) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }
            switch (alt214) {
                case 1 :
                    // InternalOCLinEcore.g:9560:2: this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityBoundsCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9573:2: this_MultiplicityStringCS_2= ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    this_MultiplicityStringCS_2=ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityStringCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:9584:2: (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )?
            int alt215=3;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==141) ) {
                alt215=1;
            }
            else if ( (LA215_0==142) ) {
                alt215=2;
            }
            switch (alt215) {
                case 1 :
                    // InternalOCLinEcore.g:9584:4: otherlv_3= '|?'
                    {
                    otherlv_3=(Token)match(input,141,FollowSets000.FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9589:6: ( (lv_isNullFree_4_0= '|1' ) )
                    {
                    // InternalOCLinEcore.g:9589:6: ( (lv_isNullFree_4_0= '|1' ) )
                    // InternalOCLinEcore.g:9590:1: (lv_isNullFree_4_0= '|1' )
                    {
                    // InternalOCLinEcore.g:9590:1: (lv_isNullFree_4_0= '|1' )
                    // InternalOCLinEcore.g:9591:3: lv_isNullFree_4_0= '|1'
                    {
                    lv_isNullFree_4_0=(Token)match(input,142,FollowSets000.FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNullFree", true, "|1");

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalOCLinEcore.g:9616:1: entryRuleMultiplicityStringCS returns [EObject current=null] : iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF ;
    public final EObject entryRuleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityStringCS = null;


        try {
            // InternalOCLinEcore.g:9617:2: (iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF )
            // InternalOCLinEcore.g:9618:2: iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityStringCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalOCLinEcore.g:9625:1: ruleMultiplicityStringCS returns [EObject current=null] : ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) ;
    public final EObject ruleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        Token lv_stringBounds_0_1=null;
        Token lv_stringBounds_0_2=null;
        Token lv_stringBounds_0_3=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9628:28: ( ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) )
            // InternalOCLinEcore.g:9629:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            {
            // InternalOCLinEcore.g:9629:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            // InternalOCLinEcore.g:9630:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            {
            // InternalOCLinEcore.g:9630:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            // InternalOCLinEcore.g:9631:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            {
            // InternalOCLinEcore.g:9631:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            int alt216=3;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt216=1;
                }
                break;
            case 87:
                {
                alt216=2;
                }
                break;
            case 143:
                {
                alt216=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }

            switch (alt216) {
                case 1 :
                    // InternalOCLinEcore.g:9632:3: lv_stringBounds_0_1= '*'
                    {
                    lv_stringBounds_0_1=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_1, null);

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9644:8: lv_stringBounds_0_2= '+'
                    {
                    lv_stringBounds_0_2=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_2, null);

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:9656:8: lv_stringBounds_0_3= '?'
                    {
                    lv_stringBounds_0_3=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_3, null);

                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalOCLinEcore.g:9679:1: entryRulePathNameCS returns [EObject current=null] : iv_rulePathNameCS= rulePathNameCS EOF ;
    public final EObject entryRulePathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathNameCS = null;


        try {
            // InternalOCLinEcore.g:9680:2: (iv_rulePathNameCS= rulePathNameCS EOF )
            // InternalOCLinEcore.g:9681:2: iv_rulePathNameCS= rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePathNameCS=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalOCLinEcore.g:9688:1: rulePathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject rulePathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9691:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalOCLinEcore.g:9692:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalOCLinEcore.g:9692:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalOCLinEcore.g:9692:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalOCLinEcore.g:9692:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalOCLinEcore.g:9693:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalOCLinEcore.g:9693:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalOCLinEcore.g:9694:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9710:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==105) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalOCLinEcore.g:9710:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,105,FollowSets000.FOLLOW_85); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:9714:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalOCLinEcore.g:9715:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalOCLinEcore.g:9715:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalOCLinEcore.g:9716:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_84);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalOCLinEcore.g:9742:1: entryRuleFirstPathElementCS returns [EObject current=null] : iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF ;
    public final EObject entryRuleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstPathElementCS = null;


        try {
            // InternalOCLinEcore.g:9743:2: (iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF )
            // InternalOCLinEcore.g:9744:2: iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFirstPathElementCS=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalOCLinEcore.g:9751:1: ruleFirstPathElementCS returns [EObject current=null] : ( ( ruleUnrestrictedName ) ) ;
    public final EObject ruleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9754:28: ( ( ( ruleUnrestrictedName ) ) )
            // InternalOCLinEcore.g:9755:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalOCLinEcore.g:9755:1: ( ( ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:9756:1: ( ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:9756:1: ( ruleUnrestrictedName )
            // InternalOCLinEcore.g:9757:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getFirstPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalOCLinEcore.g:9781:1: entryRuleNextPathElementCS returns [EObject current=null] : iv_ruleNextPathElementCS= ruleNextPathElementCS EOF ;
    public final EObject entryRuleNextPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNextPathElementCS = null;


        try {
            // InternalOCLinEcore.g:9782:2: (iv_ruleNextPathElementCS= ruleNextPathElementCS EOF )
            // InternalOCLinEcore.g:9783:2: iv_ruleNextPathElementCS= ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNextPathElementCS=ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNextPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalOCLinEcore.g:9790:1: ruleNextPathElementCS returns [EObject current=null] : ( ( ruleUnreservedName ) ) ;
    public final EObject ruleNextPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9793:28: ( ( ( ruleUnreservedName ) ) )
            // InternalOCLinEcore.g:9794:1: ( ( ruleUnreservedName ) )
            {
            // InternalOCLinEcore.g:9794:1: ( ( ruleUnreservedName ) )
            // InternalOCLinEcore.g:9795:1: ( ruleUnreservedName )
            {
            // InternalOCLinEcore.g:9795:1: ( ruleUnreservedName )
            // InternalOCLinEcore.g:9796:3: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNextPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalOCLinEcore.g:9820:1: entryRuleTemplateBindingCS returns [EObject current=null] : iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF ;
    public final EObject entryRuleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateBindingCS = null;


        try {
            // InternalOCLinEcore.g:9821:2: (iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF )
            // InternalOCLinEcore.g:9822:2: iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateBindingCS=ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalOCLinEcore.g:9829:1: ruleTemplateBindingCS returns [EObject current=null] : ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedSubstitutions_0_0 = null;

        EObject lv_ownedSubstitutions_2_0 = null;

        EObject lv_ownedMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9832:28: ( ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:9833:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:9833:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:9833:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            {
            // InternalOCLinEcore.g:9833:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) )
            // InternalOCLinEcore.g:9834:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            {
            // InternalOCLinEcore.g:9834:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            // InternalOCLinEcore.g:9835:3: lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_124);
            lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedSubstitutions",
                      		lv_ownedSubstitutions_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9851:2: (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==59) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // InternalOCLinEcore.g:9851:4: otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    {
            	    otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_82); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:9855:1: ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    // InternalOCLinEcore.g:9856:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    {
            	    // InternalOCLinEcore.g:9856:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    // InternalOCLinEcore.g:9857:3: lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_124);
            	    lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSubstitutions",
            	              		lv_ownedSubstitutions_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            // InternalOCLinEcore.g:9873:4: ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==130) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalOCLinEcore.g:9874:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:9874:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:9875:3: lv_ownedMultiplicity_3_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_3_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalOCLinEcore.g:9899:1: entryRuleTemplateParameterSubstitutionCS returns [EObject current=null] : iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF ;
    public final EObject entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateParameterSubstitutionCS = null;


        try {
            // InternalOCLinEcore.g:9900:2: (iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF )
            // InternalOCLinEcore.g:9901:2: iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateParameterSubstitutionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalOCLinEcore.g:9908:1: ruleTemplateParameterSubstitutionCS returns [EObject current=null] : ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) ;
    public final EObject ruleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedActualParameter_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9911:28: ( ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) )
            // InternalOCLinEcore.g:9912:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            {
            // InternalOCLinEcore.g:9912:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            // InternalOCLinEcore.g:9913:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            {
            // InternalOCLinEcore.g:9913:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            // InternalOCLinEcore.g:9914:3: lv_ownedActualParameter_0_0= ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedActualParameter_0_0=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedActualParameter",
                      		lv_ownedActualParameter_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalOCLinEcore.g:9938:1: entryRuleTypeParameterCS returns [EObject current=null] : iv_ruleTypeParameterCS= ruleTypeParameterCS EOF ;
    public final EObject entryRuleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeParameterCS = null;


        try {
            // InternalOCLinEcore.g:9939:2: (iv_ruleTypeParameterCS= ruleTypeParameterCS EOF )
            // InternalOCLinEcore.g:9940:2: iv_ruleTypeParameterCS= ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeParameterCS=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalOCLinEcore.g:9947:1: ruleTypeParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) ;
    public final EObject ruleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedExtends_2_0 = null;

        EObject lv_ownedExtends_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9950:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) )
            // InternalOCLinEcore.g:9951:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            {
            // InternalOCLinEcore.g:9951:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            // InternalOCLinEcore.g:9951:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            {
            // InternalOCLinEcore.g:9951:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:9952:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:9952:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:9953:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9969:2: (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==30) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalOCLinEcore.g:9969:4: otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_1=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:9973:1: ( (lv_ownedExtends_2_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:9974:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:9974:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:9975:3: lv_ownedExtends_2_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_126);
                    lv_ownedExtends_2_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:9991:2: (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==144) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:9991:4: otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,144,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:9995:1: ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:9996:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:9996:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:9997:3: lv_ownedExtends_4_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_126);
                    	    lv_ownedExtends_4_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExtends",
                    	              		lv_ownedExtends_4_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalOCLinEcore.g:10021:1: entryRuleTypeRefCS returns [EObject current=null] : iv_ruleTypeRefCS= ruleTypeRefCS EOF ;
    public final EObject entryRuleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:10022:2: (iv_ruleTypeRefCS= ruleTypeRefCS EOF )
            // InternalOCLinEcore.g:10023:2: iv_ruleTypeRefCS= ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRefCS=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalOCLinEcore.g:10030:1: ruleTypeRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) ;
    public final EObject ruleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject this_WildcardTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10033:28: ( (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) )
            // InternalOCLinEcore.g:10034:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            {
            // InternalOCLinEcore.g:10034:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( ((LA222_0>=RULE_SIMPLE_ID && LA222_0<=RULE_ESCAPED_ID)||LA222_0==17||(LA222_0>=19 && LA222_0<=53)||LA222_0==58||LA222_0==71||(LA222_0>=73 && LA222_0<=74)||LA222_0==76||LA222_0==80||(LA222_0>=103 && LA222_0<=104)||(LA222_0>=106 && LA222_0<=118)) ) {
                alt222=1;
            }
            else if ( (LA222_0==143) ) {
                alt222=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;
            }
            switch (alt222) {
                case 1 :
                    // InternalOCLinEcore.g:10035:2: this_TypedRefCS_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedRefCS_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedRefCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10048:2: this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalOCLinEcore.g:10067:1: entryRuleWildcardTypeRefCS returns [EObject current=null] : iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF ;
    public final EObject entryRuleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:10068:2: (iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF )
            // InternalOCLinEcore.g:10069:2: iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalOCLinEcore.g:10076:1: ruleWildcardTypeRefCS returns [EObject current=null] : ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) ;
    public final EObject ruleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedExtends_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10079:28: ( ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) )
            // InternalOCLinEcore.g:10080:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            {
            // InternalOCLinEcore.g:10080:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            // InternalOCLinEcore.g:10080:2: () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            {
            // InternalOCLinEcore.g:10080:2: ()
            // InternalOCLinEcore.g:10081:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,143,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());

            }
            // InternalOCLinEcore.g:10093:1: (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==30) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalOCLinEcore.g:10093:3: otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    {
                    otherlv_2=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:10097:1: ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:10098:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:10098:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:10099:3: lv_ownedExtends_3_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExtends_3_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalOCLinEcore.g:10123:1: entryRuleID returns [String current=null] : iv_ruleID= ruleID EOF ;
    public final String entryRuleID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID = null;


        try {
            // InternalOCLinEcore.g:10124:2: (iv_ruleID= ruleID EOF )
            // InternalOCLinEcore.g:10125:2: iv_ruleID= ruleID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleID=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalOCLinEcore.g:10132:1: ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) ;
    public final AntlrDatatypeRuleToken ruleID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SIMPLE_ID_0=null;
        Token this_ESCAPED_ID_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10135:28: ( (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) )
            // InternalOCLinEcore.g:10136:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            {
            // InternalOCLinEcore.g:10136:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==RULE_SIMPLE_ID) ) {
                alt224=1;
            }
            else if ( (LA224_0==RULE_ESCAPED_ID) ) {
                alt224=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }
            switch (alt224) {
                case 1 :
                    // InternalOCLinEcore.g:10136:6: this_SIMPLE_ID_0= RULE_SIMPLE_ID
                    {
                    this_SIMPLE_ID_0=(Token)match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SIMPLE_ID_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10144:10: this_ESCAPED_ID_1= RULE_ESCAPED_ID
                    {
                    this_ESCAPED_ID_1=(Token)match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESCAPED_ID_1);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalOCLinEcore.g:10159:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


        try {
            // InternalOCLinEcore.g:10160:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalOCLinEcore.g:10161:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalOCLinEcore.g:10168:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= ruleID ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ID_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10171:28: (this_ID_0= ruleID )
            // InternalOCLinEcore.g:10173:5: this_ID_0= ruleID
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ID_0=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalOCLinEcore.g:10191:1: entryRuleLOWER returns [String current=null] : iv_ruleLOWER= ruleLOWER EOF ;
    public final String entryRuleLOWER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLOWER = null;


        try {
            // InternalOCLinEcore.g:10192:2: (iv_ruleLOWER= ruleLOWER EOF )
            // InternalOCLinEcore.g:10193:2: iv_ruleLOWER= ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLOWER=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLOWER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalOCLinEcore.g:10200:1: ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleLOWER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10203:28: (this_INT_0= RULE_INT )
            // InternalOCLinEcore.g:10204:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalOCLinEcore.g:10219:1: entryRuleNUMBER_LITERAL returns [String current=null] : iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF ;
    public final String entryRuleNUMBER_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER_LITERAL = null;


        try {
            // InternalOCLinEcore.g:10220:2: (iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF )
            // InternalOCLinEcore.g:10221:2: iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER_LITERAL.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalOCLinEcore.g:10228:1: ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleNUMBER_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10231:28: (this_INT_0= RULE_INT )
            // InternalOCLinEcore.g:10232:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalOCLinEcore.g:10247:1: entryRuleStringLiteral returns [String current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final String entryRuleStringLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStringLiteral = null;


        try {
            // InternalOCLinEcore.g:10248:2: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalOCLinEcore.g:10249:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalOCLinEcore.g:10256:1: ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleStringLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10259:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalOCLinEcore.g:10260:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleUPPER"
    // InternalOCLinEcore.g:10275:1: entryRuleUPPER returns [String current=null] : iv_ruleUPPER= ruleUPPER EOF ;
    public final String entryRuleUPPER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPER = null;


        try {
            // InternalOCLinEcore.g:10276:2: (iv_ruleUPPER= ruleUPPER EOF )
            // InternalOCLinEcore.g:10277:2: iv_ruleUPPER= ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUPPER=ruleUPPER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalOCLinEcore.g:10284:1: ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleUPPER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10287:28: ( (this_INT_0= RULE_INT | kw= '*' ) )
            // InternalOCLinEcore.g:10288:1: (this_INT_0= RULE_INT | kw= '*' )
            {
            // InternalOCLinEcore.g:10288:1: (this_INT_0= RULE_INT | kw= '*' )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==RULE_INT) ) {
                alt225=1;
            }
            else if ( (LA225_0==85) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // InternalOCLinEcore.g:10288:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10297:2: kw= '*'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalOCLinEcore.g:10310:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // InternalOCLinEcore.g:10311:2: (iv_ruleURI= ruleURI EOF )
            // InternalOCLinEcore.g:10312:2: iv_ruleURI= ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURI=ruleURI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURI.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalOCLinEcore.g:10319:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10322:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalOCLinEcore.g:10323:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURI"

    // $ANTLR start synpred312_InternalOCLinEcore
    public final void synpred312_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TypeLiteralCS_1 = null;


        // InternalOCLinEcore.g:7380:2: (this_TypeLiteralCS_1= ruleTypeLiteralCS )
        // InternalOCLinEcore.g:7380:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralCS_1=ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred312_InternalOCLinEcore

    // $ANTLR start synpred315_InternalOCLinEcore
    public final void synpred315_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;


        // InternalOCLinEcore.g:7476:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:7476:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:7476:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:7477:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_101);
        this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

        state._fsp--;
        if (state.failed) return ;
        // InternalOCLinEcore.g:7488:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        int alt308=2;
        int LA308_0 = input.LA(1);

        if ( (LA308_0==18||LA308_0==62||(LA308_0>=81 && LA308_0<=82)||(LA308_0>=85 && LA308_0<=102)) ) {
            alt308=1;
        }
        switch (alt308) {
            case 1 :
                // InternalOCLinEcore.g:7488:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                {
                // InternalOCLinEcore.g:7488:2: ()
                // InternalOCLinEcore.g:7489:2:
                {
                if ( state.backtracking==0 ) {

                  	  /* */

                }

                }

                // InternalOCLinEcore.g:7497:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                // InternalOCLinEcore.g:7498:1: (lv_name_2_0= ruleBinaryOperatorName )
                {
                // InternalOCLinEcore.g:7498:1: (lv_name_2_0= ruleBinaryOperatorName )
                // InternalOCLinEcore.g:7499:3: lv_name_2_0= ruleBinaryOperatorName
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_94);
                lv_name_2_0=ruleBinaryOperatorName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalOCLinEcore.g:7515:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                // InternalOCLinEcore.g:7516:1: (lv_ownedRight_3_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:7516:1: (lv_ownedRight_3_0= ruleExpCS )
                // InternalOCLinEcore.g:7517:3: lv_ownedRight_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedRight_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred315_InternalOCLinEcore

    // $ANTLR start synpred322_InternalOCLinEcore
    public final void synpred322_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TupleLiteralExpCS_4 = null;


        // InternalOCLinEcore.g:7778:2: (this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS )
        // InternalOCLinEcore.g:7778:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred322_InternalOCLinEcore

    // $ANTLR start synpred323_InternalOCLinEcore
    public final void synpred323_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_MapLiteralExpCS_5 = null;


        // InternalOCLinEcore.g:7791:2: (this_MapLiteralExpCS_5= ruleMapLiteralExpCS )
        // InternalOCLinEcore.g:7791:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred323_InternalOCLinEcore

    // $ANTLR start synpred324_InternalOCLinEcore
    public final void synpred324_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_CollectionLiteralExpCS_6 = null;


        // InternalOCLinEcore.g:7804:2: (this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS )
        // InternalOCLinEcore.g:7804:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred324_InternalOCLinEcore

    // $ANTLR start synpred326_InternalOCLinEcore
    public final void synpred326_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TypeLiteralExpCS_8 = null;


        // InternalOCLinEcore.g:7830:2: (this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS )
        // InternalOCLinEcore.g:7830:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred326_InternalOCLinEcore

    // $ANTLR start synpred340_InternalOCLinEcore
    public final void synpred340_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


        // InternalOCLinEcore.g:8259:3: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8259:3: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8259:3: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8259:4: (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        {
        // InternalOCLinEcore.g:8259:4: (otherlv_1= 'with' | otherlv_2= '<-' )
        int alt313=2;
        int LA313_0 = input.LA(1);

        if ( (LA313_0==122) ) {
            alt313=1;
        }
        else if ( (LA313_0==123) ) {
            alt313=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 313, 0, input);

            throw nvae;
        }
        switch (alt313) {
            case 1 :
                // InternalOCLinEcore.g:8259:6: otherlv_1= 'with'
                {
                otherlv_1=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalOCLinEcore.g:8264:7: otherlv_2= '<-'
                {
                otherlv_2=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                }
                break;

        }

        // InternalOCLinEcore.g:8268:2: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
        // InternalOCLinEcore.g:8269:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        {
        // InternalOCLinEcore.g:8269:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        // InternalOCLinEcore.g:8270:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_110);
        lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8286:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        int alt314=2;
        int LA314_0 = input.LA(1);

        if ( (LA314_0==62) ) {
            alt314=1;
        }
        switch (alt314) {
            case 1 :
                // InternalOCLinEcore.g:8286:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                {
                otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return ;
                // InternalOCLinEcore.g:8290:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8291:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8291:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                // InternalOCLinEcore.g:8292:3: lv_ownedInitExpression_5_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_5_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred340_InternalOCLinEcore

    // $ANTLR start synpred344_InternalOCLinEcore
    public final void synpred344_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_10_0 = null;

        EObject lv_ownedInitExpression_12_0 = null;


        // InternalOCLinEcore.g:8309:6: ( (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8309:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8309:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8309:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
        {
        otherlv_6=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return ;
        // InternalOCLinEcore.g:8313:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
        // InternalOCLinEcore.g:8314:1: (lv_ownedType_7_0= ruleTypeExpCS )
        {
        // InternalOCLinEcore.g:8314:1: (lv_ownedType_7_0= ruleTypeExpCS )
        // InternalOCLinEcore.g:8315:3: lv_ownedType_7_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_111);
        lv_ownedType_7_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8331:2: ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )?
        int alt317=2;
        int LA317_0 = input.LA(1);

        if ( ((LA317_0>=122 && LA317_0<=123)) ) {
            alt317=1;
        }
        switch (alt317) {
            case 1 :
                // InternalOCLinEcore.g:8331:3: (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                {
                // InternalOCLinEcore.g:8331:3: (otherlv_8= 'with' | otherlv_9= '<-' )
                int alt316=2;
                int LA316_0 = input.LA(1);

                if ( (LA316_0==122) ) {
                    alt316=1;
                }
                else if ( (LA316_0==123) ) {
                    alt316=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 316, 0, input);

                    throw nvae;
                }
                switch (alt316) {
                    case 1 :
                        // InternalOCLinEcore.g:8331:5: otherlv_8= 'with'
                        {
                        otherlv_8=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalOCLinEcore.g:8336:7: otherlv_9= '<-'
                        {
                        otherlv_9=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;

                }

                // InternalOCLinEcore.g:8340:2: ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8341:1: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8341:1: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8342:3: lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_110);
                lv_ownedCoIterator_10_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8358:4: (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
        int alt318=2;
        int LA318_0 = input.LA(1);

        if ( (LA318_0==62) ) {
            alt318=1;
        }
        switch (alt318) {
            case 1 :
                // InternalOCLinEcore.g:8358:6: otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                {
                otherlv_11=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return ;
                // InternalOCLinEcore.g:8362:1: ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8363:1: (lv_ownedInitExpression_12_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8363:1: (lv_ownedInitExpression_12_0= ruleExpCS )
                // InternalOCLinEcore.g:8364:3: lv_ownedInitExpression_12_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_12_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred344_InternalOCLinEcore

    // $ANTLR start synpred348_InternalOCLinEcore
    public final void synpred348_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_ownedType_14_0 = null;

        EObject lv_ownedCoIterator_17_0 = null;

        EObject lv_ownedInitExpression_19_0 = null;


        // InternalOCLinEcore.g:8381:6: ( ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )
        // InternalOCLinEcore.g:8381:6: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
        {
        // InternalOCLinEcore.g:8381:6: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
        // InternalOCLinEcore.g:8381:7: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
        {
        // InternalOCLinEcore.g:8381:7: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )?
        int alt320=2;
        int LA320_0 = input.LA(1);

        if ( (LA320_0==56) ) {
            alt320=1;
        }
        switch (alt320) {
            case 1 :
                // InternalOCLinEcore.g:8381:9: otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                {
                otherlv_13=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return ;
                // InternalOCLinEcore.g:8385:1: ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                // InternalOCLinEcore.g:8386:1: (lv_ownedType_14_0= ruleTypeExpCS )
                {
                // InternalOCLinEcore.g:8386:1: (lv_ownedType_14_0= ruleTypeExpCS )
                // InternalOCLinEcore.g:8387:3: lv_ownedType_14_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_112);
                lv_ownedType_14_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8403:4: ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )?
        int alt322=2;
        int LA322_0 = input.LA(1);

        if ( ((LA322_0>=122 && LA322_0<=123)) ) {
            alt322=1;
        }
        switch (alt322) {
            case 1 :
                // InternalOCLinEcore.g:8403:5: (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                {
                // InternalOCLinEcore.g:8403:5: (otherlv_15= 'with' | otherlv_16= '<-' )
                int alt321=2;
                int LA321_0 = input.LA(1);

                if ( (LA321_0==122) ) {
                    alt321=1;
                }
                else if ( (LA321_0==123) ) {
                    alt321=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 0, input);

                    throw nvae;
                }
                switch (alt321) {
                    case 1 :
                        // InternalOCLinEcore.g:8403:7: otherlv_15= 'with'
                        {
                        otherlv_15=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalOCLinEcore.g:8408:7: otherlv_16= '<-'
                        {
                        otherlv_16=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;

                }

                // InternalOCLinEcore.g:8412:2: ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8413:1: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8413:1: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8414:3: lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_113);
                lv_ownedCoIterator_17_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_18=(Token)match(input,132,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalOCLinEcore.g:8434:1: ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
        // InternalOCLinEcore.g:8435:1: (lv_ownedInitExpression_19_0= ruleExpCS )
        {
        // InternalOCLinEcore.g:8435:1: (lv_ownedInitExpression_19_0= ruleExpCS )
        // InternalOCLinEcore.g:8436:3: lv_ownedInitExpression_19_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_19_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred348_InternalOCLinEcore

    // $ANTLR start synpred354_InternalOCLinEcore
    public final void synpred354_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedCoIterator_4_0 = null;

        EObject lv_ownedInitExpression_6_0 = null;


        // InternalOCLinEcore.g:8627:3: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8627:3: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8627:3: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8627:4: (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
        {
        // InternalOCLinEcore.g:8627:4: (otherlv_2= 'with' | otherlv_3= '<-' )
        int alt333=2;
        int LA333_0 = input.LA(1);

        if ( (LA333_0==122) ) {
            alt333=1;
        }
        else if ( (LA333_0==123) ) {
            alt333=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 333, 0, input);

            throw nvae;
        }
        switch (alt333) {
            case 1 :
                // InternalOCLinEcore.g:8627:6: otherlv_2= 'with'
                {
                otherlv_2=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalOCLinEcore.g:8632:7: otherlv_3= '<-'
                {
                otherlv_3=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                }
                break;

        }

        // InternalOCLinEcore.g:8636:2: ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) )
        // InternalOCLinEcore.g:8637:1: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
        {
        // InternalOCLinEcore.g:8637:1: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
        // InternalOCLinEcore.g:8638:3: lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_110);
        lv_ownedCoIterator_4_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8654:2: (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
        int alt334=2;
        int LA334_0 = input.LA(1);

        if ( (LA334_0==62) ) {
            alt334=1;
        }
        switch (alt334) {
            case 1 :
                // InternalOCLinEcore.g:8654:4: otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                {
                otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return ;
                // InternalOCLinEcore.g:8658:1: ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8659:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8659:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                // InternalOCLinEcore.g:8660:3: lv_ownedInitExpression_6_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_6_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred354_InternalOCLinEcore

    // $ANTLR start synpred358_InternalOCLinEcore
    public final void synpred358_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedCoIterator_11_0 = null;

        EObject lv_ownedInitExpression_13_0 = null;


        // InternalOCLinEcore.g:8677:6: ( (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8677:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8677:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8677:8: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
        {
        otherlv_7=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return ;
        // InternalOCLinEcore.g:8681:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
        // InternalOCLinEcore.g:8682:1: (lv_ownedType_8_0= ruleTypeExpCS )
        {
        // InternalOCLinEcore.g:8682:1: (lv_ownedType_8_0= ruleTypeExpCS )
        // InternalOCLinEcore.g:8683:3: lv_ownedType_8_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_111);
        lv_ownedType_8_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8699:2: ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )?
        int alt337=2;
        int LA337_0 = input.LA(1);

        if ( ((LA337_0>=122 && LA337_0<=123)) ) {
            alt337=1;
        }
        switch (alt337) {
            case 1 :
                // InternalOCLinEcore.g:8699:3: (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                {
                // InternalOCLinEcore.g:8699:3: (otherlv_9= 'with' | otherlv_10= '<-' )
                int alt336=2;
                int LA336_0 = input.LA(1);

                if ( (LA336_0==122) ) {
                    alt336=1;
                }
                else if ( (LA336_0==123) ) {
                    alt336=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 336, 0, input);

                    throw nvae;
                }
                switch (alt336) {
                    case 1 :
                        // InternalOCLinEcore.g:8699:5: otherlv_9= 'with'
                        {
                        otherlv_9=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalOCLinEcore.g:8704:7: otherlv_10= '<-'
                        {
                        otherlv_10=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;

                }

                // InternalOCLinEcore.g:8708:2: ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8709:1: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8709:1: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8710:3: lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_110);
                lv_ownedCoIterator_11_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8726:4: (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
        int alt338=2;
        int LA338_0 = input.LA(1);

        if ( (LA338_0==62) ) {
            alt338=1;
        }
        switch (alt338) {
            case 1 :
                // InternalOCLinEcore.g:8726:6: otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                {
                otherlv_12=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return ;
                // InternalOCLinEcore.g:8730:1: ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8731:1: (lv_ownedInitExpression_13_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8731:1: (lv_ownedInitExpression_13_0= ruleExpCS )
                // InternalOCLinEcore.g:8732:3: lv_ownedInitExpression_13_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_13_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred358_InternalOCLinEcore

    // $ANTLR start synpred362_InternalOCLinEcore
    public final void synpred362_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_ownedType_15_0 = null;

        EObject lv_ownedCoIterator_18_0 = null;

        EObject lv_ownedInitExpression_20_0 = null;


        // InternalOCLinEcore.g:8749:6: ( ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )
        // InternalOCLinEcore.g:8749:6: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
        {
        // InternalOCLinEcore.g:8749:6: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
        // InternalOCLinEcore.g:8749:7: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
        {
        // InternalOCLinEcore.g:8749:7: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )?
        int alt340=2;
        int LA340_0 = input.LA(1);

        if ( (LA340_0==56) ) {
            alt340=1;
        }
        switch (alt340) {
            case 1 :
                // InternalOCLinEcore.g:8749:9: otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                {
                otherlv_14=(Token)match(input,56,FollowSets000.FOLLOW_27); if (state.failed) return ;
                // InternalOCLinEcore.g:8753:1: ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                // InternalOCLinEcore.g:8754:1: (lv_ownedType_15_0= ruleTypeExpCS )
                {
                // InternalOCLinEcore.g:8754:1: (lv_ownedType_15_0= ruleTypeExpCS )
                // InternalOCLinEcore.g:8755:3: lv_ownedType_15_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_112);
                lv_ownedType_15_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8771:4: ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )?
        int alt342=2;
        int LA342_0 = input.LA(1);

        if ( ((LA342_0>=122 && LA342_0<=123)) ) {
            alt342=1;
        }
        switch (alt342) {
            case 1 :
                // InternalOCLinEcore.g:8771:5: (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                {
                // InternalOCLinEcore.g:8771:5: (otherlv_16= 'with' | otherlv_17= '<-' )
                int alt341=2;
                int LA341_0 = input.LA(1);

                if ( (LA341_0==122) ) {
                    alt341=1;
                }
                else if ( (LA341_0==123) ) {
                    alt341=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 341, 0, input);

                    throw nvae;
                }
                switch (alt341) {
                    case 1 :
                        // InternalOCLinEcore.g:8771:7: otherlv_16= 'with'
                        {
                        otherlv_16=(Token)match(input,122,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalOCLinEcore.g:8776:7: otherlv_17= '<-'
                        {
                        otherlv_17=(Token)match(input,123,FollowSets000.FOLLOW_3); if (state.failed) return ;

                        }
                        break;

                }

                // InternalOCLinEcore.g:8780:2: ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8781:1: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8781:1: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8782:3: lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_113);
                lv_ownedCoIterator_18_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_19=(Token)match(input,132,FollowSets000.FOLLOW_94); if (state.failed) return ;
        // InternalOCLinEcore.g:8802:1: ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
        // InternalOCLinEcore.g:8803:1: (lv_ownedInitExpression_20_0= ruleExpCS )
        {
        // InternalOCLinEcore.g:8803:1: (lv_ownedInitExpression_20_0= ruleExpCS )
        // InternalOCLinEcore.g:8804:3: lv_ownedInitExpression_20_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_20_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred362_InternalOCLinEcore

    // Delegated rules

    public final boolean synpred362_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred348_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred348_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred315_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred315_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred344_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred344_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred358_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA63 dfa63 = new DFA63(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA208 dfa208 = new DFA208(this);
    static final String dfa_1s = "\57\uffff";
    static final String dfa_2s = "\1\5\54\70\2\uffff";
    static final String dfa_3s = "\1\120\54\151\2\uffff";
    static final String dfa_4s = "\55\uffff\1\2\1\1";
    static final String dfa_5s = "\57\uffff}>";
    static final String[] dfa_6s = {
            "\1\55\2\uffff\1\1\1\2\7\uffff\1\25\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\50\4\uffff\1\46\14\uffff\1\53\1\uffff\1\47\1\51\1\uffff\1\52\3\uffff\1\54",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2317:2: ( ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= ':' )?";
        }
    }
    static final String dfa_7s = "\20\uffff";
    static final String dfa_8s = "\1\10\1\27\1\10\1\31\2\10\1\uffff\4\10\1\24\4\uffff";
    static final String dfa_9s = "\1\112\1\76\1\120\1\76\2\120\1\uffff\1\120\1\121\2\120\1\76\4\uffff";
    static final String dfa_10s = "\6\uffff\1\2\5\uffff\1\1\1\5\1\3\1\4";
    static final String dfa_11s = "\20\uffff}>";
    static final String[] dfa_12s = {
            "\2\6\7\uffff\1\6\1\uffff\1\1\1\7\2\6\1\2\1\6\1\4\3\6\1\5\7\6\1\10\1\6\1\11\2\6\1\3\1\12\3\6\1\13\5\6\25\uffff\1\6",
            "\1\14\40\uffff\2\6\2\uffff\1\6\1\uffff\1\6",
            "\2\14\7\uffff\1\14\1\uffff\43\14\2\uffff\2\6\1\14\1\uffff\1\6\1\uffff\1\6\10\uffff\1\14\1\uffff\2\14\1\uffff\1\14\3\uffff\1\14",
            "\1\14\36\uffff\2\6\2\uffff\1\6\1\uffff\1\6",
            "\2\14\7\uffff\1\14\1\uffff\43\14\2\uffff\2\6\1\14\1\uffff\1\6\1\uffff\1\6\10\uffff\1\14\1\uffff\2\14\1\uffff\1\14\3\uffff\1\14",
            "\2\14\7\uffff\1\14\1\uffff\43\14\2\uffff\2\6\1\14\1\uffff\1\6\1\uffff\1\6\10\uffff\1\14\1\uffff\2\14\1\uffff\1\14\3\uffff\1\14",
            "",
            "\2\15\7\uffff\1\15\1\uffff\43\15\2\uffff\2\6\1\15\1\uffff\1\6\1\uffff\1\6\10\uffff\1\15\1\uffff\2\15\1\uffff\1\15\3\uffff\1\15",
            "\2\16\7\uffff\1\16\1\uffff\44\16\1\uffff\2\6\1\16\1\uffff\1\6\1\uffff\1\6\10\uffff\1\16\1\uffff\2\16\1\uffff\1\16\3\uffff\2\16",
            "\2\17\7\uffff\1\17\1\uffff\43\17\2\uffff\2\6\1\17\1\uffff\1\6\1\uffff\1\6\10\uffff\1\17\1\uffff\2\17\1\uffff\1\17\3\uffff\1\17",
            "\2\15\7\uffff\1\15\1\uffff\43\15\2\uffff\2\6\1\15\1\uffff\1\6\1\uffff\1\6\10\uffff\1\15\1\uffff\2\15\1\uffff\1\15\3\uffff\1\15",
            "\1\15\20\uffff\1\16\5\uffff\1\15\14\uffff\2\6\2\uffff\1\6\1\uffff\1\6",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2397:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )";
        }
    }
    static final String dfa_13s = "\2\uffff\54\1\1\uffff";
    static final String dfa_14s = "\1\4\1\uffff\54\22\1\uffff";
    static final String dfa_15s = "\1\u008c\1\uffff\54\u0082\1\uffff";
    static final String dfa_16s = "\1\uffff\1\1\54\uffff\1\2";
    static final String[] dfa_17s = {
            "\2\1\2\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\2\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\10\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[][] dfa_17 = unpackEncodedStringArray(dfa_17s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_1;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_5;
            this.transition = dfa_17;
        }
        public String getDescription() {
            return "6083:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )";
        }
    }
    static final String[] dfa_18s = {
            "\2\1\2\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\2\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_1;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_5;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "6296:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )";
        }
    }
    static final String dfa_19s = "\75\uffff";
    static final String dfa_20s = "\1\10\64\uffff\5\0\3\uffff";
    static final String dfa_21s = "\1\166\64\uffff\5\0\3\uffff";
    static final String dfa_22s = "\1\uffff\1\1\53\uffff\1\2\16\uffff\1\3";
    static final String dfa_23s = "\65\uffff\1\0\1\1\1\2\1\3\1\4\3\uffff}>";
    static final String[] dfa_24s = {
            "\2\1\7\uffff\1\1\1\uffff\43\1\4\uffff\1\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\26\uffff\2\55\1\uffff\10\55\1\65\1\66\1\67\1\70\1\71",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "7366:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA167_53 = input.LA(1);


                        int index167_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index167_53);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA167_54 = input.LA(1);


                        int index167_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index167_54);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA167_55 = input.LA(1);


                        int index167_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index167_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA167_56 = input.LA(1);


                        int index167_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index167_56);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA167_57 = input.LA(1);


                        int index167_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index167_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\113\uffff";
    static final String dfa_26s = "\1\4\3\0\107\uffff";
    static final String dfa_27s = "\1\u008c\3\0\107\uffff";
    static final String dfa_28s = "\4\uffff\1\1\105\uffff\1\2";
    static final String dfa_29s = "\1\uffff\1\0\1\1\1\2\107\uffff}>";
    static final String[] dfa_30s = {
            "\2\4\2\uffff\2\4\7\uffff\1\4\1\1\44\4\3\uffff\1\4\14\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\1\4\2\uffff\1\2\1\3\1\4\21\uffff\2\4\1\uffff\15\4\2\uffff\1\4\2\uffff\4\4\6\uffff\1\4\4\uffff\1\112\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "7476:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA170_1 = input.LA(1);


                        int index170_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred315_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index170_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA170_2 = input.LA(1);


                        int index170_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred315_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index170_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA170_3 = input.LA(1);


                        int index170_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred315_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index170_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 170, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\112\uffff";
    static final String dfa_32s = "\1\4\12\uffff\7\0\70\uffff";
    static final String dfa_33s = "\1\u008c\12\uffff\7\0\70\uffff";
    static final String dfa_34s = "\1\uffff\1\1\1\2\1\3\1\4\15\uffff\1\10\1\11\7\uffff\1\12\53\uffff\1\5\1\6\1\7";
    static final String dfa_35s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\70\uffff}>";
    static final String[] dfa_36s = {
            "\2\4\2\uffff\2\33\7\uffff\1\33\1\uffff\43\33\1\1\3\uffff\1\33\14\uffff\1\33\1\uffff\2\33\1\uffff\1\33\3\uffff\1\33\4\uffff\1\4\21\uffff\1\14\1\13\1\uffff\10\23\1\15\1\16\1\17\1\20\1\21\2\uffff\1\22\2\uffff\4\4\6\uffff\1\2\5\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "7725:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA173_11 = input.LA(1);


                        int index173_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalOCLinEcore()) ) {s = 71;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA173_12 = input.LA(1);


                        int index173_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalOCLinEcore()) ) {s = 72;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA173_13 = input.LA(1);


                        int index173_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA173_14 = input.LA(1);


                        int index173_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA173_15 = input.LA(1);


                        int index173_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA173_16 = input.LA(1);


                        int index173_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA173_17 = input.LA(1);


                        int index173_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred326_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index173_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 173, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\14\uffff";
    static final String dfa_38s = "\1\5\13\uffff";
    static final String dfa_39s = "\1\67\3\0\10\uffff";
    static final String dfa_40s = "\1\u0085\3\0\10\uffff";
    static final String dfa_41s = "\4\uffff\1\3\1\4\4\uffff\1\1\1\2";
    static final String dfa_42s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_43s = {
            "\1\5\1\3\1\5\1\uffff\1\5\76\uffff\1\1\1\2\10\uffff\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "8259:2: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA192_1 = input.LA(1);


                        int index192_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred348_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index192_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA192_2 = input.LA(1);


                        int index192_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred348_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index192_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA192_3 = input.LA(1);


                        int index192_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred344_InternalOCLinEcore()) ) {s = 11;}

                        else if ( (synpred348_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index192_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "8627:2: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA204_1 = input.LA(1);


                        int index204_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred354_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred362_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index204_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA204_2 = input.LA(1);


                        int index204_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred354_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred362_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index204_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA204_3 = input.LA(1);


                        int index204_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred358_InternalOCLinEcore()) ) {s = 11;}

                        else if ( (synpred362_InternalOCLinEcore()) ) {s = 4;}


                        input.seek(index204_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\1\u008c\1\uffff\54\u0087\1\uffff";
    static final String[] dfa_45s = {
            "\2\1\2\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\2\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\26\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            ""
    };
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_14;
            this.max = dfa_44;
            this.accept = dfa_16;
            this.special = dfa_5;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9039:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )";
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x043FFFFFFFFA0300L,0x0000000000011680L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000009100000002L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000008000000002L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x073FFFFFFFFA0300L,0x0000000000011680L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0340000000000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x047FFFFFFFFE03B0L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0300000000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x067FFFFFFFFE03B0L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x053FFFFFFFFA0300L,0x0000000000011680L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0140000000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x167FFFFFFFFA0320L,0x0000000000011680L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x1240000000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x043FFFFFFFFA0320L,0x0000000000011680L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0880000000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x1200000000000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x041FFFFFFFFA0300L,0x0000000000010600L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x241FFFFFFFFA0300L,0x0000000000010600L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x5300000000000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x047FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001040L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x5200000000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x801E104090000000L,0x000000000000007FL});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xA81E104090000000L,0x000000000000007FL});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xA01E104090000000L,0x000000000000007FL});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x2400000208000000L,0x0000000000010200L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x1340000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x1300000000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x2000000000000000L,0x0000000000000180L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2420000000400000L,0x0000000000010200L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000062L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0240000000000020L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0240000000000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x243FFFFFFFFA0300L,0x0000000000010600L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000040010L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x2400000000000000L,0x0000000000010200L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x047FFFFFFFFA0300L,0x0000000000031680L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x04BFFFFFFFFA0300L,0x0000000000011680L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x1301000000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x1201000000000000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x1A00000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x8006004010000000L,0x000000000000001AL});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0xA806004010000000L,0x000000000000001AL});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0xA006004010000000L,0x000000000000001AL});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x2400030000200000L,0x0000000000010200L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x2400048022880000L,0x0000000000010200L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x1100000000000002L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0004004000000000L,0x0000000000000012L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x2804004000000000L,0x0000000000000012L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x2004004000000000L,0x0000000000000012L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x5300000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x801E504011000000L,0x000000000000C07EL});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xA81E504011000000L,0x000000000000C07EL});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xA01E504011000000L,0x000000000000C07EL});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x2400000A08000000L,0x0000000000011200L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0A00000000000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1340000040000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x1300000040000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x1B00000000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x2000000400000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x143FFFFFFFFA0320L,0x0000000000011680L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x243FFFFFFFFA0320L,0x0000000000011680L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0800000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0040000000000002L,0x0000000000020000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x047FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000009040L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x043FFFFFFFFA0300L,0x007FFD8000011680L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0040000000000002L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x257FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x2800000000000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x057FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x047FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0800000000000000L,0x0100000000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000300L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x247FFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0C00000000000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x4100000000000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x4000000000040002L,0x0000007FFFE60000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x1040000000000002L,0x0000000000000000L,0x0000000000000005L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x1000000000000002L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x05FFFFFFFFFE0330L,0xF27FFD8000391680L,0x0000000000001840L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0A80000000000000L,0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0100000000000002L,0x0C00000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x4000000000000002L,0x0C00000000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0C00000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000500L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x4140000000000000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000010L,0x0000000000200000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000010L,0x0000000000A00000L,0x0000000000008000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000006008L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0800000000000002L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L});
    }


}
