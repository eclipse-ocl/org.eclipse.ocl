package org.eclipse.ocl.xtext.oclinecore.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.ocl.xtext.oclinecore.services.OCLinEcoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2011, 2020 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalOCLinEcoreParser extends org.eclipse.ocl.xtext.base.utilities.CompatibilityAbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_SINGLE_QUOTED_STRING", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_UNQUOTED_STRING", "RULE_ML_DOCUMENTATION", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_DOUBLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'module'", "'-'", "'abstract'", "'attribute'", "'body'", "'callable'", "'class'", "'composes'", "'datatype'", "'definition'", "'derivation'", "'derived'", "'enum'", "'extends'", "'id'", "'import'", "'initial'", "'interface'", "'key'", "'library'", "'operation'", "'ordered'", "'package'", "'postcondition'", "'precondition'", "'primitive'", "'property'", "'readonly'", "'reference'", "'resolve'", "'static'", "'throws'", "'transient'", "'unique'", "'unsettable'", "'volatile'", "'invariant'", "'('", "')'", "':'", "';'", "'annotation'", "','", "'{'", "'}'", "'='", "'!derived'", "'!id'", "'!ordered'", "'!readonly'", "'!transient'", "'!unique'", "'!unsettable'", "'!volatile'", "'serializable'", "'!serializable'", "'documentation'", "'literal'", "'::*'", "'opposite'", "'#'", "'!composes'", "'!resolve'", "'sysml'", "'<'", "'>'", "'not'", "'not2'", "'*'", "'/'", "'+'", "'>='", "'<='", "'<>'", "'and'", "'and2'", "'implies'", "'implies2'", "'or'", "'or2'", "'xor'", "'xor2'", "'.'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'::'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'..'", "'++'", "'Lambda'", "'<-'", "'true'", "'false'", "'invalid'", "'null'", "'@'", "'pre'", "'['", "']'", "'in'", "'|'", "'if'", "'then'", "'else'", "'endif'", "'elseif'", "'let'", "'self'", "'|?'", "'|1'", "'?'", "'&&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_SINGLE_QUOTED_STRING=5;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=13;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=10;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int RULE_ML_DOCUMENTATION=8;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=12;
    public static final int T__19=19;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=11;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=6;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_UNQUOTED_STRING=7;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=9;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=16;
    public static final int RULE_ANY_OTHER=17;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalOCLinEcoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalOCLinEcoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalOCLinEcoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalOCLinEcore.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private OCLinEcoreGrammarAccess grammarAccess;

        public InternalOCLinEcoreParser(TokenStream input, OCLinEcoreGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "TopLevelCS";
       	}

       	@Override
       	protected OCLinEcoreGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleTopLevelCS"
    // InternalOCLinEcore.g:80:1: entryRuleTopLevelCS returns [EObject current=null] : iv_ruleTopLevelCS= ruleTopLevelCS EOF ;
    public final EObject entryRuleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelCS = null;


        try {
            // InternalOCLinEcore.g:81:2: (iv_ruleTopLevelCS= ruleTopLevelCS EOF )
            // InternalOCLinEcore.g:82:2: iv_ruleTopLevelCS= ruleTopLevelCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTopLevelCS=ruleTopLevelCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelCS"


    // $ANTLR start "ruleTopLevelCS"
    // InternalOCLinEcore.g:89:1: ruleTopLevelCS returns [EObject current=null] : ( () ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_4_0= ruleImportCS ) )* ( (lv_ownedPackages_5_0= rulePackageCS ) )* ) ;
    public final EObject ruleTopLevelCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_ownedAnnotations_1_0 = null;

        EObject lv_ownedImports_4_0 = null;

        EObject lv_ownedPackages_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:92:28: ( ( () ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_4_0= ruleImportCS ) )* ( (lv_ownedPackages_5_0= rulePackageCS ) )* ) )
            // InternalOCLinEcore.g:93:1: ( () ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_4_0= ruleImportCS ) )* ( (lv_ownedPackages_5_0= rulePackageCS ) )* )
            {
            // InternalOCLinEcore.g:93:1: ( () ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_4_0= ruleImportCS ) )* ( (lv_ownedPackages_5_0= rulePackageCS ) )* )
            // InternalOCLinEcore.g:93:2: () ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )? ( (lv_ownedImports_4_0= ruleImportCS ) )* ( (lv_ownedPackages_5_0= rulePackageCS ) )*
            {
            // InternalOCLinEcore.g:93:2: ()
            // InternalOCLinEcore.g:94:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTopLevelCSAccess().getTopLevelCSAction_0(),
                          current);

            }

            }

            // InternalOCLinEcore.g:102:2: ( ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_ML_DOCUMENTATION) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==18) ) {
                    alt2=1;
                }
            }
            else if ( (LA2_0==18) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalOCLinEcore.g:102:3: ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'module' ruleUnrestrictedName
                    {
                    // InternalOCLinEcore.g:102:3: ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==RULE_ML_DOCUMENTATION) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalOCLinEcore.g:103:1: (lv_ownedAnnotations_1_0= ruleCommentCS )
                            {
                            // InternalOCLinEcore.g:103:1: (lv_ownedAnnotations_1_0= ruleCommentCS )
                            // InternalOCLinEcore.g:104:3: lv_ownedAnnotations_1_0= ruleCommentCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_3);
                            lv_ownedAnnotations_1_0=ruleCommentCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedAnnotations",
                                      		lv_ownedAnnotations_1_0,
                                      		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTopLevelCSAccess().getModuleKeyword_1_1());

                    }
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTopLevelCSAccess().getUnrestrictedNameParserRuleCall_1_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:135:3: ( (lv_ownedImports_4_0= ruleImportCS ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_ML_DOCUMENTATION) ) {
                    int LA3_1 = input.LA(2);

                    if ( (LA3_1==33||LA3_1==37) ) {
                        alt3=1;
                    }


                }
                else if ( (LA3_0==33||LA3_0==37) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalOCLinEcore.g:136:1: (lv_ownedImports_4_0= ruleImportCS )
            	    {
            	    // InternalOCLinEcore.g:136:1: (lv_ownedImports_4_0= ruleImportCS )
            	    // InternalOCLinEcore.g:137:3: lv_ownedImports_4_0= ruleImportCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedImportsImportCSParserRuleCall_2_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_ownedImports_4_0=ruleImportCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedImports",
            	              		lv_ownedImports_4_0,
            	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ImportCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            // InternalOCLinEcore.g:153:3: ( (lv_ownedPackages_5_0= rulePackageCS ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==RULE_ML_DOCUMENTATION||LA4_0==40) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalOCLinEcore.g:154:1: (lv_ownedPackages_5_0= rulePackageCS )
            	    {
            	    // InternalOCLinEcore.g:154:1: (lv_ownedPackages_5_0= rulePackageCS )
            	    // InternalOCLinEcore.g:155:3: lv_ownedPackages_5_0= rulePackageCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedPackagesPackageCSParserRuleCall_3_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_ownedPackages_5_0=rulePackageCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPackages",
            	              		lv_ownedPackages_5_0,
            	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PackageCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelCS"


    // $ANTLR start "entryRuleSIGNED"
    // InternalOCLinEcore.g:181:1: entryRuleSIGNED returns [String current=null] : iv_ruleSIGNED= ruleSIGNED EOF ;
    public final String entryRuleSIGNED() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSIGNED = null;


        try {
            // InternalOCLinEcore.g:182:2: (iv_ruleSIGNED= ruleSIGNED EOF )
            // InternalOCLinEcore.g:183:2: iv_ruleSIGNED= ruleSIGNED EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSIGNEDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSIGNED=ruleSIGNED();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSIGNED.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSIGNED"


    // $ANTLR start "ruleSIGNED"
    // InternalOCLinEcore.g:190:1: ruleSIGNED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSIGNED() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:193:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalOCLinEcore.g:194:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalOCLinEcore.g:194:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalOCLinEcore.g:194:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalOCLinEcore.g:194:2: (kw= '-' )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==19) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalOCLinEcore.g:195:2: kw= '-'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSIGNEDAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_1, grammarAccess.getSIGNEDAccess().getINTTerminalRuleCall_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSIGNED"


    // $ANTLR start "entryRuleEnumerationLiteralName"
    // InternalOCLinEcore.g:215:1: entryRuleEnumerationLiteralName returns [String current=null] : iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF ;
    public final String entryRuleEnumerationLiteralName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEnumerationLiteralName = null;


        try {
            // InternalOCLinEcore.g:216:2: (iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF )
            // InternalOCLinEcore.g:217:2: iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralName"


    // $ANTLR start "ruleEnumerationLiteralName"
    // InternalOCLinEcore.g:224:1: ruleEnumerationLiteralName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) ;
    public final AntlrDatatypeRuleToken ruleEnumerationLiteralName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:227:28: ( (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) )
            // InternalOCLinEcore.g:228:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            {
            // InternalOCLinEcore.g:228:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'callable' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derivation' | kw= 'derived' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'import' | kw= 'initial' | kw= 'interface' | kw= 'key' | kw= 'library' | kw= 'module' | kw= 'operation' | kw= 'ordered' | kw= 'package' | kw= 'postcondition' | kw= 'precondition' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'reference' | kw= 'resolve' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            int alt6=36;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt6=1;
                }
                break;
            case 20:
                {
                alt6=2;
                }
                break;
            case 21:
                {
                alt6=3;
                }
                break;
            case 22:
                {
                alt6=4;
                }
                break;
            case 23:
                {
                alt6=5;
                }
                break;
            case 24:
                {
                alt6=6;
                }
                break;
            case 25:
                {
                alt6=7;
                }
                break;
            case 26:
                {
                alt6=8;
                }
                break;
            case 27:
                {
                alt6=9;
                }
                break;
            case 28:
                {
                alt6=10;
                }
                break;
            case 29:
                {
                alt6=11;
                }
                break;
            case 30:
                {
                alt6=12;
                }
                break;
            case 31:
                {
                alt6=13;
                }
                break;
            case 32:
                {
                alt6=14;
                }
                break;
            case 33:
                {
                alt6=15;
                }
                break;
            case 34:
                {
                alt6=16;
                }
                break;
            case 35:
                {
                alt6=17;
                }
                break;
            case 36:
                {
                alt6=18;
                }
                break;
            case 37:
                {
                alt6=19;
                }
                break;
            case 18:
                {
                alt6=20;
                }
                break;
            case 38:
                {
                alt6=21;
                }
                break;
            case 39:
                {
                alt6=22;
                }
                break;
            case 40:
                {
                alt6=23;
                }
                break;
            case 41:
                {
                alt6=24;
                }
                break;
            case 42:
                {
                alt6=25;
                }
                break;
            case 43:
                {
                alt6=26;
                }
                break;
            case 44:
                {
                alt6=27;
                }
                break;
            case 45:
                {
                alt6=28;
                }
                break;
            case 46:
                {
                alt6=29;
                }
                break;
            case 47:
                {
                alt6=30;
                }
                break;
            case 48:
                {
                alt6=31;
                }
                break;
            case 49:
                {
                alt6=32;
                }
                break;
            case 50:
                {
                alt6=33;
                }
                break;
            case 51:
                {
                alt6=34;
                }
                break;
            case 52:
                {
                alt6=35;
                }
                break;
            case 53:
                {
                alt6=36;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalOCLinEcore.g:229:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EssentialOCLUnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:241:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getAbstractKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:248:2: kw= 'attribute'
                    {
                    kw=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getAttributeKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:255:2: kw= 'body'
                    {
                    kw=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getBodyKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:262:2: kw= 'callable'
                    {
                    kw=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getCallableKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:269:2: kw= 'class'
                    {
                    kw=(Token)match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getClassKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:276:2: kw= 'composes'
                    {
                    kw=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getComposesKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:283:2: kw= 'datatype'
                    {
                    kw=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDatatypeKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:290:2: kw= 'definition'
                    {
                    kw=(Token)match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDefinitionKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:297:2: kw= 'derivation'
                    {
                    kw=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDerivationKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalOCLinEcore.g:304:2: kw= 'derived'
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getDerivedKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalOCLinEcore.g:311:2: kw= 'enum'
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getEnumKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalOCLinEcore.g:318:2: kw= 'extends'
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getExtendsKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalOCLinEcore.g:325:2: kw= 'id'
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getIdKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalOCLinEcore.g:332:2: kw= 'import'
                    {
                    kw=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getImportKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalOCLinEcore.g:339:2: kw= 'initial'
                    {
                    kw=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getInitialKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalOCLinEcore.g:346:2: kw= 'interface'
                    {
                    kw=(Token)match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getInterfaceKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalOCLinEcore.g:353:2: kw= 'key'
                    {
                    kw=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getKeyKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalOCLinEcore.g:360:2: kw= 'library'
                    {
                    kw=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getLibraryKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalOCLinEcore.g:367:2: kw= 'module'
                    {
                    kw=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getModuleKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalOCLinEcore.g:374:2: kw= 'operation'
                    {
                    kw=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getOperationKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalOCLinEcore.g:381:2: kw= 'ordered'
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getOrderedKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalOCLinEcore.g:388:2: kw= 'package'
                    {
                    kw=(Token)match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPackageKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalOCLinEcore.g:395:2: kw= 'postcondition'
                    {
                    kw=(Token)match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPostconditionKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalOCLinEcore.g:402:2: kw= 'precondition'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPreconditionKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalOCLinEcore.g:409:2: kw= 'primitive'
                    {
                    kw=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPrimitiveKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalOCLinEcore.g:416:2: kw= 'property'
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getPropertyKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalOCLinEcore.g:423:2: kw= 'readonly'
                    {
                    kw=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getReadonlyKeyword_27());

                    }

                    }
                    break;
                case 29 :
                    // InternalOCLinEcore.g:430:2: kw= 'reference'
                    {
                    kw=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getReferenceKeyword_28());

                    }

                    }
                    break;
                case 30 :
                    // InternalOCLinEcore.g:437:2: kw= 'resolve'
                    {
                    kw=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getResolveKeyword_29());

                    }

                    }
                    break;
                case 31 :
                    // InternalOCLinEcore.g:444:2: kw= 'static'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getStaticKeyword_30());

                    }

                    }
                    break;
                case 32 :
                    // InternalOCLinEcore.g:451:2: kw= 'throws'
                    {
                    kw=(Token)match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getThrowsKeyword_31());

                    }

                    }
                    break;
                case 33 :
                    // InternalOCLinEcore.g:458:2: kw= 'transient'
                    {
                    kw=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getTransientKeyword_32());

                    }

                    }
                    break;
                case 34 :
                    // InternalOCLinEcore.g:465:2: kw= 'unique'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getUniqueKeyword_33());

                    }

                    }
                    break;
                case 35 :
                    // InternalOCLinEcore.g:472:2: kw= 'unsettable'
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getUnsettableKeyword_34());

                    }

                    }
                    break;
                case 36 :
                    // InternalOCLinEcore.g:479:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEnumerationLiteralNameAccess().getVolatileKeyword_35());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralName"


    // $ANTLR start "entryRuleInvariantConstraintCS"
    // InternalOCLinEcore.g:492:1: entryRuleInvariantConstraintCS returns [EObject current=null] : iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF ;
    public final EObject entryRuleInvariantConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantConstraintCS = null;


        try {
            // InternalOCLinEcore.g:493:2: (iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF )
            // InternalOCLinEcore.g:494:2: iv_ruleInvariantConstraintCS= ruleInvariantConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvariantConstraintCS=ruleInvariantConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantConstraintCS"


    // $ANTLR start "ruleInvariantConstraintCS"
    // InternalOCLinEcore.g:501:1: ruleInvariantConstraintCS returns [EObject current=null] : ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) ) ;
    public final EObject ruleInvariantConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCallable_0_0=null;
        Token lv_stereotype_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedMessageSpecification_4_0 = null;

        EObject lv_ownedSpecification_7_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:504:28: ( ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) ) )
            // InternalOCLinEcore.g:505:1: ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) )
            {
            // InternalOCLinEcore.g:505:1: ( ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' ) )
            // InternalOCLinEcore.g:505:2: ( (lv_isCallable_0_0= 'callable' ) )? ( (lv_stereotype_1_0= 'invariant' ) ) ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )? ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' )
            {
            // InternalOCLinEcore.g:505:2: ( (lv_isCallable_0_0= 'callable' ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==23) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalOCLinEcore.g:506:1: (lv_isCallable_0_0= 'callable' )
                    {
                    // InternalOCLinEcore.g:506:1: (lv_isCallable_0_0= 'callable' )
                    // InternalOCLinEcore.g:507:3: lv_isCallable_0_0= 'callable'
                    {
                    lv_isCallable_0_0=(Token)match(input,23,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCallable_0_0, grammarAccess.getInvariantConstraintCSAccess().getIsCallableCallableKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getInvariantConstraintCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCallable", true, "callable");

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:520:3: ( (lv_stereotype_1_0= 'invariant' ) )
            // InternalOCLinEcore.g:521:1: (lv_stereotype_1_0= 'invariant' )
            {
            // InternalOCLinEcore.g:521:1: (lv_stereotype_1_0= 'invariant' )
            // InternalOCLinEcore.g:522:3: lv_stereotype_1_0= 'invariant'
            {
            lv_stereotype_1_0=(Token)match(input,54,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_1_0, grammarAccess.getInvariantConstraintCSAccess().getStereotypeInvariantKeyword_1_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInvariantConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_1_0, "invariant");

            }

            }


            }

            // InternalOCLinEcore.g:535:2: ( ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )? )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_SIMPLE_ID && LA9_0<=RULE_ESCAPED_ID)||LA9_0==18||(LA9_0>=20 && LA9_0<=54)||LA9_0==59||LA9_0==72||(LA9_0>=74 && LA9_0<=75)||LA9_0==77||LA9_0==81) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalOCLinEcore.g:535:3: ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )?
                    {
                    // InternalOCLinEcore.g:535:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:536:1: (lv_name_2_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:536:1: (lv_name_2_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:537:3: lv_name_2_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    lv_name_2_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:553:2: (otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')' )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==55) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalOCLinEcore.g:553:4: otherlv_3= '(' ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) ) otherlv_5= ')'
                            {
                            otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getInvariantConstraintCSAccess().getLeftParenthesisKeyword_2_1_0());

                            }
                            // InternalOCLinEcore.g:557:1: ( (lv_ownedMessageSpecification_4_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:558:1: (lv_ownedMessageSpecification_4_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:558:1: (lv_ownedMessageSpecification_4_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:559:3: lv_ownedMessageSpecification_4_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_12);
                            lv_ownedMessageSpecification_4_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_4_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getInvariantConstraintCSAccess().getRightParenthesisKeyword_2_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:579:5: ( (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' ) | otherlv_9= ';' )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==57) ) {
                alt11=1;
            }
            else if ( (LA11_0==58) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalOCLinEcore.g:579:6: (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' )
                    {
                    // InternalOCLinEcore.g:579:6: (otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';' )
                    // InternalOCLinEcore.g:579:8: otherlv_6= ':' ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )? otherlv_8= ';'
                    {
                    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getInvariantConstraintCSAccess().getColonKeyword_3_0_0());

                    }
                    // InternalOCLinEcore.g:583:1: ( (lv_ownedSpecification_7_0= ruleSpecificationCS ) )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( ((LA10_0>=RULE_INT && LA10_0<=RULE_SINGLE_QUOTED_STRING)||LA10_0==RULE_UNQUOTED_STRING||(LA10_0>=RULE_SIMPLE_ID && LA10_0<=RULE_ESCAPED_ID)||(LA10_0>=18 && LA10_0<=55)||LA10_0==59||LA10_0==72||(LA10_0>=74 && LA10_0<=75)||LA10_0==77||LA10_0==81||(LA10_0>=84 && LA10_0<=86)||(LA10_0>=104 && LA10_0<=105)||(LA10_0>=107 && LA10_0<=119)||LA10_0==122||(LA10_0>=124 && LA10_0<=127)||LA10_0==134||(LA10_0>=139 && LA10_0<=140)) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalOCLinEcore.g:584:1: (lv_ownedSpecification_7_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:584:1: (lv_ownedSpecification_7_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:585:3: lv_ownedSpecification_7_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getInvariantConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_15);
                            lv_ownedSpecification_7_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getInvariantConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedSpecification",
                                      		lv_ownedSpecification_7_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getInvariantConstraintCSAccess().getSemicolonKeyword_3_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:606:7: otherlv_9= ';'
                    {
                    otherlv_9=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getInvariantConstraintCSAccess().getSemicolonKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantConstraintCS"


    // $ANTLR start "entryRulePostconditionConstraintCS"
    // InternalOCLinEcore.g:618:1: entryRulePostconditionConstraintCS returns [EObject current=null] : iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF ;
    public final EObject entryRulePostconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostconditionConstraintCS = null;


        try {
            // InternalOCLinEcore.g:619:2: (iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF )
            // InternalOCLinEcore.g:620:2: iv_rulePostconditionConstraintCS= rulePostconditionConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostconditionConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostconditionConstraintCS=rulePostconditionConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostconditionConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostconditionConstraintCS"


    // $ANTLR start "rulePostconditionConstraintCS"
    // InternalOCLinEcore.g:627:1: rulePostconditionConstraintCS returns [EObject current=null] : ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) ;
    public final EObject rulePostconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_stereotype_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedMessageSpecification_3_0 = null;

        EObject lv_ownedSpecification_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:630:28: ( ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) )
            // InternalOCLinEcore.g:631:1: ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            {
            // InternalOCLinEcore.g:631:1: ( ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            // InternalOCLinEcore.g:631:2: ( (lv_stereotype_0_0= 'postcondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';'
            {
            // InternalOCLinEcore.g:631:2: ( (lv_stereotype_0_0= 'postcondition' ) )
            // InternalOCLinEcore.g:632:1: (lv_stereotype_0_0= 'postcondition' )
            {
            // InternalOCLinEcore.g:632:1: (lv_stereotype_0_0= 'postcondition' )
            // InternalOCLinEcore.g:633:3: lv_stereotype_0_0= 'postcondition'
            {
            lv_stereotype_0_0=(Token)match(input,41,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_0_0, grammarAccess.getPostconditionConstraintCSAccess().getStereotypePostconditionKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPostconditionConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_0_0, "postcondition");

            }

            }


            }

            // InternalOCLinEcore.g:646:2: ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_SIMPLE_ID && LA13_0<=RULE_ESCAPED_ID)||LA13_0==18||(LA13_0>=20 && LA13_0<=54)||LA13_0==59||LA13_0==72||(LA13_0>=74 && LA13_0<=75)||LA13_0==77||LA13_0==81) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalOCLinEcore.g:646:3: ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    {
                    // InternalOCLinEcore.g:646:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:647:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:647:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:648:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:664:2: (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==55) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // InternalOCLinEcore.g:664:4: otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')'
                            {
                            otherlv_2=(Token)match(input,55,FollowSets000.FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getPostconditionConstraintCSAccess().getLeftParenthesisKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:668:1: ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:669:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:669:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:670:3: lv_ownedMessageSpecification_3_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_12);
                            lv_ownedMessageSpecification_3_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_3_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getPostconditionConstraintCSAccess().getRightParenthesisKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPostconditionConstraintCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:694:1: ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_INT && LA14_0<=RULE_SINGLE_QUOTED_STRING)||LA14_0==RULE_UNQUOTED_STRING||(LA14_0>=RULE_SIMPLE_ID && LA14_0<=RULE_ESCAPED_ID)||(LA14_0>=18 && LA14_0<=55)||LA14_0==59||LA14_0==72||(LA14_0>=74 && LA14_0<=75)||LA14_0==77||LA14_0==81||(LA14_0>=84 && LA14_0<=86)||(LA14_0>=104 && LA14_0<=105)||(LA14_0>=107 && LA14_0<=119)||LA14_0==122||(LA14_0>=124 && LA14_0<=127)||LA14_0==134||(LA14_0>=139 && LA14_0<=140)) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalOCLinEcore.g:695:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    {
                    // InternalOCLinEcore.g:695:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    // InternalOCLinEcore.g:696:3: lv_ownedSpecification_6_0= ruleSpecificationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPostconditionConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_15);
                    lv_ownedSpecification_6_0=ruleSpecificationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSpecification",
                              		lv_ownedSpecification_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getPostconditionConstraintCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostconditionConstraintCS"


    // $ANTLR start "entryRulePreconditionConstraintCS"
    // InternalOCLinEcore.g:724:1: entryRulePreconditionConstraintCS returns [EObject current=null] : iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF ;
    public final EObject entryRulePreconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionConstraintCS = null;


        try {
            // InternalOCLinEcore.g:725:2: (iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF )
            // InternalOCLinEcore.g:726:2: iv_rulePreconditionConstraintCS= rulePreconditionConstraintCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreconditionConstraintCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePreconditionConstraintCS=rulePreconditionConstraintCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreconditionConstraintCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionConstraintCS"


    // $ANTLR start "rulePreconditionConstraintCS"
    // InternalOCLinEcore.g:733:1: rulePreconditionConstraintCS returns [EObject current=null] : ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) ;
    public final EObject rulePreconditionConstraintCS() throws RecognitionException {
        EObject current = null;

        Token lv_stereotype_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedMessageSpecification_3_0 = null;

        EObject lv_ownedSpecification_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:736:28: ( ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' ) )
            // InternalOCLinEcore.g:737:1: ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            {
            // InternalOCLinEcore.g:737:1: ( ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';' )
            // InternalOCLinEcore.g:737:2: ( (lv_stereotype_0_0= 'precondition' ) ) ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )? otherlv_5= ':' ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )? otherlv_7= ';'
            {
            // InternalOCLinEcore.g:737:2: ( (lv_stereotype_0_0= 'precondition' ) )
            // InternalOCLinEcore.g:738:1: (lv_stereotype_0_0= 'precondition' )
            {
            // InternalOCLinEcore.g:738:1: (lv_stereotype_0_0= 'precondition' )
            // InternalOCLinEcore.g:739:3: lv_stereotype_0_0= 'precondition'
            {
            lv_stereotype_0_0=(Token)match(input,42,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_stereotype_0_0, grammarAccess.getPreconditionConstraintCSAccess().getStereotypePreconditionKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreconditionConstraintCSRule());
              	        }
                     		setWithLastConsumed(current, "stereotype", lv_stereotype_0_0, "precondition");

            }

            }


            }

            // InternalOCLinEcore.g:752:2: ( ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )? )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=RULE_SIMPLE_ID && LA16_0<=RULE_ESCAPED_ID)||LA16_0==18||(LA16_0>=20 && LA16_0<=54)||LA16_0==59||LA16_0==72||(LA16_0>=74 && LA16_0<=75)||LA16_0==77||LA16_0==81) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalOCLinEcore.g:752:3: ( (lv_name_1_0= ruleUnrestrictedName ) ) (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    {
                    // InternalOCLinEcore.g:752:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:753:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:753:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:754:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:770:2: (otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')' )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==55) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // InternalOCLinEcore.g:770:4: otherlv_2= '(' ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) ) otherlv_4= ')'
                            {
                            otherlv_2=(Token)match(input,55,FollowSets000.FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getPreconditionConstraintCSAccess().getLeftParenthesisKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:774:1: ( (lv_ownedMessageSpecification_3_0= ruleSpecificationCS ) )
                            // InternalOCLinEcore.g:775:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            {
                            // InternalOCLinEcore.g:775:1: (lv_ownedMessageSpecification_3_0= ruleSpecificationCS )
                            // InternalOCLinEcore.g:776:3: lv_ownedMessageSpecification_3_0= ruleSpecificationCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getOwnedMessageSpecificationSpecificationCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_12);
                            lv_ownedMessageSpecification_3_0=ruleSpecificationCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedMessageSpecification",
                                      		lv_ownedMessageSpecification_3_0,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getPreconditionConstraintCSAccess().getRightParenthesisKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPreconditionConstraintCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:800:1: ( (lv_ownedSpecification_6_0= ruleSpecificationCS ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_INT && LA17_0<=RULE_SINGLE_QUOTED_STRING)||LA17_0==RULE_UNQUOTED_STRING||(LA17_0>=RULE_SIMPLE_ID && LA17_0<=RULE_ESCAPED_ID)||(LA17_0>=18 && LA17_0<=55)||LA17_0==59||LA17_0==72||(LA17_0>=74 && LA17_0<=75)||LA17_0==77||LA17_0==81||(LA17_0>=84 && LA17_0<=86)||(LA17_0>=104 && LA17_0<=105)||(LA17_0>=107 && LA17_0<=119)||LA17_0==122||(LA17_0>=124 && LA17_0<=127)||LA17_0==134||(LA17_0>=139 && LA17_0<=140)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalOCLinEcore.g:801:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    {
                    // InternalOCLinEcore.g:801:1: (lv_ownedSpecification_6_0= ruleSpecificationCS )
                    // InternalOCLinEcore.g:802:3: lv_ownedSpecification_6_0= ruleSpecificationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPreconditionConstraintCSAccess().getOwnedSpecificationSpecificationCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_15);
                    lv_ownedSpecification_6_0=ruleSpecificationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreconditionConstraintCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSpecification",
                              		lv_ownedSpecification_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getPreconditionConstraintCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionConstraintCS"


    // $ANTLR start "entryRuleAnnotationCS"
    // InternalOCLinEcore.g:830:1: entryRuleAnnotationCS returns [EObject current=null] : iv_ruleAnnotationCS= ruleAnnotationCS EOF ;
    public final EObject entryRuleAnnotationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationCS = null;


        try {
            // InternalOCLinEcore.g:831:2: (iv_ruleAnnotationCS= ruleAnnotationCS EOF )
            // InternalOCLinEcore.g:832:2: iv_ruleAnnotationCS= ruleAnnotationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationCS=ruleAnnotationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationCS"


    // $ANTLR start "ruleAnnotationCS"
    // InternalOCLinEcore.g:839:1: ruleAnnotationCS returns [EObject current=null] : ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) ) ;
    public final EObject ruleAnnotationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_ownedDetails_4_0 = null;

        EObject lv_ownedDetails_6_0 = null;

        EObject lv_ownedAnnotations_9_0 = null;

        EObject lv_ownedContents_10_0 = null;

        EObject lv_ownedReferences_11_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:842:28: ( ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) ) )
            // InternalOCLinEcore.g:843:1: ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) )
            {
            // InternalOCLinEcore.g:843:1: ( () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' ) )
            // InternalOCLinEcore.g:843:2: () otherlv_1= 'annotation' ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )? ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' )
            {
            // InternalOCLinEcore.g:843:2: ()
            // InternalOCLinEcore.g:844:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationCSAccess().getAnnotationCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,59,FollowSets000.FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotationCSAccess().getAnnotationKeyword_1());

            }
            // InternalOCLinEcore.g:856:1: ( ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_SINGLE_QUOTED_STRING||(LA19_0>=RULE_SIMPLE_ID && LA19_0<=RULE_ESCAPED_ID)||LA19_0==18||(LA19_0>=20 && LA19_0<=54)||LA19_0==59||LA19_0==72||(LA19_0>=74 && LA19_0<=75)||LA19_0==77||LA19_0==81) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalOCLinEcore.g:857:1: ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    // InternalOCLinEcore.g:857:1: ( (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:858:1: (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:858:1: (lv_name_2_1= ruleUnrestrictedName | lv_name_2_2= RULE_SINGLE_QUOTED_STRING )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( ((LA18_0>=RULE_SIMPLE_ID && LA18_0<=RULE_ESCAPED_ID)||LA18_0==18||(LA18_0>=20 && LA18_0<=54)||LA18_0==59||LA18_0==72||(LA18_0>=74 && LA18_0<=75)||LA18_0==77||LA18_0==81) ) {
                        alt18=1;
                    }
                    else if ( (LA18_0==RULE_SINGLE_QUOTED_STRING) ) {
                        alt18=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalOCLinEcore.g:859:3: lv_name_2_1= ruleUnrestrictedName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getNameUnrestrictedNameParserRuleCall_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_20);
                            lv_name_2_1=ruleUnrestrictedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_1,
                                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:874:8: lv_name_2_2= RULE_SINGLE_QUOTED_STRING
                            {
                            lv_name_2_2=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_name_2_2, grammarAccess.getAnnotationCSAccess().getNameSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotationCSRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current,
                                     			"name",
                                      		lv_name_2_2,
                                      		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:892:3: (otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==55) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalOCLinEcore.g:892:5: otherlv_3= '(' ( (lv_ownedDetails_4_0= ruleDetailCS ) ) (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,55,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAnnotationCSAccess().getLeftParenthesisKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:896:1: ( (lv_ownedDetails_4_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:897:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:897:1: (lv_ownedDetails_4_0= ruleDetailCS )
                    // InternalOCLinEcore.g:898:3: lv_ownedDetails_4_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_ownedDetails_4_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:914:2: (otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==60) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:914:4: otherlv_5= ',' ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    {
                    	    otherlv_5=(Token)match(input,60,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getAnnotationCSAccess().getCommaKeyword_3_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:918:1: ( (lv_ownedDetails_6_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:919:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:919:1: (lv_ownedDetails_6_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:920:3: lv_ownedDetails_6_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedDetailsDetailCSParserRuleCall_3_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    lv_ownedDetails_6_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_6_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,56,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAnnotationCSAccess().getRightParenthesisKeyword_3_3());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:940:3: ( (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' ) | otherlv_13= ';' )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==61) ) {
                alt23=1;
            }
            else if ( (LA23_0==58) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalOCLinEcore.g:940:4: (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' )
                    {
                    // InternalOCLinEcore.g:940:4: (otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}' )
                    // InternalOCLinEcore.g:940:6: otherlv_8= '{' ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+ otherlv_12= '}'
                    {
                    otherlv_8=(Token)match(input,61,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotationCSAccess().getLeftCurlyBracketKeyword_4_0_0());

                    }
                    // InternalOCLinEcore.g:944:1: ( ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) ) | ( (lv_ownedContents_10_0= ruleModelElementCS ) ) | ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) ) )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=4;
                        switch ( input.LA(1) ) {
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt22=1;
                            }
                            break;
                        case RULE_ML_DOCUMENTATION:
                            {
                            int LA22_3 = input.LA(2);

                            if ( ((LA22_3>=RULE_SIMPLE_ID && LA22_3<=RULE_ESCAPED_ID)||LA22_3==18||(LA22_3>=20 && LA22_3<=53)||LA22_3==75) ) {
                                alt22=2;
                            }
                            else if ( (LA22_3==74) ) {
                                alt22=1;
                            }


                            }
                            break;
                        case RULE_SIMPLE_ID:
                        case RULE_ESCAPED_ID:
                        case 18:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 75:
                            {
                            alt22=2;
                            }
                            break;
                        case 46:
                            {
                            int LA22_5 = input.LA(2);

                            if ( ((LA22_5>=57 && LA22_5<=58)||LA22_5==61||LA22_5==63) ) {
                                alt22=2;
                            }
                            else if ( ((LA22_5>=RULE_SIMPLE_ID && LA22_5<=RULE_ESCAPED_ID)||LA22_5==18||(LA22_5>=20 && LA22_5<=54)||LA22_5==59||LA22_5==72||(LA22_5>=74 && LA22_5<=75)||LA22_5==77||LA22_5==81) ) {
                                alt22=3;
                            }


                            }
                            break;

                        }

                        switch (alt22) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:944:2: ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:944:2: ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:945:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:945:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:946:3: lv_ownedAnnotations_9_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_ownedAnnotations_9_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_9_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:963:6: ( (lv_ownedContents_10_0= ruleModelElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:963:6: ( (lv_ownedContents_10_0= ruleModelElementCS ) )
                    	    // InternalOCLinEcore.g:964:1: (lv_ownedContents_10_0= ruleModelElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:964:1: (lv_ownedContents_10_0= ruleModelElementCS )
                    	    // InternalOCLinEcore.g:965:3: lv_ownedContents_10_0= ruleModelElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedContentsModelElementCSParserRuleCall_4_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_ownedContents_10_0=ruleModelElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedContents",
                    	              		lv_ownedContents_10_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ModelElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:982:6: ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:982:6: ( (lv_ownedReferences_11_0= ruleModelElementRefCS ) )
                    	    // InternalOCLinEcore.g:983:1: (lv_ownedReferences_11_0= ruleModelElementRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:983:1: (lv_ownedReferences_11_0= ruleModelElementRefCS )
                    	    // InternalOCLinEcore.g:984:3: lv_ownedReferences_11_0= ruleModelElementRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAnnotationCSAccess().getOwnedReferencesModelElementRefCSParserRuleCall_4_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_ownedReferences_11_0=ruleModelElementRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedReferences",
                    	              		lv_ownedReferences_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ModelElementRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);

                    otherlv_12=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotationCSAccess().getRightCurlyBracketKeyword_4_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1005:7: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getAnnotationCSAccess().getSemicolonKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationCS"


    // $ANTLR start "entryRuleAnnotationElementCS"
    // InternalOCLinEcore.g:1017:1: entryRuleAnnotationElementCS returns [EObject current=null] : iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF ;
    public final EObject entryRuleAnnotationElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationElementCS = null;


        try {
            // InternalOCLinEcore.g:1018:2: (iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF )
            // InternalOCLinEcore.g:1019:2: iv_ruleAnnotationElementCS= ruleAnnotationElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotationElementCS=ruleAnnotationElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationElementCS"


    // $ANTLR start "ruleAnnotationElementCS"
    // InternalOCLinEcore.g:1026:1: ruleAnnotationElementCS returns [EObject current=null] : (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS ) ;
    public final EObject ruleAnnotationElementCS() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotationCS_0 = null;

        EObject this_DocumentationCS_1 = null;

        EObject this_SysMLCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1029:28: ( (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS ) )
            // InternalOCLinEcore.g:1030:1: (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS )
            {
            // InternalOCLinEcore.g:1030:1: (this_AnnotationCS_0= ruleAnnotationCS | this_DocumentationCS_1= ruleDocumentationCS | this_SysMLCS_2= ruleSysMLCS )
            int alt24=3;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt24=1;
                }
                break;
            case RULE_ML_DOCUMENTATION:
            case 74:
                {
                alt24=2;
                }
                break;
            case 81:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalOCLinEcore.g:1031:2: this_AnnotationCS_0= ruleAnnotationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getAnnotationCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnnotationCS_0=ruleAnnotationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotationCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1044:2: this_DocumentationCS_1= ruleDocumentationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getDocumentationCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DocumentationCS_1=ruleDocumentationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DocumentationCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:1057:2: this_SysMLCS_2= ruleSysMLCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getAnnotationElementCSAccess().getSysMLCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SysMLCS_2=ruleSysMLCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SysMLCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationElementCS"


    // $ANTLR start "entryRuleAttributeCS"
    // InternalOCLinEcore.g:1076:1: entryRuleAttributeCS returns [EObject current=null] : iv_ruleAttributeCS= ruleAttributeCS EOF ;
    public final EObject entryRuleAttributeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttributeCS = null;


        try {
            // InternalOCLinEcore.g:1077:2: (iv_ruleAttributeCS= ruleAttributeCS EOF )
            // InternalOCLinEcore.g:1078:2: iv_ruleAttributeCS= ruleAttributeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeCS=ruleAttributeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeCS"


    // $ANTLR start "ruleAttributeCS"
    // InternalOCLinEcore.g:1085:1: ruleAttributeCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'attribute' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' ) ) ;
    public final EObject ruleAttributeCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token lv_qualifiers_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_default_10_0=null;
        Token otherlv_11=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedAnnotations_31_0 = null;

        EObject lv_ownedDefaultExpressions_35_0 = null;

        EObject lv_ownedDefaultExpressions_40_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1088:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'attribute' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' ) ) )
            // InternalOCLinEcore.g:1089:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'attribute' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' ) )
            {
            // InternalOCLinEcore.g:1089:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'attribute' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' ) )
            // InternalOCLinEcore.g:1089:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'attribute' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' )
            {
            // InternalOCLinEcore.g:1089:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ML_DOCUMENTATION) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalOCLinEcore.g:1090:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:1090:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:1091:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1107:3: ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )?
            int alt28=3;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==48) ) {
                alt28=1;
            }
            else if ( (LA28_0==27) ) {
                alt28=2;
            }
            switch (alt28) {
                case 1 :
                    // InternalOCLinEcore.g:1107:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    {
                    // InternalOCLinEcore.g:1107:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    // InternalOCLinEcore.g:1107:5: ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )?
                    {
                    // InternalOCLinEcore.g:1107:5: ( (lv_qualifiers_1_0= 'static' ) )
                    // InternalOCLinEcore.g:1108:1: (lv_qualifiers_1_0= 'static' )
                    {
                    // InternalOCLinEcore.g:1108:1: (lv_qualifiers_1_0= 'static' )
                    // InternalOCLinEcore.g:1109:3: lv_qualifiers_1_0= 'static'
                    {
                    lv_qualifiers_1_0=(Token)match(input,48,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_1_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_1_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "static");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:1122:2: ( (lv_qualifiers_2_0= 'definition' ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==27) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalOCLinEcore.g:1123:1: (lv_qualifiers_2_0= 'definition' )
                            {
                            // InternalOCLinEcore.g:1123:1: (lv_qualifiers_2_0= 'definition' )
                            // InternalOCLinEcore.g:1124:3: lv_qualifiers_2_0= 'definition'
                            {
                            lv_qualifiers_2_0=(Token)match(input,27,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_2_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_1_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1138:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    {
                    // InternalOCLinEcore.g:1138:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    // InternalOCLinEcore.g:1138:7: ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )?
                    {
                    // InternalOCLinEcore.g:1138:7: ( (lv_qualifiers_3_0= 'definition' ) )
                    // InternalOCLinEcore.g:1139:1: (lv_qualifiers_3_0= 'definition' )
                    {
                    // InternalOCLinEcore.g:1139:1: (lv_qualifiers_3_0= 'definition' )
                    // InternalOCLinEcore.g:1140:3: lv_qualifiers_3_0= 'definition'
                    {
                    lv_qualifiers_3_0=(Token)match(input,27,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_3_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_1_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "definition");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:1153:2: ( (lv_qualifiers_4_0= 'static' ) )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==48) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalOCLinEcore.g:1154:1: (lv_qualifiers_4_0= 'static' )
                            {
                            // InternalOCLinEcore.g:1154:1: (lv_qualifiers_4_0= 'static' )
                            // InternalOCLinEcore.g:1155:3: lv_qualifiers_4_0= 'static'
                            {
                            lv_qualifiers_4_0=(Token)match(input,48,FollowSets000.FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_1_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getAttributeCSAccess().getAttributeKeyword_2());

            }
            // InternalOCLinEcore.g:1172:1: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:1173:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:1173:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:1174:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:1190:2: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==57) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalOCLinEcore.g:1190:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getAttributeCSAccess().getColonKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:1194:1: ( (lv_ownedType_8_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:1195:1: (lv_ownedType_8_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:1195:1: (lv_ownedType_8_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:1196:3: lv_ownedType_8_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_ownedType_8_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1212:4: (otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==63) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalOCLinEcore.g:1212:6: otherlv_9= '=' ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_9=(Token)match(input,63,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getAttributeCSAccess().getEqualsSignKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:1216:1: ( (lv_default_10_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:1217:1: (lv_default_10_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:1217:1: (lv_default_10_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:1218:3: lv_default_10_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_10_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_10_0, grammarAccess.getAttributeCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_10_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1234:4: (otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==61) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==29||LA34_1==32||LA34_1==39||LA34_1==45||(LA34_1>=50 && LA34_1<=53)||(LA34_1>=64 && LA34_1<=71)) ) {
                    alt34=1;
                }
            }
            switch (alt34) {
                case 1 :
                    // InternalOCLinEcore.g:1234:6: otherlv_11= '{' ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}'
                    {
                    otherlv_11=(Token)match(input,61,FollowSets000.FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:1238:1: ( ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )? )+
                    int cnt33=0;
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==29||LA33_0==32||LA33_0==39||LA33_0==45||(LA33_0>=50 && LA33_0<=53)||(LA33_0>=64 && LA33_0<=71)) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1238:2: ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) ) (otherlv_28= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:1238:2: ( ( (lv_qualifiers_12_0= 'derived' ) ) | ( (lv_qualifiers_13_0= '!derived' ) ) | ( (lv_qualifiers_14_0= 'id' ) ) | ( (lv_qualifiers_15_0= '!id' ) ) | ( (lv_qualifiers_16_0= 'ordered' ) ) | ( (lv_qualifiers_17_0= '!ordered' ) ) | ( (lv_qualifiers_18_0= 'readonly' ) ) | ( (lv_qualifiers_19_0= '!readonly' ) ) | ( (lv_qualifiers_20_0= 'transient' ) ) | ( (lv_qualifiers_21_0= '!transient' ) ) | ( (lv_qualifiers_22_0= 'unique' ) ) | ( (lv_qualifiers_23_0= '!unique' ) ) | ( (lv_qualifiers_24_0= 'unsettable' ) ) | ( (lv_qualifiers_25_0= '!unsettable' ) ) | ( (lv_qualifiers_26_0= 'volatile' ) ) | ( (lv_qualifiers_27_0= '!volatile' ) ) )
                    	    int alt31=16;
                    	    switch ( input.LA(1) ) {
                    	    case 29:
                    	        {
                    	        alt31=1;
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        alt31=2;
                    	        }
                    	        break;
                    	    case 32:
                    	        {
                    	        alt31=3;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt31=4;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt31=5;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt31=6;
                    	        }
                    	        break;
                    	    case 45:
                    	        {
                    	        alt31=7;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt31=8;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt31=9;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt31=10;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt31=11;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt31=12;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt31=13;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt31=14;
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        alt31=15;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt31=16;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 31, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt31) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1238:3: ( (lv_qualifiers_12_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1238:3: ( (lv_qualifiers_12_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:1239:1: (lv_qualifiers_12_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:1239:1: (lv_qualifiers_12_0= 'derived' )
                    	            // InternalOCLinEcore.g:1240:3: lv_qualifiers_12_0= 'derived'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,29,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_12_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_6_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:1254:6: ( (lv_qualifiers_13_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1254:6: ( (lv_qualifiers_13_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:1255:1: (lv_qualifiers_13_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:1255:1: (lv_qualifiers_13_0= '!derived' )
                    	            // InternalOCLinEcore.g:1256:3: lv_qualifiers_13_0= '!derived'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,64,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_6_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:1270:6: ( (lv_qualifiers_14_0= 'id' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1270:6: ( (lv_qualifiers_14_0= 'id' ) )
                    	            // InternalOCLinEcore.g:1271:1: (lv_qualifiers_14_0= 'id' )
                    	            {
                    	            // InternalOCLinEcore.g:1271:1: (lv_qualifiers_14_0= 'id' )
                    	            // InternalOCLinEcore.g:1272:3: lv_qualifiers_14_0= 'id'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,32,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_6_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:1286:6: ( (lv_qualifiers_15_0= '!id' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1286:6: ( (lv_qualifiers_15_0= '!id' ) )
                    	            // InternalOCLinEcore.g:1287:1: (lv_qualifiers_15_0= '!id' )
                    	            {
                    	            // InternalOCLinEcore.g:1287:1: (lv_qualifiers_15_0= '!id' )
                    	            // InternalOCLinEcore.g:1288:3: lv_qualifiers_15_0= '!id'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,65,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_6_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "!id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:1302:6: ( (lv_qualifiers_16_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1302:6: ( (lv_qualifiers_16_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:1303:1: (lv_qualifiers_16_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:1303:1: (lv_qualifiers_16_0= 'ordered' )
                    	            // InternalOCLinEcore.g:1304:3: lv_qualifiers_16_0= 'ordered'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,39,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_6_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:1318:6: ( (lv_qualifiers_17_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1318:6: ( (lv_qualifiers_17_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:1319:1: (lv_qualifiers_17_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:1319:1: (lv_qualifiers_17_0= '!ordered' )
                    	            // InternalOCLinEcore.g:1320:3: lv_qualifiers_17_0= '!ordered'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,66,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_6_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:1334:6: ( (lv_qualifiers_18_0= 'readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1334:6: ( (lv_qualifiers_18_0= 'readonly' ) )
                    	            // InternalOCLinEcore.g:1335:1: (lv_qualifiers_18_0= 'readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:1335:1: (lv_qualifiers_18_0= 'readonly' )
                    	            // InternalOCLinEcore.g:1336:3: lv_qualifiers_18_0= 'readonly'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,45,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_6_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:1350:6: ( (lv_qualifiers_19_0= '!readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1350:6: ( (lv_qualifiers_19_0= '!readonly' ) )
                    	            // InternalOCLinEcore.g:1351:1: (lv_qualifiers_19_0= '!readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:1351:1: (lv_qualifiers_19_0= '!readonly' )
                    	            // InternalOCLinEcore.g:1352:3: lv_qualifiers_19_0= '!readonly'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,67,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_6_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalOCLinEcore.g:1366:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1366:6: ( (lv_qualifiers_20_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:1367:1: (lv_qualifiers_20_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:1367:1: (lv_qualifiers_20_0= 'transient' )
                    	            // InternalOCLinEcore.g:1368:3: lv_qualifiers_20_0= 'transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,50,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_6_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalOCLinEcore.g:1382:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1382:6: ( (lv_qualifiers_21_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:1383:1: (lv_qualifiers_21_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:1383:1: (lv_qualifiers_21_0= '!transient' )
                    	            // InternalOCLinEcore.g:1384:3: lv_qualifiers_21_0= '!transient'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,68,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_6_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalOCLinEcore.g:1398:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1398:6: ( (lv_qualifiers_22_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:1399:1: (lv_qualifiers_22_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:1399:1: (lv_qualifiers_22_0= 'unique' )
                    	            // InternalOCLinEcore.g:1400:3: lv_qualifiers_22_0= 'unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,51,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_6_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalOCLinEcore.g:1414:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1414:6: ( (lv_qualifiers_23_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:1415:1: (lv_qualifiers_23_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:1415:1: (lv_qualifiers_23_0= '!unique' )
                    	            // InternalOCLinEcore.g:1416:3: lv_qualifiers_23_0= '!unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,69,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_6_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalOCLinEcore.g:1430:6: ( (lv_qualifiers_24_0= 'unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1430:6: ( (lv_qualifiers_24_0= 'unsettable' ) )
                    	            // InternalOCLinEcore.g:1431:1: (lv_qualifiers_24_0= 'unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:1431:1: (lv_qualifiers_24_0= 'unsettable' )
                    	            // InternalOCLinEcore.g:1432:3: lv_qualifiers_24_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,52,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_6_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalOCLinEcore.g:1446:6: ( (lv_qualifiers_25_0= '!unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1446:6: ( (lv_qualifiers_25_0= '!unsettable' ) )
                    	            // InternalOCLinEcore.g:1447:1: (lv_qualifiers_25_0= '!unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:1447:1: (lv_qualifiers_25_0= '!unsettable' )
                    	            // InternalOCLinEcore.g:1448:3: lv_qualifiers_25_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,70,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_6_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalOCLinEcore.g:1462:6: ( (lv_qualifiers_26_0= 'volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1462:6: ( (lv_qualifiers_26_0= 'volatile' ) )
                    	            // InternalOCLinEcore.g:1463:1: (lv_qualifiers_26_0= 'volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:1463:1: (lv_qualifiers_26_0= 'volatile' )
                    	            // InternalOCLinEcore.g:1464:3: lv_qualifiers_26_0= 'volatile'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,53,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_6_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalOCLinEcore.g:1478:6: ( (lv_qualifiers_27_0= '!volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:1478:6: ( (lv_qualifiers_27_0= '!volatile' ) )
                    	            // InternalOCLinEcore.g:1479:1: (lv_qualifiers_27_0= '!volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:1479:1: (lv_qualifiers_27_0= '!volatile' )
                    	            // InternalOCLinEcore.g:1480:3: lv_qualifiers_27_0= '!volatile'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,71,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_6_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:1493:3: (otherlv_28= ',' )?
                    	    int alt32=2;
                    	    int LA32_0 = input.LA(1);

                    	    if ( (LA32_0==60) ) {
                    	        alt32=1;
                    	    }
                    	    switch (alt32) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1493:5: otherlv_28= ','
                    	            {
                    	            otherlv_28=(Token)match(input,60,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_28, grammarAccess.getAttributeCSAccess().getCommaKeyword_6_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt33 >= 1 ) break loop33;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(33, input);
                                throw eee;
                        }
                        cnt33++;
                    } while (true);

                    otherlv_29=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:1501:3: ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' ) | otherlv_43= ';' )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==61) ) {
                alt40=1;
            }
            else if ( (LA40_0==58) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalOCLinEcore.g:1501:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' )
                    {
                    // InternalOCLinEcore.g:1501:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}' )
                    // InternalOCLinEcore.g:1501:6: otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )* otherlv_42= '}'
                    {
                    otherlv_30=(Token)match(input,61,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalOCLinEcore.g:1505:1: ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' ) | (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' ) )*
                    loop39:
                    do {
                        int alt39=4;
                        switch ( input.LA(1) ) {
                        case RULE_ML_DOCUMENTATION:
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt39=1;
                            }
                            break;
                        case 34:
                            {
                            alt39=2;
                            }
                            break;
                        case 28:
                            {
                            alt39=3;
                            }
                            break;

                        }

                        switch (alt39) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1505:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1505:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:1506:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:1506:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:1507:3: lv_ownedAnnotations_31_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_ownedAnnotations_31_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_31_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:1524:6: (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:1524:6: (otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';' )
                    	    // InternalOCLinEcore.g:1524:8: otherlv_32= 'initial' ( ruleUnrestrictedName )? otherlv_34= ':' ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )? otherlv_36= ';'
                    	    {
                    	    otherlv_32=(Token)match(input,34,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getAttributeCSAccess().getInitialKeyword_7_0_1_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:1528:1: ( ruleUnrestrictedName )?
                    	    int alt35=2;
                    	    int LA35_0 = input.LA(1);

                    	    if ( ((LA35_0>=RULE_SIMPLE_ID && LA35_0<=RULE_ESCAPED_ID)||LA35_0==18||(LA35_0>=20 && LA35_0<=54)||LA35_0==59||LA35_0==72||(LA35_0>=74 && LA35_0<=75)||LA35_0==77||LA35_0==81) ) {
                    	        alt35=1;
                    	    }
                    	    switch (alt35) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1529:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_18);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_34=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_34, grammarAccess.getAttributeCSAccess().getColonKeyword_7_0_1_1_2());

                    	    }
                    	    // InternalOCLinEcore.g:1543:1: ( (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS ) )?
                    	    int alt36=2;
                    	    int LA36_0 = input.LA(1);

                    	    if ( ((LA36_0>=RULE_INT && LA36_0<=RULE_SINGLE_QUOTED_STRING)||LA36_0==RULE_UNQUOTED_STRING||(LA36_0>=RULE_SIMPLE_ID && LA36_0<=RULE_ESCAPED_ID)||(LA36_0>=18 && LA36_0<=55)||LA36_0==59||LA36_0==72||(LA36_0>=74 && LA36_0<=75)||LA36_0==77||LA36_0==81||(LA36_0>=84 && LA36_0<=86)||(LA36_0>=104 && LA36_0<=105)||(LA36_0>=107 && LA36_0<=119)||LA36_0==122||(LA36_0>=124 && LA36_0<=127)||LA36_0==134||(LA36_0>=139 && LA36_0<=140)) ) {
                    	        alt36=1;
                    	    }
                    	    switch (alt36) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1544:1: (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:1544:1: (lv_ownedDefaultExpressions_35_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:1545:3: lv_ownedDefaultExpressions_35_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_15);
                    	            lv_ownedDefaultExpressions_35_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_35_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_36=(Token)match(input,58,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_36, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_7_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:1566:6: (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:1566:6: (otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';' )
                    	    // InternalOCLinEcore.g:1566:8: otherlv_37= 'derivation' ( ruleUnrestrictedName )? otherlv_39= ':' ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )? otherlv_41= ';'
                    	    {
                    	    otherlv_37=(Token)match(input,28,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getAttributeCSAccess().getDerivationKeyword_7_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:1570:1: ( ruleUnrestrictedName )?
                    	    int alt37=2;
                    	    int LA37_0 = input.LA(1);

                    	    if ( ((LA37_0>=RULE_SIMPLE_ID && LA37_0<=RULE_ESCAPED_ID)||LA37_0==18||(LA37_0>=20 && LA37_0<=54)||LA37_0==59||LA37_0==72||(LA37_0>=74 && LA37_0<=75)||LA37_0==77||LA37_0==81) ) {
                    	        alt37=1;
                    	    }
                    	    switch (alt37) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1571:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_18);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_39=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getAttributeCSAccess().getColonKeyword_7_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:1585:1: ( (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS ) )?
                    	    int alt38=2;
                    	    int LA38_0 = input.LA(1);

                    	    if ( ((LA38_0>=RULE_INT && LA38_0<=RULE_SINGLE_QUOTED_STRING)||LA38_0==RULE_UNQUOTED_STRING||(LA38_0>=RULE_SIMPLE_ID && LA38_0<=RULE_ESCAPED_ID)||(LA38_0>=18 && LA38_0<=55)||LA38_0==59||LA38_0==72||(LA38_0>=74 && LA38_0<=75)||LA38_0==77||LA38_0==81||(LA38_0>=84 && LA38_0<=86)||(LA38_0>=104 && LA38_0<=105)||(LA38_0>=107 && LA38_0<=119)||LA38_0==122||(LA38_0>=124 && LA38_0<=127)||LA38_0==134||(LA38_0>=139 && LA38_0<=140)) ) {
                    	        alt38=1;
                    	    }
                    	    switch (alt38) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:1586:1: (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:1586:1: (lv_ownedDefaultExpressions_40_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:1587:3: lv_ownedDefaultExpressions_40_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_15);
                    	            lv_ownedDefaultExpressions_40_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_40_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_41=(Token)match(input,58,FollowSets000.FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_41, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_7_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    otherlv_42=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_42, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1612:7: otherlv_43= ';'
                    {
                    otherlv_43=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_43, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttributeCS"


    // $ANTLR start "entryRuleClassCS"
    // InternalOCLinEcore.g:1624:1: entryRuleClassCS returns [EObject current=null] : iv_ruleClassCS= ruleClassCS EOF ;
    public final EObject entryRuleClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassCS = null;


        try {
            // InternalOCLinEcore.g:1625:2: (iv_ruleClassCS= ruleClassCS EOF )
            // InternalOCLinEcore.g:1626:2: iv_ruleClassCS= ruleClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassCS=ruleClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassCS"


    // $ANTLR start "ruleClassCS"
    // InternalOCLinEcore.g:1633:1: ruleClassCS returns [EObject current=null] : (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) ;
    public final EObject ruleClassCS() throws RecognitionException {
        EObject current = null;

        EObject this_StructuredClassCS_0 = null;

        EObject this_DataTypeCS_1 = null;

        EObject this_EnumerationCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1636:28: ( (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) )
            // InternalOCLinEcore.g:1637:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            {
            // InternalOCLinEcore.g:1637:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            int alt41=3;
            switch ( input.LA(1) ) {
            case RULE_ML_DOCUMENTATION:
                {
                switch ( input.LA(2) ) {
                case 20:
                case 24:
                    {
                    alt41=1;
                    }
                    break;
                case 30:
                    {
                    alt41=3;
                    }
                    break;
                case 26:
                case 43:
                    {
                    alt41=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;
                }

                }
                break;
            case 20:
            case 24:
                {
                alt41=1;
                }
                break;
            case 26:
            case 43:
                {
                alt41=2;
                }
                break;
            case 30:
                {
                alt41=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalOCLinEcore.g:1638:2: this_StructuredClassCS_0= ruleStructuredClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getStructuredClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuredClassCS_0=ruleStructuredClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuredClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1651:2: this_DataTypeCS_1= ruleDataTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getDataTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataTypeCS_1=ruleDataTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DataTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:1664:2: this_EnumerationCS_2= ruleEnumerationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getEnumerationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationCS_2=ruleEnumerationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassCS"


    // $ANTLR start "entryRuleDataTypeCS"
    // InternalOCLinEcore.g:1683:1: entryRuleDataTypeCS returns [EObject current=null] : iv_ruleDataTypeCS= ruleDataTypeCS EOF ;
    public final EObject entryRuleDataTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeCS = null;


        try {
            // InternalOCLinEcore.g:1684:2: (iv_ruleDataTypeCS= ruleDataTypeCS EOF )
            // InternalOCLinEcore.g:1685:2: iv_ruleDataTypeCS= ruleDataTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataTypeCS=ruleDataTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeCS"


    // $ANTLR start "ruleDataTypeCS"
    // InternalOCLinEcore.g:1692:1: ruleDataTypeCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isPrimitive_1_0= 'primitive' ) )? otherlv_2= 'datatype' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )? ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) ) ;
    public final EObject ruleDataTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPrimitive_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token lv_instanceClassName_6_0=null;
        Token otherlv_7=null;
        Token lv_isSerializable_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedSignature_4_0 = null;

        EObject lv_ownedAnnotations_12_0 = null;

        EObject lv_ownedConstraints_13_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1695:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isPrimitive_1_0= 'primitive' ) )? otherlv_2= 'datatype' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )? ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) ) )
            // InternalOCLinEcore.g:1696:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isPrimitive_1_0= 'primitive' ) )? otherlv_2= 'datatype' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )? ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) )
            {
            // InternalOCLinEcore.g:1696:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isPrimitive_1_0= 'primitive' ) )? otherlv_2= 'datatype' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )? ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) )
            // InternalOCLinEcore.g:1696:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isPrimitive_1_0= 'primitive' ) )? otherlv_2= 'datatype' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )? ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' )
            {
            // InternalOCLinEcore.g:1696:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ML_DOCUMENTATION) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalOCLinEcore.g:1697:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:1697:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:1698:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_38);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1714:3: ( (lv_isPrimitive_1_0= 'primitive' ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==43) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalOCLinEcore.g:1715:1: (lv_isPrimitive_1_0= 'primitive' )
                    {
                    // InternalOCLinEcore.g:1715:1: (lv_isPrimitive_1_0= 'primitive' )
                    // InternalOCLinEcore.g:1716:3: lv_isPrimitive_1_0= 'primitive'
                    {
                    lv_isPrimitive_1_0=(Token)match(input,43,FollowSets000.FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPrimitive_1_0, grammarAccess.getDataTypeCSAccess().getIsPrimitivePrimitiveKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPrimitive", true, "primitive");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDataTypeCSAccess().getDatatypeKeyword_2());

            }
            // InternalOCLinEcore.g:1733:1: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:1734:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:1734:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:1735:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:1751:2: ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==55||LA44_0==82) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalOCLinEcore.g:1752:1: (lv_ownedSignature_4_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:1752:1: (lv_ownedSignature_4_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:1753:3: lv_ownedSignature_4_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_4_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_ownedSignature_4_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1769:3: (otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==57) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalOCLinEcore.g:1769:5: otherlv_5= ':' ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDataTypeCSAccess().getColonKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:1773:1: ( (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:1774:1: (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:1774:1: (lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:1775:3: lv_instanceClassName_6_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_6_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_6_0, grammarAccess.getDataTypeCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:1791:4: (otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}' )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==61) ) {
                int LA47_1 = input.LA(2);

                if ( ((LA47_1>=72 && LA47_1<=73)) ) {
                    alt47=1;
                }
                else if ( (LA47_1==62) ) {
                    int LA47_4 = input.LA(3);

                    if ( (LA47_4==58||LA47_4==61) ) {
                        alt47=1;
                    }
                }
            }
            switch (alt47) {
                case 1 :
                    // InternalOCLinEcore.g:1791:6: otherlv_7= '{' ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )? otherlv_10= '}'
                    {
                    otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:1795:1: ( ( (lv_isSerializable_8_0= 'serializable' ) ) | otherlv_9= '!serializable' )?
                    int alt46=3;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==72) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==73) ) {
                        alt46=2;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalOCLinEcore.g:1795:2: ( (lv_isSerializable_8_0= 'serializable' ) )
                            {
                            // InternalOCLinEcore.g:1795:2: ( (lv_isSerializable_8_0= 'serializable' ) )
                            // InternalOCLinEcore.g:1796:1: (lv_isSerializable_8_0= 'serializable' )
                            {
                            // InternalOCLinEcore.g:1796:1: (lv_isSerializable_8_0= 'serializable' )
                            // InternalOCLinEcore.g:1797:3: lv_isSerializable_8_0= 'serializable'
                            {
                            lv_isSerializable_8_0=(Token)match(input,72,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_8_0, grammarAccess.getDataTypeCSAccess().getIsSerializableSerializableKeyword_6_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:1811:7: otherlv_9= '!serializable'
                            {
                            otherlv_9=(Token)match(input,73,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getDataTypeCSAccess().getSerializableKeyword_6_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_10=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:1819:3: ( (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==61) ) {
                alt49=1;
            }
            else if ( (LA49_0==58) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalOCLinEcore.g:1819:4: (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' )
                    {
                    // InternalOCLinEcore.g:1819:4: (otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' )
                    // InternalOCLinEcore.g:1819:6: otherlv_11= '{' ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}'
                    {
                    otherlv_11=(Token)match(input,61,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalOCLinEcore.g:1823:1: ( ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )*
                    loop48:
                    do {
                        int alt48=3;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==RULE_ML_DOCUMENTATION||LA48_0==59||LA48_0==74||LA48_0==81) ) {
                            alt48=1;
                        }
                        else if ( (LA48_0==23||LA48_0==54) ) {
                            alt48=2;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:1823:2: ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1823:2: ( (lv_ownedAnnotations_12_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:1824:1: (lv_ownedAnnotations_12_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:1824:1: (lv_ownedAnnotations_12_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:1825:3: lv_ownedAnnotations_12_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedAnnotations_12_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_12_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:1842:6: ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:1842:6: ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:1843:1: (lv_ownedConstraints_13_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:1843:1: (lv_ownedConstraints_13_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:1844:3: lv_ownedConstraints_13_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_7_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_44);
                    	    lv_ownedConstraints_13_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_13_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1865:7: otherlv_15= ';'
                    {
                    otherlv_15=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getDataTypeCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeCS"


    // $ANTLR start "entryRuleDetailCS"
    // InternalOCLinEcore.g:1877:1: entryRuleDetailCS returns [EObject current=null] : iv_ruleDetailCS= ruleDetailCS EOF ;
    public final EObject entryRuleDetailCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDetailCS = null;


        try {
            // InternalOCLinEcore.g:1878:2: (iv_ruleDetailCS= ruleDetailCS EOF )
            // InternalOCLinEcore.g:1879:2: iv_ruleDetailCS= ruleDetailCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDetailCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDetailCS=ruleDetailCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDetailCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDetailCS"


    // $ANTLR start "ruleDetailCS"
    // InternalOCLinEcore.g:1886:1: ruleDetailCS returns [EObject current=null] : ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* ) ;
    public final EObject ruleDetailCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token otherlv_1=null;
        Token lv_values_2_1=null;
        Token lv_values_2_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1889:28: ( ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* ) )
            // InternalOCLinEcore.g:1890:1: ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* )
            {
            // InternalOCLinEcore.g:1890:1: ( ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )* )
            // InternalOCLinEcore.g:1890:2: ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) ) otherlv_1= '=' ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )*
            {
            // InternalOCLinEcore.g:1890:2: ( ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) ) )
            // InternalOCLinEcore.g:1891:1: ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) )
            {
            // InternalOCLinEcore.g:1891:1: ( (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING ) )
            // InternalOCLinEcore.g:1892:1: (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING )
            {
            // InternalOCLinEcore.g:1892:1: (lv_name_0_1= ruleUnrestrictedName | lv_name_0_2= RULE_SINGLE_QUOTED_STRING )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=RULE_SIMPLE_ID && LA50_0<=RULE_ESCAPED_ID)||LA50_0==18||(LA50_0>=20 && LA50_0<=54)||LA50_0==59||LA50_0==72||(LA50_0>=74 && LA50_0<=75)||LA50_0==77||LA50_0==81) ) {
                alt50=1;
            }
            else if ( (LA50_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalOCLinEcore.g:1893:3: lv_name_0_1= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDetailCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_name_0_1=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDetailCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_0_1,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:1908:8: lv_name_0_2= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_0_2, grammarAccess.getDetailCSAccess().getNameSINGLE_QUOTED_STRINGTerminalRuleCall_0_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDetailCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"name",
                              		lv_name_0_2,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,63,FollowSets000.FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDetailCSAccess().getEqualsSignKeyword_1());

            }
            // InternalOCLinEcore.g:1930:1: ( ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( ((LA52_0>=RULE_SINGLE_QUOTED_STRING && LA52_0<=RULE_ML_SINGLE_QUOTED_STRING)) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalOCLinEcore.g:1931:1: ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) )
            	    {
            	    // InternalOCLinEcore.g:1931:1: ( (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING ) )
            	    // InternalOCLinEcore.g:1932:1: (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING )
            	    {
            	    // InternalOCLinEcore.g:1932:1: (lv_values_2_1= RULE_SINGLE_QUOTED_STRING | lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING )
            	    int alt51=2;
            	    int LA51_0 = input.LA(1);

            	    if ( (LA51_0==RULE_SINGLE_QUOTED_STRING) ) {
            	        alt51=1;
            	    }
            	    else if ( (LA51_0==RULE_ML_SINGLE_QUOTED_STRING) ) {
            	        alt51=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 51, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt51) {
            	        case 1 :
            	            // InternalOCLinEcore.g:1933:3: lv_values_2_1= RULE_SINGLE_QUOTED_STRING
            	            {
            	            lv_values_2_1=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_46); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_values_2_1, grammarAccess.getDetailCSAccess().getValuesSINGLE_QUOTED_STRINGTerminalRuleCall_2_0_0());

            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDetailCSRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current,
            	                     			"values",
            	                      		lv_values_2_1,
            	                      		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalOCLinEcore.g:1948:8: lv_values_2_2= RULE_ML_SINGLE_QUOTED_STRING
            	            {
            	            lv_values_2_2=(Token)match(input,RULE_ML_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_46); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_values_2_2, grammarAccess.getDetailCSAccess().getValuesML_SINGLE_QUOTED_STRINGTerminalRuleCall_2_0_1());

            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDetailCSRule());
            	              	        }
            	                     		addWithLastConsumed(
            	                     			current,
            	                     			"values",
            	                      		lv_values_2_2,
            	                      		"org.eclipse.ocl.xtext.base.Base.ML_SINGLE_QUOTED_STRING");

            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDetailCS"


    // $ANTLR start "entryRuleDocumentationCS"
    // InternalOCLinEcore.g:1974:1: entryRuleDocumentationCS returns [EObject current=null] : iv_ruleDocumentationCS= ruleDocumentationCS EOF ;
    public final EObject entryRuleDocumentationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentationCS = null;


        try {
            // InternalOCLinEcore.g:1975:2: (iv_ruleDocumentationCS= ruleDocumentationCS EOF )
            // InternalOCLinEcore.g:1976:2: iv_ruleDocumentationCS= ruleDocumentationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDocumentationCS=ruleDocumentationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentationCS"


    // $ANTLR start "ruleDocumentationCS"
    // InternalOCLinEcore.g:1983:1: ruleDocumentationCS returns [EObject current=null] : ( () ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'documentation' ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )? otherlv_9= ';' ) ;
    public final EObject ruleDocumentationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_value_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        EObject lv_ownedAnnotations_1_0 = null;

        EObject lv_ownedDetails_5_0 = null;

        EObject lv_ownedDetails_7_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:1986:28: ( ( () ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'documentation' ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )? otherlv_9= ';' ) )
            // InternalOCLinEcore.g:1987:1: ( () ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'documentation' ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )? otherlv_9= ';' )
            {
            // InternalOCLinEcore.g:1987:1: ( () ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'documentation' ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )? otherlv_9= ';' )
            // InternalOCLinEcore.g:1987:2: () ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )? otherlv_2= 'documentation' ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )? (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )? otherlv_9= ';'
            {
            // InternalOCLinEcore.g:1987:2: ()
            // InternalOCLinEcore.g:1988:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDocumentationCSAccess().getDocumentationCSAction_0(),
                          current);

            }

            }

            // InternalOCLinEcore.g:1996:2: ( (lv_ownedAnnotations_1_0= ruleCommentCS ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_ML_DOCUMENTATION) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalOCLinEcore.g:1997:1: (lv_ownedAnnotations_1_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:1997:1: (lv_ownedAnnotations_1_0= ruleCommentCS )
                    // InternalOCLinEcore.g:1998:3: lv_ownedAnnotations_1_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDocumentationCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_ownedAnnotations_1_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDocumentationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,74,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDocumentationCSAccess().getDocumentationKeyword_2());

            }
            // InternalOCLinEcore.g:2018:1: ( (lv_value_3_0= RULE_SINGLE_QUOTED_STRING ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalOCLinEcore.g:2019:1: (lv_value_3_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:2019:1: (lv_value_3_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:2020:3: lv_value_3_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_value_3_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_3_0, grammarAccess.getDocumentationCSAccess().getValueSINGLE_QUOTED_STRINGTerminalRuleCall_3_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocumentationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"value",
                              		lv_value_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2036:3: (otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==55) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalOCLinEcore.g:2036:5: otherlv_4= '(' ( (lv_ownedDetails_5_0= ruleDetailCS ) ) (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )* otherlv_8= ')'
                    {
                    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDocumentationCSAccess().getLeftParenthesisKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:2040:1: ( (lv_ownedDetails_5_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:2041:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:2041:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    // InternalOCLinEcore.g:2042:3: lv_ownedDetails_5_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDocumentationCSAccess().getOwnedDetailsDetailCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_ownedDetails_5_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDocumentationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_5_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2058:2: (otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==60) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2058:4: otherlv_6= ',' ( (lv_ownedDetails_7_0= ruleDetailCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,60,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getDocumentationCSAccess().getCommaKeyword_4_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:2062:1: ( (lv_ownedDetails_7_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:2063:1: (lv_ownedDetails_7_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:2063:1: (lv_ownedDetails_7_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:2064:3: lv_ownedDetails_7_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDocumentationCSAccess().getOwnedDetailsDetailCSParserRuleCall_4_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    lv_ownedDetails_7_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDocumentationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_7_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,56,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getDocumentationCSAccess().getRightParenthesisKeyword_4_3());

                    }

                    }
                    break;

            }

            otherlv_9=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDocumentationCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentationCS"


    // $ANTLR start "entryRuleEnumerationCS"
    // InternalOCLinEcore.g:2096:1: entryRuleEnumerationCS returns [EObject current=null] : iv_ruleEnumerationCS= ruleEnumerationCS EOF ;
    public final EObject entryRuleEnumerationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationCS = null;


        try {
            // InternalOCLinEcore.g:2097:2: (iv_ruleEnumerationCS= ruleEnumerationCS EOF )
            // InternalOCLinEcore.g:2098:2: iv_ruleEnumerationCS= ruleEnumerationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationCS=ruleEnumerationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationCS"


    // $ANTLR start "ruleEnumerationCS"
    // InternalOCLinEcore.g:2105:1: ruleEnumerationCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'enum' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) ) ;
    public final EObject ruleEnumerationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_instanceClassName_5_0=null;
        Token otherlv_6=null;
        Token lv_isSerializable_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedAnnotations_11_0 = null;

        EObject lv_ownedLiterals_12_0 = null;

        EObject lv_ownedConstraints_13_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2108:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'enum' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) ) )
            // InternalOCLinEcore.g:2109:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'enum' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) )
            {
            // InternalOCLinEcore.g:2109:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'enum' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' ) )
            // InternalOCLinEcore.g:2109:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'enum' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' )
            {
            // InternalOCLinEcore.g:2109:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_ML_DOCUMENTATION) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalOCLinEcore.g:2110:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:2110:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:2111:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,30,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumerationCSAccess().getEnumKeyword_1());

            }
            // InternalOCLinEcore.g:2131:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:2132:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:2132:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:2133:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:2149:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==55||LA58_0==82) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalOCLinEcore.g:2150:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:2150:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:2151:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2167:3: (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==57) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalOCLinEcore.g:2167:5: otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEnumerationCSAccess().getColonKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:2171:1: ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:2172:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:2172:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:2173:3: lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_5_0, grammarAccess.getEnumerationCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2189:4: (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==61) ) {
                int LA61_1 = input.LA(2);

                if ( ((LA61_1>=72 && LA61_1<=73)) ) {
                    alt61=1;
                }
                else if ( (LA61_1==62) ) {
                    int LA61_4 = input.LA(3);

                    if ( (LA61_4==58||LA61_4==61) ) {
                        alt61=1;
                    }
                }
            }
            switch (alt61) {
                case 1 :
                    // InternalOCLinEcore.g:2189:6: otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}'
                    {
                    otherlv_6=(Token)match(input,61,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:2193:1: ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )?
                    int alt60=3;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==72) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==73) ) {
                        alt60=2;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalOCLinEcore.g:2193:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            {
                            // InternalOCLinEcore.g:2193:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            // InternalOCLinEcore.g:2194:1: (lv_isSerializable_7_0= 'serializable' )
                            {
                            // InternalOCLinEcore.g:2194:1: (lv_isSerializable_7_0= 'serializable' )
                            // InternalOCLinEcore.g:2195:3: lv_isSerializable_7_0= 'serializable'
                            {
                            lv_isSerializable_7_0=(Token)match(input,72,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_7_0, grammarAccess.getEnumerationCSAccess().getIsSerializableSerializableKeyword_5_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:2209:7: otherlv_8= '!serializable'
                            {
                            otherlv_8=(Token)match(input,73,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getEnumerationCSAccess().getSerializableKeyword_5_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2217:3: ( (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' ) | otherlv_15= ';' )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==61) ) {
                alt63=1;
            }
            else if ( (LA63_0==58) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalOCLinEcore.g:2217:4: (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' )
                    {
                    // InternalOCLinEcore.g:2217:4: (otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}' )
                    // InternalOCLinEcore.g:2217:6: otherlv_10= '{' ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )* otherlv_14= '}'
                    {
                    otherlv_10=(Token)match(input,61,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalOCLinEcore.g:2221:1: ( ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) ) | ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) ) | ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) ) )*
                    loop62:
                    do {
                        int alt62=4;
                        switch ( input.LA(1) ) {
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt62=1;
                            }
                            break;
                        case RULE_ML_DOCUMENTATION:
                            {
                            int LA62_3 = input.LA(2);

                            if ( ((LA62_3>=RULE_SIMPLE_ID && LA62_3<=RULE_ESCAPED_ID)||LA62_3==18||(LA62_3>=20 && LA62_3<=53)||LA62_3==75) ) {
                                alt62=2;
                            }
                            else if ( (LA62_3==74) ) {
                                alt62=1;
                            }


                            }
                            break;
                        case RULE_SIMPLE_ID:
                        case RULE_ESCAPED_ID:
                        case 18:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 75:
                            {
                            alt62=2;
                            }
                            break;
                        case 23:
                            {
                            int LA62_5 = input.LA(2);

                            if ( ((LA62_5>=57 && LA62_5<=58)||LA62_5==61||LA62_5==63) ) {
                                alt62=2;
                            }
                            else if ( (LA62_5==54) ) {
                                alt62=3;
                            }


                            }
                            break;
                        case 54:
                            {
                            alt62=3;
                            }
                            break;

                        }

                        switch (alt62) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2221:2: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2221:2: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:2222:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:2222:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:2223:3: lv_ownedAnnotations_11_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_6_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedAnnotations_11_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:2240:6: ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2240:6: ( (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS ) )
                    	    // InternalOCLinEcore.g:2241:1: (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS )
                    	    {
                    	    // InternalOCLinEcore.g:2241:1: (lv_ownedLiterals_12_0= ruleEnumerationLiteralCS )
                    	    // InternalOCLinEcore.g:2242:3: lv_ownedLiterals_12_0= ruleEnumerationLiteralCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsEnumerationLiteralCSParserRuleCall_6_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedLiterals_12_0=ruleEnumerationLiteralCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedLiterals",
                    	              		lv_ownedLiterals_12_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.EnumerationLiteralCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:2259:6: ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:2259:6: ( (lv_ownedConstraints_13_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:2260:1: (lv_ownedConstraints_13_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:2260:1: (lv_ownedConstraints_13_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:2261:3: lv_ownedConstraints_13_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_6_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedConstraints_13_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_13_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2282:7: otherlv_15= ';'
                    {
                    otherlv_15=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getEnumerationCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationCS"


    // $ANTLR start "entryRuleEnumerationLiteralCS"
    // InternalOCLinEcore.g:2294:1: entryRuleEnumerationLiteralCS returns [EObject current=null] : iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF ;
    public final EObject entryRuleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationLiteralCS = null;


        try {
            // InternalOCLinEcore.g:2295:2: (iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF )
            // InternalOCLinEcore.g:2296:2: iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralCS=ruleEnumerationLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralCS"


    // $ANTLR start "ruleEnumerationLiteralCS"
    // InternalOCLinEcore.g:2303:1: ruleEnumerationLiteralCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) ) (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )? ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) ;
    public final EObject ruleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_literal_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        AntlrDatatypeRuleToken lv_value_7_0 = null;

        EObject lv_ownedAnnotations_9_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2306:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) ) (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )? ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) )
            // InternalOCLinEcore.g:2307:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) ) (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )? ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            {
            // InternalOCLinEcore.g:2307:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) ) (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )? ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            // InternalOCLinEcore.g:2307:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) ) (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )? ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            {
            // InternalOCLinEcore.g:2307:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ML_DOCUMENTATION) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalOCLinEcore.g:2308:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:2308:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:2309:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2325:3: ( (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) ) | ( (lv_name_3_0= ruleEnumerationLiteralName ) ) )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==75) ) {
                alt65=1;
            }
            else if ( ((LA65_0>=RULE_SIMPLE_ID && LA65_0<=RULE_ESCAPED_ID)||LA65_0==18||(LA65_0>=20 && LA65_0<=53)) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalOCLinEcore.g:2325:4: (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) )
                    {
                    // InternalOCLinEcore.g:2325:4: (otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) ) )
                    // InternalOCLinEcore.g:2325:6: otherlv_1= 'literal' ( (lv_name_2_0= ruleUnrestrictedName ) )
                    {
                    otherlv_1=(Token)match(input,75,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getEnumerationLiteralCSAccess().getLiteralKeyword_1_0_0());

                    }
                    // InternalOCLinEcore.g:2329:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:2330:1: (lv_name_2_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:2330:1: (lv_name_2_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:2331:3: lv_name_2_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameUnrestrictedNameParserRuleCall_1_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_name_2_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2348:6: ( (lv_name_3_0= ruleEnumerationLiteralName ) )
                    {
                    // InternalOCLinEcore.g:2348:6: ( (lv_name_3_0= ruleEnumerationLiteralName ) )
                    // InternalOCLinEcore.g:2349:1: (lv_name_3_0= ruleEnumerationLiteralName )
                    {
                    // InternalOCLinEcore.g:2349:1: (lv_name_3_0= ruleEnumerationLiteralName )
                    // InternalOCLinEcore.g:2350:3: lv_name_3_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameEnumerationLiteralNameParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_name_3_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.EnumerationLiteralName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2366:3: (otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==57) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalOCLinEcore.g:2366:5: otherlv_4= ':' ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEnumerationLiteralCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:2370:1: ( (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:2371:1: (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:2371:1: (lv_literal_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:2372:3: lv_literal_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_literal_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literal_5_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralSINGLE_QUOTED_STRINGTerminalRuleCall_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"literal",
                              		lv_literal_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2388:4: (otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==63) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalOCLinEcore.g:2388:6: otherlv_6= '=' ( (lv_value_7_0= ruleSIGNED ) )
                    {
                    otherlv_6=(Token)match(input,63,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getEnumerationLiteralCSAccess().getEqualsSignKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:2392:1: ( (lv_value_7_0= ruleSIGNED ) )
                    // InternalOCLinEcore.g:2393:1: (lv_value_7_0= ruleSIGNED )
                    {
                    // InternalOCLinEcore.g:2393:1: (lv_value_7_0= ruleSIGNED )
                    // InternalOCLinEcore.g:2394:3: lv_value_7_0= ruleSIGNED
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getValueSIGNEDParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_value_7_0=ruleSIGNED();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"value",
                              		lv_value_7_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SIGNED");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2410:4: ( (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==61) ) {
                alt69=1;
            }
            else if ( (LA69_0==58) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalOCLinEcore.g:2410:5: (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' )
                    {
                    // InternalOCLinEcore.g:2410:5: (otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}' )
                    // InternalOCLinEcore.g:2410:7: otherlv_8= '{' ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )* otherlv_10= '}'
                    {
                    otherlv_8=(Token)match(input,61,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEnumerationLiteralCSAccess().getLeftCurlyBracketKeyword_4_0_0());

                    }
                    // InternalOCLinEcore.g:2414:1: ( (lv_ownedAnnotations_9_0= ruleAnnotationElementCS ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==RULE_ML_DOCUMENTATION||LA68_0==59||LA68_0==74||LA68_0==81) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2415:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:2415:1: (lv_ownedAnnotations_9_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:2416:3: lv_ownedAnnotations_9_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_4_0_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_ownedAnnotations_9_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_9_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getEnumerationLiteralCSAccess().getRightCurlyBracketKeyword_4_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2437:7: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getEnumerationLiteralCSAccess().getSemicolonKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralCS"


    // $ANTLR start "entryRuleImportCS"
    // InternalOCLinEcore.g:2449:1: entryRuleImportCS returns [EObject current=null] : iv_ruleImportCS= ruleImportCS EOF ;
    public final EObject entryRuleImportCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportCS = null;


        try {
            // InternalOCLinEcore.g:2450:2: (iv_ruleImportCS= ruleImportCS EOF )
            // InternalOCLinEcore.g:2451:2: iv_ruleImportCS= ruleImportCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImportCS=ruleImportCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportCS"


    // $ANTLR start "ruleImportCS"
    // InternalOCLinEcore.g:2458:1: ruleImportCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? (otherlv_1= 'import' | otherlv_2= 'library' ) ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )? ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) ) ( (lv_isAll_6_0= '::*' ) )? otherlv_7= ';' ) ;
    public final EObject ruleImportCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_isAll_6_0=null;
        Token otherlv_7=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedPathName_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2461:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? (otherlv_1= 'import' | otherlv_2= 'library' ) ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )? ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) ) ( (lv_isAll_6_0= '::*' ) )? otherlv_7= ';' ) )
            // InternalOCLinEcore.g:2462:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? (otherlv_1= 'import' | otherlv_2= 'library' ) ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )? ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) ) ( (lv_isAll_6_0= '::*' ) )? otherlv_7= ';' )
            {
            // InternalOCLinEcore.g:2462:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? (otherlv_1= 'import' | otherlv_2= 'library' ) ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )? ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) ) ( (lv_isAll_6_0= '::*' ) )? otherlv_7= ';' )
            // InternalOCLinEcore.g:2462:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? (otherlv_1= 'import' | otherlv_2= 'library' ) ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )? ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) ) ( (lv_isAll_6_0= '::*' ) )? otherlv_7= ';'
            {
            // InternalOCLinEcore.g:2462:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ML_DOCUMENTATION) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalOCLinEcore.g:2463:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:2463:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:2464:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getImportCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2480:3: (otherlv_1= 'import' | otherlv_2= 'library' )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==33) ) {
                alt71=1;
            }
            else if ( (LA71_0==37) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalOCLinEcore.g:2480:5: otherlv_1= 'import'
                    {
                    otherlv_1=(Token)match(input,33,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImportCSAccess().getImportKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2485:7: otherlv_2= 'library'
                    {
                    otherlv_2=(Token)match(input,37,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getImportCSAccess().getLibraryKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2489:2: ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalOCLinEcore.g:2489:3: ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':'
                    {
                    // InternalOCLinEcore.g:2489:3: ( (lv_name_3_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:2490:1: (lv_name_3_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:2490:1: (lv_name_3_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:2491:3: lv_name_3_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getImportCSAccess().getNameUnrestrictedNameParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_name_3_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getImportCSAccess().getColonKeyword_2_1());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:2511:3: ( (lv_ownedPathName_5_0= ruleURIPathNameCS ) )
            // InternalOCLinEcore.g:2512:1: (lv_ownedPathName_5_0= ruleURIPathNameCS )
            {
            // InternalOCLinEcore.g:2512:1: (lv_ownedPathName_5_0= ruleURIPathNameCS )
            // InternalOCLinEcore.g:2513:3: lv_ownedPathName_5_0= ruleURIPathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_56);
            lv_ownedPathName_5_0=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:2529:2: ( (lv_isAll_6_0= '::*' ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==76) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalOCLinEcore.g:2530:1: (lv_isAll_6_0= '::*' )
                    {
                    // InternalOCLinEcore.g:2530:1: (lv_isAll_6_0= '::*' )
                    // InternalOCLinEcore.g:2531:3: lv_isAll_6_0= '::*'
                    {
                    lv_isAll_6_0=(Token)match(input,76,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAll_6_0, grammarAccess.getImportCSAccess().getIsAllColonColonAsteriskKeyword_4_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAll", true, "::*");

                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getImportCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportCS"


    // $ANTLR start "entryRuleModelElementCS"
    // InternalOCLinEcore.g:2556:1: entryRuleModelElementCS returns [EObject current=null] : iv_ruleModelElementCS= ruleModelElementCS EOF ;
    public final EObject entryRuleModelElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelElementCS = null;


        try {
            // InternalOCLinEcore.g:2557:2: (iv_ruleModelElementCS= ruleModelElementCS EOF )
            // InternalOCLinEcore.g:2558:2: iv_ruleModelElementCS= ruleModelElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModelElementCS=ruleModelElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelElementCS"


    // $ANTLR start "ruleModelElementCS"
    // InternalOCLinEcore.g:2565:1: ruleModelElementCS returns [EObject current=null] : (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS ) ;
    public final EObject ruleModelElementCS() throws RecognitionException {
        EObject current = null;

        EObject this_ClassCS_0 = null;

        EObject this_EnumerationLiteralCS_1 = null;

        EObject this_OperationCS_2 = null;

        EObject this_PackageCS_3 = null;

        EObject this_StructuralFeatureCS_4 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2568:28: ( (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS ) )
            // InternalOCLinEcore.g:2569:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )
            {
            // InternalOCLinEcore.g:2569:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )
            int alt74=5;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalOCLinEcore.g:2570:2: this_ClassCS_0= ruleClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassCS_0=ruleClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2583:2: this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getEnumerationLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationLiteralCS_1=ruleEnumerationLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:2596:2: this_OperationCS_2= ruleOperationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getOperationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_OperationCS_2=ruleOperationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_OperationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:2609:2: this_PackageCS_3= rulePackageCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getPackageCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PackageCS_3=rulePackageCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PackageCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:2622:2: this_StructuralFeatureCS_4= ruleStructuralFeatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getModelElementCSAccess().getStructuralFeatureCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuralFeatureCS_4=ruleStructuralFeatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuralFeatureCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelElementCS"


    // $ANTLR start "entryRuleModelElementRefCS"
    // InternalOCLinEcore.g:2641:1: entryRuleModelElementRefCS returns [EObject current=null] : iv_ruleModelElementRefCS= ruleModelElementRefCS EOF ;
    public final EObject entryRuleModelElementRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelElementRefCS = null;


        try {
            // InternalOCLinEcore.g:2642:2: (iv_ruleModelElementRefCS= ruleModelElementRefCS EOF )
            // InternalOCLinEcore.g:2643:2: iv_ruleModelElementRefCS= ruleModelElementRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelElementRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModelElementRefCS=ruleModelElementRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelElementRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelElementRefCS"


    // $ANTLR start "ruleModelElementRefCS"
    // InternalOCLinEcore.g:2650:1: ruleModelElementRefCS returns [EObject current=null] : (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' ) ;
    public final EObject ruleModelElementRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedPathName_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2653:28: ( (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' ) )
            // InternalOCLinEcore.g:2654:1: (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' )
            {
            // InternalOCLinEcore.g:2654:1: (otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';' )
            // InternalOCLinEcore.g:2654:3: otherlv_0= 'reference' ( (lv_ownedPathName_1_0= rulePathNameCS ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,46,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getModelElementRefCSAccess().getReferenceKeyword_0());

            }
            // InternalOCLinEcore.g:2658:1: ( (lv_ownedPathName_1_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:2659:1: (lv_ownedPathName_1_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:2659:1: (lv_ownedPathName_1_0= rulePathNameCS )
            // InternalOCLinEcore.g:2660:3: lv_ownedPathName_1_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getModelElementRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_ownedPathName_1_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getModelElementRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_1_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getModelElementRefCSAccess().getSemicolonKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelElementRefCS"


    // $ANTLR start "entryRuleOperationCS"
    // InternalOCLinEcore.g:2688:1: entryRuleOperationCS returns [EObject current=null] : iv_ruleOperationCS= ruleOperationCS EOF ;
    public final EObject entryRuleOperationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCS = null;


        try {
            // InternalOCLinEcore.g:2689:2: (iv_ruleOperationCS= ruleOperationCS EOF )
            // InternalOCLinEcore.g:2690:2: iv_ruleOperationCS= ruleOperationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOperationCS=ruleOperationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCS"


    // $ANTLR start "ruleOperationCS"
    // InternalOCLinEcore.g:2697:1: ruleOperationCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'operation' ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '(' ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )? otherlv_12= ')' (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )? (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' ) ) ;
    public final EObject ruleOperationCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token lv_qualifiers_4_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        EObject lv_ownedAnnotations_0_0 = null;

        EObject lv_ownedSignature_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_ownedParameters_9_0 = null;

        EObject lv_ownedParameters_11_0 = null;

        EObject lv_ownedType_14_0 = null;

        EObject lv_ownedExceptions_16_0 = null;

        EObject lv_ownedExceptions_18_0 = null;

        EObject lv_ownedAnnotations_31_0 = null;

        EObject lv_ownedPreconditions_32_0 = null;

        EObject lv_ownedBodyExpressions_36_0 = null;

        EObject lv_ownedPostconditions_38_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:2700:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'operation' ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '(' ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )? otherlv_12= ')' (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )? (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' ) ) )
            // InternalOCLinEcore.g:2701:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'operation' ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '(' ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )? otherlv_12= ')' (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )? (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' ) )
            {
            // InternalOCLinEcore.g:2701:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'operation' ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '(' ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )? otherlv_12= ')' (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )? (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' ) )
            // InternalOCLinEcore.g:2701:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'operation' ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '(' ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )? otherlv_12= ')' (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )? (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )? ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' )
            {
            // InternalOCLinEcore.g:2701:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ML_DOCUMENTATION) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalOCLinEcore.g:2702:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:2702:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:2703:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2719:3: ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )?
            int alt78=3;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==48) ) {
                alt78=1;
            }
            else if ( (LA78_0==27) ) {
                alt78=2;
            }
            switch (alt78) {
                case 1 :
                    // InternalOCLinEcore.g:2719:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    {
                    // InternalOCLinEcore.g:2719:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    // InternalOCLinEcore.g:2719:5: ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )?
                    {
                    // InternalOCLinEcore.g:2719:5: ( (lv_qualifiers_1_0= 'static' ) )
                    // InternalOCLinEcore.g:2720:1: (lv_qualifiers_1_0= 'static' )
                    {
                    // InternalOCLinEcore.g:2720:1: (lv_qualifiers_1_0= 'static' )
                    // InternalOCLinEcore.g:2721:3: lv_qualifiers_1_0= 'static'
                    {
                    lv_qualifiers_1_0=(Token)match(input,48,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_1_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_1_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "static");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2734:2: ( (lv_qualifiers_2_0= 'definition' ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==27) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalOCLinEcore.g:2735:1: (lv_qualifiers_2_0= 'definition' )
                            {
                            // InternalOCLinEcore.g:2735:1: (lv_qualifiers_2_0= 'definition' )
                            // InternalOCLinEcore.g:2736:3: lv_qualifiers_2_0= 'definition'
                            {
                            lv_qualifiers_2_0=(Token)match(input,27,FollowSets000.FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_2_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_1_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:2750:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    {
                    // InternalOCLinEcore.g:2750:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    // InternalOCLinEcore.g:2750:7: ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )?
                    {
                    // InternalOCLinEcore.g:2750:7: ( (lv_qualifiers_3_0= 'definition' ) )
                    // InternalOCLinEcore.g:2751:1: (lv_qualifiers_3_0= 'definition' )
                    {
                    // InternalOCLinEcore.g:2751:1: (lv_qualifiers_3_0= 'definition' )
                    // InternalOCLinEcore.g:2752:3: lv_qualifiers_3_0= 'definition'
                    {
                    lv_qualifiers_3_0=(Token)match(input,27,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_3_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_1_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "definition");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2765:2: ( (lv_qualifiers_4_0= 'static' ) )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( (LA77_0==48) ) {
                        alt77=1;
                    }
                    switch (alt77) {
                        case 1 :
                            // InternalOCLinEcore.g:2766:1: (lv_qualifiers_4_0= 'static' )
                            {
                            // InternalOCLinEcore.g:2766:1: (lv_qualifiers_4_0= 'static' )
                            // InternalOCLinEcore.g:2767:3: lv_qualifiers_4_0= 'static'
                            {
                            lv_qualifiers_4_0=(Token)match(input,48,FollowSets000.FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_1_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,38,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getOperationCSAccess().getOperationKeyword_2());

            }
            // InternalOCLinEcore.g:2784:1: ( (lv_ownedSignature_6_0= ruleTemplateSignatureCS ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==55||LA79_0==82) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalOCLinEcore.g:2785:1: (lv_ownedSignature_6_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:2785:1: (lv_ownedSignature_6_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:2786:3: lv_ownedSignature_6_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_4);
                    lv_ownedSignature_6_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2802:3: ( (lv_name_7_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:2803:1: (lv_name_7_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:2803:1: (lv_name_7_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:2804:3: lv_name_7_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getOperationCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_62);
            lv_name_7_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_7_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,55,FollowSets000.FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_5());

            }
            // InternalOCLinEcore.g:2824:1: ( ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )* )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( ((LA81_0>=RULE_SIMPLE_ID && LA81_0<=RULE_ESCAPED_ID)||LA81_0==18||(LA81_0>=20 && LA81_0<=54)||LA81_0==59||LA81_0==72||(LA81_0>=74 && LA81_0<=75)||LA81_0==77||LA81_0==81) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalOCLinEcore.g:2824:2: ( (lv_ownedParameters_9_0= ruleParameterCS ) ) (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )*
                    {
                    // InternalOCLinEcore.g:2824:2: ( (lv_ownedParameters_9_0= ruleParameterCS ) )
                    // InternalOCLinEcore.g:2825:1: (lv_ownedParameters_9_0= ruleParameterCS )
                    {
                    // InternalOCLinEcore.g:2825:1: (lv_ownedParameters_9_0= ruleParameterCS )
                    // InternalOCLinEcore.g:2826:3: lv_ownedParameters_9_0= ruleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_6_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_ownedParameters_9_0=ruleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_9_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2842:2: (otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==60) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2842:4: otherlv_10= ',' ( (lv_ownedParameters_11_0= ruleParameterCS ) )
                    	    {
                    	    otherlv_10=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getOperationCSAccess().getCommaKeyword_6_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:2846:1: ( (lv_ownedParameters_11_0= ruleParameterCS ) )
                    	    // InternalOCLinEcore.g:2847:1: (lv_ownedParameters_11_0= ruleParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:2847:1: (lv_ownedParameters_11_0= ruleParameterCS )
                    	    // InternalOCLinEcore.g:2848:3: lv_ownedParameters_11_0= ruleParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_6_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    lv_ownedParameters_11_0=ruleParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,56,FollowSets000.FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_7());

            }
            // InternalOCLinEcore.g:2868:1: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==57) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalOCLinEcore.g:2868:3: otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_13=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getOperationCSAccess().getColonKeyword_8_0());

                    }
                    // InternalOCLinEcore.g:2872:1: ( (lv_ownedType_14_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:2873:1: (lv_ownedType_14_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:2873:1: (lv_ownedType_14_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:2874:3: lv_ownedType_14_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_65);
                    lv_ownedType_14_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_14_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:2890:4: (otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )* )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==49) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalOCLinEcore.g:2890:6: otherlv_15= 'throws' ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) ) (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_15=(Token)match(input,49,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getOperationCSAccess().getThrowsKeyword_9_0());

                    }
                    // InternalOCLinEcore.g:2894:1: ( (lv_ownedExceptions_16_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:2895:1: (lv_ownedExceptions_16_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:2895:1: (lv_ownedExceptions_16_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:2896:3: lv_ownedExceptions_16_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_9_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_66);
                    lv_ownedExceptions_16_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExceptions",
                              		lv_ownedExceptions_16_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:2912:2: (otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) ) )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( (LA83_0==60) ) {
                            alt83=1;
                        }


                        switch (alt83) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2912:4: otherlv_17= ',' ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_17=(Token)match(input,60,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_17, grammarAccess.getOperationCSAccess().getCommaKeyword_9_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:2916:1: ( (lv_ownedExceptions_18_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:2917:1: (lv_ownedExceptions_18_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:2917:1: (lv_ownedExceptions_18_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:2918:3: lv_ownedExceptions_18_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_9_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_66);
                    	    lv_ownedExceptions_18_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExceptions",
                    	              		lv_ownedExceptions_18_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalOCLinEcore.g:2934:6: (otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}' )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==61) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==29||LA88_1==39||(LA88_1>=50 && LA88_1<=51)||LA88_1==64||LA88_1==66||(LA88_1>=68 && LA88_1<=69)) ) {
                    alt88=1;
                }
            }
            switch (alt88) {
                case 1 :
                    // InternalOCLinEcore.g:2934:8: otherlv_19= '{' ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+ otherlv_29= '}'
                    {
                    otherlv_19=(Token)match(input,61,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_10_0());

                    }
                    // InternalOCLinEcore.g:2938:1: ( ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )? )+
                    int cnt87=0;
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==29||LA87_0==39||(LA87_0>=50 && LA87_0<=51)||LA87_0==64||LA87_0==66||(LA87_0>=68 && LA87_0<=69)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:2938:2: ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) ) (otherlv_28= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:2938:2: ( ( (lv_qualifiers_20_0= 'derived' ) ) | ( (lv_qualifiers_21_0= '!derived' ) ) | ( (lv_qualifiers_22_0= 'ordered' ) ) | ( (lv_qualifiers_23_0= '!ordered' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) )
                    	    int alt85=8;
                    	    switch ( input.LA(1) ) {
                    	    case 29:
                    	        {
                    	        alt85=1;
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        alt85=2;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt85=3;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt85=4;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt85=5;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt85=6;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt85=7;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt85=8;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 85, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt85) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:2938:3: ( (lv_qualifiers_20_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2938:3: ( (lv_qualifiers_20_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:2939:1: (lv_qualifiers_20_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:2939:1: (lv_qualifiers_20_0= 'derived' )
                    	            // InternalOCLinEcore.g:2940:3: lv_qualifiers_20_0= 'derived'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,29,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_10_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:2954:6: ( (lv_qualifiers_21_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2954:6: ( (lv_qualifiers_21_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:2955:1: (lv_qualifiers_21_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:2955:1: (lv_qualifiers_21_0= '!derived' )
                    	            // InternalOCLinEcore.g:2956:3: lv_qualifiers_21_0= '!derived'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,64,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_10_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:2970:6: ( (lv_qualifiers_22_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2970:6: ( (lv_qualifiers_22_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:2971:1: (lv_qualifiers_22_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:2971:1: (lv_qualifiers_22_0= 'ordered' )
                    	            // InternalOCLinEcore.g:2972:3: lv_qualifiers_22_0= 'ordered'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,39,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_10_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:2986:6: ( (lv_qualifiers_23_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:2986:6: ( (lv_qualifiers_23_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:2987:1: (lv_qualifiers_23_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:2987:1: (lv_qualifiers_23_0= '!ordered' )
                    	            // InternalOCLinEcore.g:2988:3: lv_qualifiers_23_0= '!ordered'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,66,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_10_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:3002:6: ( (lv_qualifiers_24_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3002:6: ( (lv_qualifiers_24_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:3003:1: (lv_qualifiers_24_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:3003:1: (lv_qualifiers_24_0= 'transient' )
                    	            // InternalOCLinEcore.g:3004:3: lv_qualifiers_24_0= 'transient'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,50,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getOperationCSAccess().getQualifiersTransientKeyword_10_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:3018:6: ( (lv_qualifiers_25_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3018:6: ( (lv_qualifiers_25_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:3019:1: (lv_qualifiers_25_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:3019:1: (lv_qualifiers_25_0= '!transient' )
                    	            // InternalOCLinEcore.g:3020:3: lv_qualifiers_25_0= '!transient'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,68,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getOperationCSAccess().getQualifiersTransientKeyword_10_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:3034:6: ( (lv_qualifiers_26_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3034:6: ( (lv_qualifiers_26_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3035:1: (lv_qualifiers_26_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3035:1: (lv_qualifiers_26_0= 'unique' )
                    	            // InternalOCLinEcore.g:3036:3: lv_qualifiers_26_0= 'unique'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,51,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_10_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:3050:6: ( (lv_qualifiers_27_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3050:6: ( (lv_qualifiers_27_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3051:1: (lv_qualifiers_27_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3051:1: (lv_qualifiers_27_0= '!unique' )
                    	            // InternalOCLinEcore.g:3052:3: lv_qualifiers_27_0= '!unique'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,69,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_10_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3065:3: (otherlv_28= ',' )?
                    	    int alt86=2;
                    	    int LA86_0 = input.LA(1);

                    	    if ( (LA86_0==60) ) {
                    	        alt86=1;
                    	    }
                    	    switch (alt86) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3065:5: otherlv_28= ','
                    	            {
                    	            otherlv_28=(Token)match(input,60,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_28, grammarAccess.getOperationCSAccess().getCommaKeyword_10_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt87 >= 1 ) break loop87;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(87, input);
                                throw eee;
                        }
                        cnt87++;
                    } while (true);

                    otherlv_29=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_10_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:3073:3: ( (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' ) | otherlv_40= ';' )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==61) ) {
                alt92=1;
            }
            else if ( (LA92_0==58) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalOCLinEcore.g:3073:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' )
                    {
                    // InternalOCLinEcore.g:3073:4: (otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}' )
                    // InternalOCLinEcore.g:3073:6: otherlv_30= '{' ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )* otherlv_39= '}'
                    {
                    otherlv_30=(Token)match(input,61,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_11_0_0());

                    }
                    // InternalOCLinEcore.g:3077:1: ( ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) ) | (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' ) | ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) ) )*
                    loop91:
                    do {
                        int alt91=5;
                        switch ( input.LA(1) ) {
                        case RULE_ML_DOCUMENTATION:
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt91=1;
                            }
                            break;
                        case 42:
                            {
                            alt91=2;
                            }
                            break;
                        case 22:
                            {
                            alt91=3;
                            }
                            break;
                        case 41:
                            {
                            alt91=4;
                            }
                            break;

                        }

                        switch (alt91) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3077:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3077:2: ( (lv_ownedAnnotations_31_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:3078:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3078:1: (lv_ownedAnnotations_31_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3079:3: lv_ownedAnnotations_31_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_11_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_70);
                    	    lv_ownedAnnotations_31_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_31_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:3096:6: ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3096:6: ( (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS ) )
                    	    // InternalOCLinEcore.g:3097:1: (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:3097:1: (lv_ownedPreconditions_32_0= rulePreconditionConstraintCS )
                    	    // InternalOCLinEcore.g:3098:3: lv_ownedPreconditions_32_0= rulePreconditionConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedPreconditionsPreconditionConstraintCSParserRuleCall_11_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_70);
                    	    lv_ownedPreconditions_32_0=rulePreconditionConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPreconditions",
                    	              		lv_ownedPreconditions_32_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PreconditionConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:3115:6: (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:3115:6: (otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';' )
                    	    // InternalOCLinEcore.g:3115:8: otherlv_33= 'body' ( ruleUnrestrictedName )? otherlv_35= ':' ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )? otherlv_37= ';'
                    	    {
                    	    otherlv_33=(Token)match(input,22,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getOperationCSAccess().getBodyKeyword_11_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:3119:1: ( ruleUnrestrictedName )?
                    	    int alt89=2;
                    	    int LA89_0 = input.LA(1);

                    	    if ( ((LA89_0>=RULE_SIMPLE_ID && LA89_0<=RULE_ESCAPED_ID)||LA89_0==18||(LA89_0>=20 && LA89_0<=54)||LA89_0==59||LA89_0==72||(LA89_0>=74 && LA89_0<=75)||LA89_0==77||LA89_0==81) ) {
                    	        alt89=1;
                    	    }
                    	    switch (alt89) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3120:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getOperationCSAccess().getUnrestrictedNameParserRuleCall_11_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_18);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_35=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_35, grammarAccess.getOperationCSAccess().getColonKeyword_11_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:3134:1: ( (lv_ownedBodyExpressions_36_0= ruleSpecificationCS ) )?
                    	    int alt90=2;
                    	    int LA90_0 = input.LA(1);

                    	    if ( ((LA90_0>=RULE_INT && LA90_0<=RULE_SINGLE_QUOTED_STRING)||LA90_0==RULE_UNQUOTED_STRING||(LA90_0>=RULE_SIMPLE_ID && LA90_0<=RULE_ESCAPED_ID)||(LA90_0>=18 && LA90_0<=55)||LA90_0==59||LA90_0==72||(LA90_0>=74 && LA90_0<=75)||LA90_0==77||LA90_0==81||(LA90_0>=84 && LA90_0<=86)||(LA90_0>=104 && LA90_0<=105)||(LA90_0>=107 && LA90_0<=119)||LA90_0==122||(LA90_0>=124 && LA90_0<=127)||LA90_0==134||(LA90_0>=139 && LA90_0<=140)) ) {
                    	        alt90=1;
                    	    }
                    	    switch (alt90) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3135:1: (lv_ownedBodyExpressions_36_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:3135:1: (lv_ownedBodyExpressions_36_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:3136:3: lv_ownedBodyExpressions_36_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedBodyExpressionsSpecificationCSParserRuleCall_11_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_15);
                    	            lv_ownedBodyExpressions_36_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedBodyExpressions",
                    	                      		lv_ownedBodyExpressions_36_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_37=(Token)match(input,58,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getOperationCSAccess().getSemicolonKeyword_11_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:3157:6: ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3157:6: ( (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS ) )
                    	    // InternalOCLinEcore.g:3158:1: (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:3158:1: (lv_ownedPostconditions_38_0= rulePostconditionConstraintCS )
                    	    // InternalOCLinEcore.g:3159:3: lv_ownedPostconditions_38_0= rulePostconditionConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedPostconditionsPostconditionConstraintCSParserRuleCall_11_0_1_3_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_70);
                    	    lv_ownedPostconditions_38_0=rulePostconditionConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPostconditions",
                    	              		lv_ownedPostconditions_38_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PostconditionConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop91;
                        }
                    } while (true);

                    otherlv_39=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_39, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_11_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:3180:7: otherlv_40= ';'
                    {
                    otherlv_40=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_40, grammarAccess.getOperationCSAccess().getSemicolonKeyword_11_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCS"


    // $ANTLR start "entryRulePackageCS"
    // InternalOCLinEcore.g:3192:1: entryRulePackageCS returns [EObject current=null] : iv_rulePackageCS= rulePackageCS EOF ;
    public final EObject entryRulePackageCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageCS = null;


        try {
            // InternalOCLinEcore.g:3193:2: (iv_rulePackageCS= rulePackageCS EOF )
            // InternalOCLinEcore.g:3194:2: iv_rulePackageCS= rulePackageCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePackageCS=rulePackageCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageCS"


    // $ANTLR start "rulePackageCS"
    // InternalOCLinEcore.g:3201:1: rulePackageCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'package' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject rulePackageCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_nsPrefix_4_0 = null;

        AntlrDatatypeRuleToken lv_nsURI_6_0 = null;

        EObject lv_ownedAnnotations_8_0 = null;

        EObject lv_ownedPackages_9_0 = null;

        EObject lv_ownedClasses_10_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3204:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'package' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalOCLinEcore.g:3205:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'package' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalOCLinEcore.g:3205:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'package' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalOCLinEcore.g:3205:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? otherlv_1= 'package' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            {
            // InternalOCLinEcore.g:3205:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ML_DOCUMENTATION) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalOCLinEcore.g:3206:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:3206:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:3207:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPackageCSAccess().getPackageKeyword_1());

            }
            // InternalOCLinEcore.g:3227:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3228:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3228:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3229:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPackageCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3245:2: (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==57) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalOCLinEcore.g:3245:4: otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPackageCSAccess().getColonKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:3249:1: ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:3250:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:3250:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:3251:3: lv_nsPrefix_4_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPackageCSAccess().getNsPrefixUnrestrictedNameParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_nsPrefix_4_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsPrefix",
                              		lv_nsPrefix_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3267:4: (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==63) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalOCLinEcore.g:3267:6: otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) )
                    {
                    otherlv_5=(Token)match(input,63,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getPackageCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:3271:1: ( (lv_nsURI_6_0= ruleURI ) )
                    // InternalOCLinEcore.g:3272:1: (lv_nsURI_6_0= ruleURI )
                    {
                    // InternalOCLinEcore.g:3272:1: (lv_nsURI_6_0= ruleURI )
                    // InternalOCLinEcore.g:3273:3: lv_nsURI_6_0= ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPackageCSAccess().getNsURIURIParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_nsURI_6_0=ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsURI",
                              		lv_nsURI_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.URI");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3289:4: ( (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==61) ) {
                alt97=1;
            }
            else if ( (LA97_0==58) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalOCLinEcore.g:3289:5: (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' )
                    {
                    // InternalOCLinEcore.g:3289:5: (otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}' )
                    // InternalOCLinEcore.g:3289:7: otherlv_7= '{' ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )* otherlv_11= '}'
                    {
                    otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getPackageCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalOCLinEcore.g:3293:1: ( ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) ) | ( (lv_ownedPackages_9_0= rulePackageCS ) ) | ( (lv_ownedClasses_10_0= ruleClassCS ) ) )*
                    loop96:
                    do {
                        int alt96=4;
                        switch ( input.LA(1) ) {
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt96=1;
                            }
                            break;
                        case RULE_ML_DOCUMENTATION:
                            {
                            switch ( input.LA(2) ) {
                            case 20:
                            case 24:
                            case 26:
                            case 30:
                            case 43:
                                {
                                alt96=3;
                                }
                                break;
                            case 74:
                                {
                                alt96=1;
                                }
                                break;
                            case 40:
                                {
                                alt96=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 40:
                            {
                            alt96=2;
                            }
                            break;
                        case 20:
                        case 24:
                        case 26:
                        case 30:
                        case 43:
                            {
                            alt96=3;
                            }
                            break;

                        }

                        switch (alt96) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3293:2: ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3293:2: ( (lv_ownedAnnotations_8_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:3294:1: (lv_ownedAnnotations_8_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3294:1: (lv_ownedAnnotations_8_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3295:3: lv_ownedAnnotations_8_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_5_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_ownedAnnotations_8_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_8_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:3312:6: ( (lv_ownedPackages_9_0= rulePackageCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3312:6: ( (lv_ownedPackages_9_0= rulePackageCS ) )
                    	    // InternalOCLinEcore.g:3313:1: (lv_ownedPackages_9_0= rulePackageCS )
                    	    {
                    	    // InternalOCLinEcore.g:3313:1: (lv_ownedPackages_9_0= rulePackageCS )
                    	    // InternalOCLinEcore.g:3314:3: lv_ownedPackages_9_0= rulePackageCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedPackagesPackageCSParserRuleCall_5_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_ownedPackages_9_0=rulePackageCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPackages",
                    	              		lv_ownedPackages_9_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.PackageCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:3331:6: ( (lv_ownedClasses_10_0= ruleClassCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:3331:6: ( (lv_ownedClasses_10_0= ruleClassCS ) )
                    	    // InternalOCLinEcore.g:3332:1: (lv_ownedClasses_10_0= ruleClassCS )
                    	    {
                    	    // InternalOCLinEcore.g:3332:1: (lv_ownedClasses_10_0= ruleClassCS )
                    	    // InternalOCLinEcore.g:3333:3: lv_ownedClasses_10_0= ruleClassCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getPackageCSAccess().getOwnedClassesClassCSParserRuleCall_5_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_ownedClasses_10_0=ruleClassCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedClasses",
                    	              		lv_ownedClasses_10_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ClassCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getPackageCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:3354:7: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getPackageCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageCS"


    // $ANTLR start "entryRuleParameterCS"
    // InternalOCLinEcore.g:3366:1: entryRuleParameterCS returns [EObject current=null] : iv_ruleParameterCS= ruleParameterCS EOF ;
    public final EObject entryRuleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterCS = null;


        try {
            // InternalOCLinEcore.g:3367:2: (iv_ruleParameterCS= ruleParameterCS EOF )
            // InternalOCLinEcore.g:3368:2: iv_ruleParameterCS= ruleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameterCS=ruleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterCS"


    // $ANTLR start "ruleParameterCS"
    // InternalOCLinEcore.g:3375:1: ruleParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? ) ;
    public final EObject ruleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_qualifiers_4_0=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedAnnotations_11_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3378:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? ) )
            // InternalOCLinEcore.g:3379:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? )
            {
            // InternalOCLinEcore.g:3379:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )? )
            // InternalOCLinEcore.g:3379:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )?
            {
            // InternalOCLinEcore.g:3379:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3380:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3380:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3381:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3397:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==57) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalOCLinEcore.g:3397:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:3401:1: ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:3402:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:3402:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:3403:3: lv_ownedType_2_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_ownedType_2_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3419:4: (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==61) ) {
                int LA102_1 = input.LA(2);

                if ( (LA102_1==39||LA102_1==51||LA102_1==66||LA102_1==69) ) {
                    alt102=1;
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalOCLinEcore.g:3419:6: otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}'
                    {
                    otherlv_3=(Token)match(input,61,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:3423:1: ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+
                    int cnt101=0;
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==39||LA101_0==51||LA101_0==66||LA101_0==69) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3423:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3423:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) )
                    	    int alt99=4;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt99=1;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt99=2;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt99=3;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt99=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 99, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt99) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3423:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3423:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3424:1: (lv_qualifiers_4_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3424:1: (lv_qualifiers_4_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3425:3: lv_qualifiers_4_0= 'ordered'
                    	            {
                    	            lv_qualifiers_4_0=(Token)match(input,39,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3439:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3439:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3440:1: (lv_qualifiers_5_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3440:1: (lv_qualifiers_5_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3441:3: lv_qualifiers_5_0= '!ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,66,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3455:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3455:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3456:1: (lv_qualifiers_6_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3456:1: (lv_qualifiers_6_0= 'unique' )
                    	            // InternalOCLinEcore.g:3457:3: lv_qualifiers_6_0= 'unique'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,51,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3471:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3471:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3472:1: (lv_qualifiers_7_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3472:1: (lv_qualifiers_7_0= '!unique' )
                    	            // InternalOCLinEcore.g:3473:3: lv_qualifiers_7_0= '!unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,69,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3486:3: (otherlv_8= ',' )?
                    	    int alt100=2;
                    	    int LA100_0 = input.LA(1);

                    	    if ( (LA100_0==60) ) {
                    	        alt100=1;
                    	    }
                    	    switch (alt100) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3486:5: otherlv_8= ','
                    	            {
                    	            otherlv_8=(Token)match(input,60,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_8, grammarAccess.getParameterCSAccess().getCommaKeyword_2_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt101 >= 1 ) break loop101;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(101, input);
                                throw eee;
                        }
                        cnt101++;
                    } while (true);

                    otherlv_9=(Token)match(input,62,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_2_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:3494:3: (otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}' )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==61) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalOCLinEcore.g:3494:5: otherlv_10= '{' ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )* otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,61,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_3_0());

                    }
                    // InternalOCLinEcore.g:3498:1: ( (lv_ownedAnnotations_11_0= ruleAnnotationElementCS ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==RULE_ML_DOCUMENTATION||LA103_0==59||LA103_0==74||LA103_0==81) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3499:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:3499:1: (lv_ownedAnnotations_11_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:3500:3: lv_ownedAnnotations_11_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_3_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_ownedAnnotations_11_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_11_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_3_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterCS"


    // $ANTLR start "entryRuleImplicitOppositeCS"
    // InternalOCLinEcore.g:3528:1: entryRuleImplicitOppositeCS returns [EObject current=null] : iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF ;
    public final EObject entryRuleImplicitOppositeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplicitOppositeCS = null;


        try {
            // InternalOCLinEcore.g:3529:2: (iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF )
            // InternalOCLinEcore.g:3530:2: iv_ruleImplicitOppositeCS= ruleImplicitOppositeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicitOppositeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImplicitOppositeCS=ruleImplicitOppositeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplicitOppositeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplicitOppositeCS"


    // $ANTLR start "ruleImplicitOppositeCS"
    // InternalOCLinEcore.g:3537:1: ruleImplicitOppositeCS returns [EObject current=null] : (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? ) ;
    public final EObject ruleImplicitOppositeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token lv_qualifiers_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedType_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3540:28: ( (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? ) )
            // InternalOCLinEcore.g:3541:1: (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? )
            {
            // InternalOCLinEcore.g:3541:1: (otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )? )
            // InternalOCLinEcore.g:3541:3: otherlv_0= 'opposite' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) ) (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )?
            {
            otherlv_0=(Token)match(input,77,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImplicitOppositeCSAccess().getOppositeKeyword_0());

            }
            // InternalOCLinEcore.g:3545:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3546:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3546:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3547:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImplicitOppositeCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImplicitOppositeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getImplicitOppositeCSAccess().getColonKeyword_2());

            }
            // InternalOCLinEcore.g:3567:1: ( (lv_ownedType_3_0= ruleTypedMultiplicityRefCS ) )
            // InternalOCLinEcore.g:3568:1: (lv_ownedType_3_0= ruleTypedMultiplicityRefCS )
            {
            // InternalOCLinEcore.g:3568:1: (lv_ownedType_3_0= ruleTypedMultiplicityRefCS )
            // InternalOCLinEcore.g:3569:3: lv_ownedType_3_0= ruleTypedMultiplicityRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImplicitOppositeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_ownedType_3_0=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImplicitOppositeCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_3_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3585:2: (otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}' )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==61) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalOCLinEcore.g:3585:4: otherlv_4= '{' ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+ otherlv_10= '}'
                    {
                    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getImplicitOppositeCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:3589:1: ( ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )? )+
                    int cnt107=0;
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==39||LA107_0==51||LA107_0==66||LA107_0==69) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3589:2: ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) ) (otherlv_9= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3589:2: ( ( (lv_qualifiers_5_0= 'ordered' ) ) | ( (lv_qualifiers_6_0= '!ordered' ) ) | ( (lv_qualifiers_7_0= 'unique' ) ) | ( (lv_qualifiers_8_0= '!unique' ) ) )
                    	    int alt105=4;
                    	    switch ( input.LA(1) ) {
                    	    case 39:
                    	        {
                    	        alt105=1;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt105=2;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt105=3;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt105=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 105, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt105) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3589:3: ( (lv_qualifiers_5_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3589:3: ( (lv_qualifiers_5_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3590:1: (lv_qualifiers_5_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3590:1: (lv_qualifiers_5_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3591:3: lv_qualifiers_5_0= 'ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,39,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersOrderedKeyword_4_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3605:6: ( (lv_qualifiers_6_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3605:6: ( (lv_qualifiers_6_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3606:1: (lv_qualifiers_6_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3606:1: (lv_qualifiers_6_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3607:3: lv_qualifiers_6_0= '!ordered'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,66,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersOrderedKeyword_4_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3621:6: ( (lv_qualifiers_7_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3621:6: ( (lv_qualifiers_7_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:3622:1: (lv_qualifiers_7_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3622:1: (lv_qualifiers_7_0= 'unique' )
                    	            // InternalOCLinEcore.g:3623:3: lv_qualifiers_7_0= 'unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,51,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersUniqueKeyword_4_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3637:6: ( (lv_qualifiers_8_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3637:6: ( (lv_qualifiers_8_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:3638:1: (lv_qualifiers_8_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:3638:1: (lv_qualifiers_8_0= '!unique' )
                    	            // InternalOCLinEcore.g:3639:3: lv_qualifiers_8_0= '!unique'
                    	            {
                    	            lv_qualifiers_8_0=(Token)match(input,69,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_8_0, grammarAccess.getImplicitOppositeCSAccess().getQualifiersUniqueKeyword_4_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getImplicitOppositeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_8_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:3652:3: (otherlv_9= ',' )?
                    	    int alt106=2;
                    	    int LA106_0 = input.LA(1);

                    	    if ( (LA106_0==60) ) {
                    	        alt106=1;
                    	    }
                    	    switch (alt106) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3652:5: otherlv_9= ','
                    	            {
                    	            otherlv_9=(Token)match(input,60,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getImplicitOppositeCSAccess().getCommaKeyword_4_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt107 >= 1 ) break loop107;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(107, input);
                                throw eee;
                        }
                        cnt107++;
                    } while (true);

                    otherlv_10=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getImplicitOppositeCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplicitOppositeCS"


    // $ANTLR start "entryRuleReferenceCS"
    // InternalOCLinEcore.g:3668:1: entryRuleReferenceCS returns [EObject current=null] : iv_ruleReferenceCS= ruleReferenceCS EOF ;
    public final EObject entryRuleReferenceCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCS = null;


        try {
            // InternalOCLinEcore.g:3669:2: (iv_ruleReferenceCS= ruleReferenceCS EOF )
            // InternalOCLinEcore.g:3670:2: iv_ruleReferenceCS= ruleReferenceCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCS=ruleReferenceCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCS"


    // $ANTLR start "ruleReferenceCS"
    // InternalOCLinEcore.g:3677:1: ruleReferenceCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'property' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )? ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' ) ) ;
    public final EObject ruleReferenceCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token lv_qualifiers_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_default_12_0=null;
        Token otherlv_13=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token lv_qualifiers_28_0=null;
        Token lv_qualifiers_29_0=null;
        Token lv_qualifiers_30_0=null;
        Token lv_qualifiers_31_0=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedAnnotations_35_0 = null;

        EObject lv_ownedDefaultExpressions_44_0 = null;

        EObject lv_ownedDefaultExpressions_49_0 = null;

        EObject lv_ownedImplicitOpposites_51_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:3680:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'property' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )? ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' ) ) )
            // InternalOCLinEcore.g:3681:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'property' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )? ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' ) )
            {
            // InternalOCLinEcore.g:3681:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'property' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )? ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' ) )
            // InternalOCLinEcore.g:3681:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )? otherlv_5= 'property' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )? ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' )
            {
            // InternalOCLinEcore.g:3681:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==RULE_ML_DOCUMENTATION) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalOCLinEcore.g:3682:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:3682:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:3683:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3699:3: ( ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? ) | ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? ) )?
            int alt112=3;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==48) ) {
                alt112=1;
            }
            else if ( (LA112_0==27) ) {
                alt112=2;
            }
            switch (alt112) {
                case 1 :
                    // InternalOCLinEcore.g:3699:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    {
                    // InternalOCLinEcore.g:3699:4: ( ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )? )
                    // InternalOCLinEcore.g:3699:5: ( (lv_qualifiers_1_0= 'static' ) ) ( (lv_qualifiers_2_0= 'definition' ) )?
                    {
                    // InternalOCLinEcore.g:3699:5: ( (lv_qualifiers_1_0= 'static' ) )
                    // InternalOCLinEcore.g:3700:1: (lv_qualifiers_1_0= 'static' )
                    {
                    // InternalOCLinEcore.g:3700:1: (lv_qualifiers_1_0= 'static' )
                    // InternalOCLinEcore.g:3701:3: lv_qualifiers_1_0= 'static'
                    {
                    lv_qualifiers_1_0=(Token)match(input,48,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_1_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_1_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "static");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:3714:2: ( (lv_qualifiers_2_0= 'definition' ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==27) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalOCLinEcore.g:3715:1: (lv_qualifiers_2_0= 'definition' )
                            {
                            // InternalOCLinEcore.g:3715:1: (lv_qualifiers_2_0= 'definition' )
                            // InternalOCLinEcore.g:3716:3: lv_qualifiers_2_0= 'definition'
                            {
                            lv_qualifiers_2_0=(Token)match(input,27,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_2_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_1_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:3730:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    {
                    // InternalOCLinEcore.g:3730:6: ( ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )? )
                    // InternalOCLinEcore.g:3730:7: ( (lv_qualifiers_3_0= 'definition' ) ) ( (lv_qualifiers_4_0= 'static' ) )?
                    {
                    // InternalOCLinEcore.g:3730:7: ( (lv_qualifiers_3_0= 'definition' ) )
                    // InternalOCLinEcore.g:3731:1: (lv_qualifiers_3_0= 'definition' )
                    {
                    // InternalOCLinEcore.g:3731:1: (lv_qualifiers_3_0= 'definition' )
                    // InternalOCLinEcore.g:3732:3: lv_qualifiers_3_0= 'definition'
                    {
                    lv_qualifiers_3_0=(Token)match(input,27,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_3_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_1_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "definition");

                    }

                    }


                    }

                    // InternalOCLinEcore.g:3745:2: ( (lv_qualifiers_4_0= 'static' ) )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==48) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalOCLinEcore.g:3746:1: (lv_qualifiers_4_0= 'static' )
                            {
                            // InternalOCLinEcore.g:3746:1: (lv_qualifiers_4_0= 'static' )
                            // InternalOCLinEcore.g:3747:3: lv_qualifiers_4_0= 'static'
                            {
                            lv_qualifiers_4_0=(Token)match(input,48,FollowSets000.FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_1_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,44,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getReferenceCSAccess().getPropertyKeyword_2());

            }
            // InternalOCLinEcore.g:3764:1: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:3765:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:3765:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:3766:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_82);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:3782:2: (otherlv_7= '#' ( ( ruleUnrestrictedName ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==78) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalOCLinEcore.g:3782:4: otherlv_7= '#' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_7=(Token)match(input,78,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getReferenceCSAccess().getNumberSignKeyword_4_0());

                    }
                    // InternalOCLinEcore.g:3786:1: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:3787:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:3787:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:3788:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredOppositePropertyCrossReference_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3804:4: (otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==57) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalOCLinEcore.g:3804:6: otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_9=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getReferenceCSAccess().getColonKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:3808:1: ( (lv_ownedType_10_0= ruleTypedMultiplicityRefCS ) )
                    // InternalOCLinEcore.g:3809:1: (lv_ownedType_10_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalOCLinEcore.g:3809:1: (lv_ownedType_10_0= ruleTypedMultiplicityRefCS )
                    // InternalOCLinEcore.g:3810:3: lv_ownedType_10_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_32);
                    lv_ownedType_10_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_10_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3826:4: (otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==63) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalOCLinEcore.g:3826:6: otherlv_11= '=' ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_11=(Token)match(input,63,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getReferenceCSAccess().getEqualsSignKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:3830:1: ( (lv_default_12_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:3831:1: (lv_default_12_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:3831:1: (lv_default_12_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:3832:3: lv_default_12_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_12_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_12_0, grammarAccess.getReferenceCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_6_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_12_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:3848:4: (otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}' )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==61) ) {
                int LA119_1 = input.LA(2);

                if ( (LA119_1==25||LA119_1==29||LA119_1==39||LA119_1==45||LA119_1==47||(LA119_1>=50 && LA119_1<=53)||LA119_1==64||(LA119_1>=66 && LA119_1<=71)||(LA119_1>=79 && LA119_1<=80)) ) {
                    alt119=1;
                }
            }
            switch (alt119) {
                case 1 :
                    // InternalOCLinEcore.g:3848:6: otherlv_13= '{' ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+ otherlv_33= '}'
                    {
                    otherlv_13=(Token)match(input,61,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_7_0());

                    }
                    // InternalOCLinEcore.g:3852:1: ( ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )? )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==25||LA118_0==29||LA118_0==39||LA118_0==45||LA118_0==47||(LA118_0>=50 && LA118_0<=53)||LA118_0==64||(LA118_0>=66 && LA118_0<=71)||(LA118_0>=79 && LA118_0<=80)) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:3852:2: ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) ) (otherlv_32= ',' )?
                    	    {
                    	    // InternalOCLinEcore.g:3852:2: ( ( (lv_qualifiers_14_0= 'composes' ) ) | ( (lv_qualifiers_15_0= '!composes' ) ) | ( (lv_qualifiers_16_0= 'derived' ) ) | ( (lv_qualifiers_17_0= '!derived' ) ) | ( (lv_qualifiers_18_0= 'ordered' ) ) | ( (lv_qualifiers_19_0= '!ordered' ) ) | ( (lv_qualifiers_20_0= 'readonly' ) ) | ( (lv_qualifiers_21_0= '!readonly' ) ) | ( (lv_qualifiers_22_0= 'resolve' ) ) | ( (lv_qualifiers_23_0= '!resolve' ) ) | ( (lv_qualifiers_24_0= 'transient' ) ) | ( (lv_qualifiers_25_0= '!transient' ) ) | ( (lv_qualifiers_26_0= 'unique' ) ) | ( (lv_qualifiers_27_0= '!unique' ) ) | ( (lv_qualifiers_28_0= 'unsettable' ) ) | ( (lv_qualifiers_29_0= '!unsettable' ) ) | ( (lv_qualifiers_30_0= 'volatile' ) ) | ( (lv_qualifiers_31_0= '!volatile' ) ) )
                    	    int alt116=18;
                    	    switch ( input.LA(1) ) {
                    	    case 25:
                    	        {
                    	        alt116=1;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt116=2;
                    	        }
                    	        break;
                    	    case 29:
                    	        {
                    	        alt116=3;
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        alt116=4;
                    	        }
                    	        break;
                    	    case 39:
                    	        {
                    	        alt116=5;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt116=6;
                    	        }
                    	        break;
                    	    case 45:
                    	        {
                    	        alt116=7;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt116=8;
                    	        }
                    	        break;
                    	    case 47:
                    	        {
                    	        alt116=9;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt116=10;
                    	        }
                    	        break;
                    	    case 50:
                    	        {
                    	        alt116=11;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt116=12;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt116=13;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt116=14;
                    	        }
                    	        break;
                    	    case 52:
                    	        {
                    	        alt116=15;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt116=16;
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        alt116=17;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt116=18;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 116, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt116) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:3852:3: ( (lv_qualifiers_14_0= 'composes' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3852:3: ( (lv_qualifiers_14_0= 'composes' ) )
                    	            // InternalOCLinEcore.g:3853:1: (lv_qualifiers_14_0= 'composes' )
                    	            {
                    	            // InternalOCLinEcore.g:3853:1: (lv_qualifiers_14_0= 'composes' )
                    	            // InternalOCLinEcore.g:3854:3: lv_qualifiers_14_0= 'composes'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,25,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_7_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:3868:6: ( (lv_qualifiers_15_0= '!composes' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3868:6: ( (lv_qualifiers_15_0= '!composes' ) )
                    	            // InternalOCLinEcore.g:3869:1: (lv_qualifiers_15_0= '!composes' )
                    	            {
                    	            // InternalOCLinEcore.g:3869:1: (lv_qualifiers_15_0= '!composes' )
                    	            // InternalOCLinEcore.g:3870:3: lv_qualifiers_15_0= '!composes'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,79,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_7_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "!composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:3884:6: ( (lv_qualifiers_16_0= 'derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3884:6: ( (lv_qualifiers_16_0= 'derived' ) )
                    	            // InternalOCLinEcore.g:3885:1: (lv_qualifiers_16_0= 'derived' )
                    	            {
                    	            // InternalOCLinEcore.g:3885:1: (lv_qualifiers_16_0= 'derived' )
                    	            // InternalOCLinEcore.g:3886:3: lv_qualifiers_16_0= 'derived'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,29,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_7_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalOCLinEcore.g:3900:6: ( (lv_qualifiers_17_0= '!derived' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3900:6: ( (lv_qualifiers_17_0= '!derived' ) )
                    	            // InternalOCLinEcore.g:3901:1: (lv_qualifiers_17_0= '!derived' )
                    	            {
                    	            // InternalOCLinEcore.g:3901:1: (lv_qualifiers_17_0= '!derived' )
                    	            // InternalOCLinEcore.g:3902:3: lv_qualifiers_17_0= '!derived'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,64,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_7_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalOCLinEcore.g:3916:6: ( (lv_qualifiers_18_0= 'ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3916:6: ( (lv_qualifiers_18_0= 'ordered' ) )
                    	            // InternalOCLinEcore.g:3917:1: (lv_qualifiers_18_0= 'ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3917:1: (lv_qualifiers_18_0= 'ordered' )
                    	            // InternalOCLinEcore.g:3918:3: lv_qualifiers_18_0= 'ordered'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,39,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_7_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalOCLinEcore.g:3932:6: ( (lv_qualifiers_19_0= '!ordered' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3932:6: ( (lv_qualifiers_19_0= '!ordered' ) )
                    	            // InternalOCLinEcore.g:3933:1: (lv_qualifiers_19_0= '!ordered' )
                    	            {
                    	            // InternalOCLinEcore.g:3933:1: (lv_qualifiers_19_0= '!ordered' )
                    	            // InternalOCLinEcore.g:3934:3: lv_qualifiers_19_0= '!ordered'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,66,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_7_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalOCLinEcore.g:3948:6: ( (lv_qualifiers_20_0= 'readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3948:6: ( (lv_qualifiers_20_0= 'readonly' ) )
                    	            // InternalOCLinEcore.g:3949:1: (lv_qualifiers_20_0= 'readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:3949:1: (lv_qualifiers_20_0= 'readonly' )
                    	            // InternalOCLinEcore.g:3950:3: lv_qualifiers_20_0= 'readonly'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,45,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_7_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalOCLinEcore.g:3964:6: ( (lv_qualifiers_21_0= '!readonly' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3964:6: ( (lv_qualifiers_21_0= '!readonly' ) )
                    	            // InternalOCLinEcore.g:3965:1: (lv_qualifiers_21_0= '!readonly' )
                    	            {
                    	            // InternalOCLinEcore.g:3965:1: (lv_qualifiers_21_0= '!readonly' )
                    	            // InternalOCLinEcore.g:3966:3: lv_qualifiers_21_0= '!readonly'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,67,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_7_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalOCLinEcore.g:3980:6: ( (lv_qualifiers_22_0= 'resolve' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3980:6: ( (lv_qualifiers_22_0= 'resolve' ) )
                    	            // InternalOCLinEcore.g:3981:1: (lv_qualifiers_22_0= 'resolve' )
                    	            {
                    	            // InternalOCLinEcore.g:3981:1: (lv_qualifiers_22_0= 'resolve' )
                    	            // InternalOCLinEcore.g:3982:3: lv_qualifiers_22_0= 'resolve'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,47,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_7_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalOCLinEcore.g:3996:6: ( (lv_qualifiers_23_0= '!resolve' ) )
                    	            {
                    	            // InternalOCLinEcore.g:3996:6: ( (lv_qualifiers_23_0= '!resolve' ) )
                    	            // InternalOCLinEcore.g:3997:1: (lv_qualifiers_23_0= '!resolve' )
                    	            {
                    	            // InternalOCLinEcore.g:3997:1: (lv_qualifiers_23_0= '!resolve' )
                    	            // InternalOCLinEcore.g:3998:3: lv_qualifiers_23_0= '!resolve'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,80,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_7_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "!resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalOCLinEcore.g:4012:6: ( (lv_qualifiers_24_0= 'transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4012:6: ( (lv_qualifiers_24_0= 'transient' ) )
                    	            // InternalOCLinEcore.g:4013:1: (lv_qualifiers_24_0= 'transient' )
                    	            {
                    	            // InternalOCLinEcore.g:4013:1: (lv_qualifiers_24_0= 'transient' )
                    	            // InternalOCLinEcore.g:4014:3: lv_qualifiers_24_0= 'transient'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,50,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_7_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalOCLinEcore.g:4028:6: ( (lv_qualifiers_25_0= '!transient' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4028:6: ( (lv_qualifiers_25_0= '!transient' ) )
                    	            // InternalOCLinEcore.g:4029:1: (lv_qualifiers_25_0= '!transient' )
                    	            {
                    	            // InternalOCLinEcore.g:4029:1: (lv_qualifiers_25_0= '!transient' )
                    	            // InternalOCLinEcore.g:4030:3: lv_qualifiers_25_0= '!transient'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,68,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_7_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalOCLinEcore.g:4044:6: ( (lv_qualifiers_26_0= 'unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4044:6: ( (lv_qualifiers_26_0= 'unique' ) )
                    	            // InternalOCLinEcore.g:4045:1: (lv_qualifiers_26_0= 'unique' )
                    	            {
                    	            // InternalOCLinEcore.g:4045:1: (lv_qualifiers_26_0= 'unique' )
                    	            // InternalOCLinEcore.g:4046:3: lv_qualifiers_26_0= 'unique'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,51,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_7_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalOCLinEcore.g:4060:6: ( (lv_qualifiers_27_0= '!unique' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4060:6: ( (lv_qualifiers_27_0= '!unique' ) )
                    	            // InternalOCLinEcore.g:4061:1: (lv_qualifiers_27_0= '!unique' )
                    	            {
                    	            // InternalOCLinEcore.g:4061:1: (lv_qualifiers_27_0= '!unique' )
                    	            // InternalOCLinEcore.g:4062:3: lv_qualifiers_27_0= '!unique'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,69,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_7_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalOCLinEcore.g:4076:6: ( (lv_qualifiers_28_0= 'unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4076:6: ( (lv_qualifiers_28_0= 'unsettable' ) )
                    	            // InternalOCLinEcore.g:4077:1: (lv_qualifiers_28_0= 'unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:4077:1: (lv_qualifiers_28_0= 'unsettable' )
                    	            // InternalOCLinEcore.g:4078:3: lv_qualifiers_28_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_28_0=(Token)match(input,52,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_28_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_7_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_28_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalOCLinEcore.g:4092:6: ( (lv_qualifiers_29_0= '!unsettable' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4092:6: ( (lv_qualifiers_29_0= '!unsettable' ) )
                    	            // InternalOCLinEcore.g:4093:1: (lv_qualifiers_29_0= '!unsettable' )
                    	            {
                    	            // InternalOCLinEcore.g:4093:1: (lv_qualifiers_29_0= '!unsettable' )
                    	            // InternalOCLinEcore.g:4094:3: lv_qualifiers_29_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_29_0=(Token)match(input,70,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_29_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_7_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_29_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 17 :
                    	            // InternalOCLinEcore.g:4108:6: ( (lv_qualifiers_30_0= 'volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4108:6: ( (lv_qualifiers_30_0= 'volatile' ) )
                    	            // InternalOCLinEcore.g:4109:1: (lv_qualifiers_30_0= 'volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:4109:1: (lv_qualifiers_30_0= 'volatile' )
                    	            // InternalOCLinEcore.g:4110:3: lv_qualifiers_30_0= 'volatile'
                    	            {
                    	            lv_qualifiers_30_0=(Token)match(input,53,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_30_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_7_1_0_16_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_30_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 18 :
                    	            // InternalOCLinEcore.g:4124:6: ( (lv_qualifiers_31_0= '!volatile' ) )
                    	            {
                    	            // InternalOCLinEcore.g:4124:6: ( (lv_qualifiers_31_0= '!volatile' ) )
                    	            // InternalOCLinEcore.g:4125:1: (lv_qualifiers_31_0= '!volatile' )
                    	            {
                    	            // InternalOCLinEcore.g:4125:1: (lv_qualifiers_31_0= '!volatile' )
                    	            // InternalOCLinEcore.g:4126:3: lv_qualifiers_31_0= '!volatile'
                    	            {
                    	            lv_qualifiers_31_0=(Token)match(input,71,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_31_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_7_1_0_17_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_31_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalOCLinEcore.g:4139:3: (otherlv_32= ',' )?
                    	    int alt117=2;
                    	    int LA117_0 = input.LA(1);

                    	    if ( (LA117_0==60) ) {
                    	        alt117=1;
                    	    }
                    	    switch (alt117) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:4139:5: otherlv_32= ','
                    	            {
                    	            otherlv_32=(Token)match(input,60,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_32, grammarAccess.getReferenceCSAccess().getCommaKeyword_7_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);

                    otherlv_33=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_7_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:4147:3: ( (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' ) | otherlv_54= ';' )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==61) ) {
                alt126=1;
            }
            else if ( (LA126_0==58) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalOCLinEcore.g:4147:4: (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' )
                    {
                    // InternalOCLinEcore.g:4147:4: (otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}' )
                    // InternalOCLinEcore.g:4147:6: otherlv_34= '{' ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )* otherlv_53= '}'
                    {
                    otherlv_34=(Token)match(input,61,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_34, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_8_0_0());

                    }
                    // InternalOCLinEcore.g:4151:1: ( ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) ) | (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' ) | (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' ) | (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' ) | ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' ) )*
                    loop125:
                    do {
                        int alt125=6;
                        switch ( input.LA(1) ) {
                        case RULE_ML_DOCUMENTATION:
                        case 59:
                        case 74:
                        case 81:
                            {
                            alt125=1;
                            }
                            break;
                        case 36:
                            {
                            alt125=2;
                            }
                            break;
                        case 34:
                            {
                            alt125=3;
                            }
                            break;
                        case 28:
                            {
                            alt125=4;
                            }
                            break;
                        case 77:
                            {
                            alt125=5;
                            }
                            break;

                        }

                        switch (alt125) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4151:2: ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4151:2: ( (lv_ownedAnnotations_35_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:4152:1: (lv_ownedAnnotations_35_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:4152:1: (lv_ownedAnnotations_35_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:4153:3: lv_ownedAnnotations_35_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_8_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_86);
                    	    lv_ownedAnnotations_35_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_35_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:4170:6: (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:4170:6: (otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';' )
                    	    // InternalOCLinEcore.g:4170:8: otherlv_36= 'key' ( ( ruleUnrestrictedName ) ) (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )* otherlv_40= ';'
                    	    {
                    	    otherlv_36=(Token)match(input,36,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_36, grammarAccess.getReferenceCSAccess().getKeyKeyword_8_0_1_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:4174:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalOCLinEcore.g:4175:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalOCLinEcore.g:4175:1: ( ruleUnrestrictedName )
                    	    // InternalOCLinEcore.g:4176:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredKeysPropertyCrossReference_8_0_1_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    // InternalOCLinEcore.g:4192:2: (otherlv_38= ',' ( ( ruleUnrestrictedName ) ) )*
                    	    loop120:
                    	    do {
                    	        int alt120=2;
                    	        int LA120_0 = input.LA(1);

                    	        if ( (LA120_0==60) ) {
                    	            alt120=1;
                    	        }


                    	        switch (alt120) {
                    	    	case 1 :
                    	    	    // InternalOCLinEcore.g:4192:4: otherlv_38= ',' ( ( ruleUnrestrictedName ) )
                    	    	    {
                    	    	    otherlv_38=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	          	newLeafNode(otherlv_38, grammarAccess.getReferenceCSAccess().getCommaKeyword_8_0_1_1_2_0());

                    	    	    }
                    	    	    // InternalOCLinEcore.g:4196:1: ( ( ruleUnrestrictedName ) )
                    	    	    // InternalOCLinEcore.g:4197:1: ( ruleUnrestrictedName )
                    	    	    {
                    	    	    // InternalOCLinEcore.g:4197:1: ( ruleUnrestrictedName )
                    	    	    // InternalOCLinEcore.g:4198:3: ruleUnrestrictedName
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      		  /* */

                    	    	    }
                    	    	    if ( state.backtracking==0 ) {

                    	    	      			if (current==null) {
                    	    	      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	    	      	        }

                    	    	    }
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredKeysPropertyCrossReference_8_0_1_1_2_1_0());

                    	    	    }
                    	    	    pushFollow(FollowSets000.FOLLOW_87);
                    	    	    ruleUnrestrictedName();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        afterParserOrEnumRuleCall();

                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop120;
                    	        }
                    	    } while (true);

                    	    otherlv_40=(Token)match(input,58,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_40, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_8_0_1_1_3());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:4219:6: (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:4219:6: (otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';' )
                    	    // InternalOCLinEcore.g:4219:8: otherlv_41= 'initial' ( ruleUnrestrictedName )? otherlv_43= ':' ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )? otherlv_45= ';'
                    	    {
                    	    otherlv_41=(Token)match(input,34,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_41, grammarAccess.getReferenceCSAccess().getInitialKeyword_8_0_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4223:1: ( ruleUnrestrictedName )?
                    	    int alt121=2;
                    	    int LA121_0 = input.LA(1);

                    	    if ( ((LA121_0>=RULE_SIMPLE_ID && LA121_0<=RULE_ESCAPED_ID)||LA121_0==18||(LA121_0>=20 && LA121_0<=54)||LA121_0==59||LA121_0==72||(LA121_0>=74 && LA121_0<=75)||LA121_0==77||LA121_0==81) ) {
                    	        alt121=1;
                    	    }
                    	    switch (alt121) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:4224:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_8_0_1_2_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_18);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_43=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_43, grammarAccess.getReferenceCSAccess().getColonKeyword_8_0_1_2_2());

                    	    }
                    	    // InternalOCLinEcore.g:4238:1: ( (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS ) )?
                    	    int alt122=2;
                    	    int LA122_0 = input.LA(1);

                    	    if ( ((LA122_0>=RULE_INT && LA122_0<=RULE_SINGLE_QUOTED_STRING)||LA122_0==RULE_UNQUOTED_STRING||(LA122_0>=RULE_SIMPLE_ID && LA122_0<=RULE_ESCAPED_ID)||(LA122_0>=18 && LA122_0<=55)||LA122_0==59||LA122_0==72||(LA122_0>=74 && LA122_0<=75)||LA122_0==77||LA122_0==81||(LA122_0>=84 && LA122_0<=86)||(LA122_0>=104 && LA122_0<=105)||(LA122_0>=107 && LA122_0<=119)||LA122_0==122||(LA122_0>=124 && LA122_0<=127)||LA122_0==134||(LA122_0>=139 && LA122_0<=140)) ) {
                    	        alt122=1;
                    	    }
                    	    switch (alt122) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:4239:1: (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:4239:1: (lv_ownedDefaultExpressions_44_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:4240:3: lv_ownedDefaultExpressions_44_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_8_0_1_2_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_15);
                    	            lv_ownedDefaultExpressions_44_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_44_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_45=(Token)match(input,58,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_45, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_8_0_1_2_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:4261:6: (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:4261:6: (otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';' )
                    	    // InternalOCLinEcore.g:4261:8: otherlv_46= 'derivation' ( ruleUnrestrictedName )? otherlv_48= ':' ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )? otherlv_50= ';'
                    	    {
                    	    otherlv_46=(Token)match(input,28,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_46, grammarAccess.getReferenceCSAccess().getDerivationKeyword_8_0_1_3_0());

                    	    }
                    	    // InternalOCLinEcore.g:4265:1: ( ruleUnrestrictedName )?
                    	    int alt123=2;
                    	    int LA123_0 = input.LA(1);

                    	    if ( ((LA123_0>=RULE_SIMPLE_ID && LA123_0<=RULE_ESCAPED_ID)||LA123_0==18||(LA123_0>=20 && LA123_0<=54)||LA123_0==59||LA123_0==72||(LA123_0>=74 && LA123_0<=75)||LA123_0==77||LA123_0==81) ) {
                    	        alt123=1;
                    	    }
                    	    switch (alt123) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:4266:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_8_0_1_3_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_18);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_48=(Token)match(input,57,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_48, grammarAccess.getReferenceCSAccess().getColonKeyword_8_0_1_3_2());

                    	    }
                    	    // InternalOCLinEcore.g:4280:1: ( (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS ) )?
                    	    int alt124=2;
                    	    int LA124_0 = input.LA(1);

                    	    if ( ((LA124_0>=RULE_INT && LA124_0<=RULE_SINGLE_QUOTED_STRING)||LA124_0==RULE_UNQUOTED_STRING||(LA124_0>=RULE_SIMPLE_ID && LA124_0<=RULE_ESCAPED_ID)||(LA124_0>=18 && LA124_0<=55)||LA124_0==59||LA124_0==72||(LA124_0>=74 && LA124_0<=75)||LA124_0==77||LA124_0==81||(LA124_0>=84 && LA124_0<=86)||(LA124_0>=104 && LA124_0<=105)||(LA124_0>=107 && LA124_0<=119)||LA124_0==122||(LA124_0>=124 && LA124_0<=127)||LA124_0==134||(LA124_0>=139 && LA124_0<=140)) ) {
                    	        alt124=1;
                    	    }
                    	    switch (alt124) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:4281:1: (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS )
                    	            {
                    	            // InternalOCLinEcore.g:4281:1: (lv_ownedDefaultExpressions_49_0= ruleSpecificationCS )
                    	            // InternalOCLinEcore.g:4282:3: lv_ownedDefaultExpressions_49_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_8_0_1_3_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_15);
                    	            lv_ownedDefaultExpressions_49_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_49_0,
                    	                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_50=(Token)match(input,58,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_50, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_8_0_1_3_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalOCLinEcore.g:4303:6: ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' )
                    	    {
                    	    // InternalOCLinEcore.g:4303:6: ( ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';' )
                    	    // InternalOCLinEcore.g:4303:7: ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) ) otherlv_52= ';'
                    	    {
                    	    // InternalOCLinEcore.g:4303:7: ( (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS ) )
                    	    // InternalOCLinEcore.g:4304:1: (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS )
                    	    {
                    	    // InternalOCLinEcore.g:4304:1: (lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS )
                    	    // InternalOCLinEcore.g:4305:3: lv_ownedImplicitOpposites_51_0= ruleImplicitOppositeCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedImplicitOppositesImplicitOppositeCSParserRuleCall_8_0_1_4_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    lv_ownedImplicitOpposites_51_0=ruleImplicitOppositeCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedImplicitOpposites",
                    	              		lv_ownedImplicitOpposites_51_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.ImplicitOppositeCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    otherlv_52=(Token)match(input,58,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_52, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_8_0_1_4_1());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);

                    otherlv_53=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_53, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_8_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4330:7: otherlv_54= ';'
                    {
                    otherlv_54=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_54, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_8_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCS"


    // $ANTLR start "entryRuleSpecificationCS"
    // InternalOCLinEcore.g:4342:1: entryRuleSpecificationCS returns [EObject current=null] : iv_ruleSpecificationCS= ruleSpecificationCS EOF ;
    public final EObject entryRuleSpecificationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecificationCS = null;


        try {
            // InternalOCLinEcore.g:4343:2: (iv_ruleSpecificationCS= ruleSpecificationCS EOF )
            // InternalOCLinEcore.g:4344:2: iv_ruleSpecificationCS= ruleSpecificationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecificationCS=ruleSpecificationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecificationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecificationCS"


    // $ANTLR start "ruleSpecificationCS"
    // InternalOCLinEcore.g:4351:1: ruleSpecificationCS returns [EObject current=null] : ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) ;
    public final EObject ruleSpecificationCS() throws RecognitionException {
        EObject current = null;

        Token lv_exprString_1_0=null;
        EObject lv_ownedExpression_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4354:28: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) )
            // InternalOCLinEcore.g:4355:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            {
            // InternalOCLinEcore.g:4355:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( ((LA127_0>=RULE_INT && LA127_0<=RULE_SINGLE_QUOTED_STRING)||(LA127_0>=RULE_SIMPLE_ID && LA127_0<=RULE_ESCAPED_ID)||(LA127_0>=18 && LA127_0<=55)||LA127_0==59||LA127_0==72||(LA127_0>=74 && LA127_0<=75)||LA127_0==77||LA127_0==81||(LA127_0>=84 && LA127_0<=86)||(LA127_0>=104 && LA127_0<=105)||(LA127_0>=107 && LA127_0<=119)||LA127_0==122||(LA127_0>=124 && LA127_0<=127)||LA127_0==134||(LA127_0>=139 && LA127_0<=140)) ) {
                alt127=1;
            }
            else if ( (LA127_0==RULE_UNQUOTED_STRING) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalOCLinEcore.g:4355:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    {
                    // InternalOCLinEcore.g:4355:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:4356:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:4356:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalOCLinEcore.g:4357:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4374:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    {
                    // InternalOCLinEcore.g:4374:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    // InternalOCLinEcore.g:4375:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:4375:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    // InternalOCLinEcore.g:4376:3: lv_exprString_1_0= RULE_UNQUOTED_STRING
                    {
                    lv_exprString_1_0=(Token)match(input,RULE_UNQUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSpecificationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"exprString",
                              		lv_exprString_1_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UNQUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecificationCS"


    // $ANTLR start "entryRuleStructuredClassCS"
    // InternalOCLinEcore.g:4400:1: entryRuleStructuredClassCS returns [EObject current=null] : iv_ruleStructuredClassCS= ruleStructuredClassCS EOF ;
    public final EObject entryRuleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredClassCS = null;


        try {
            // InternalOCLinEcore.g:4401:2: (iv_ruleStructuredClassCS= ruleStructuredClassCS EOF )
            // InternalOCLinEcore.g:4402:2: iv_ruleStructuredClassCS= ruleStructuredClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuredClassCS=ruleStructuredClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredClassCS"


    // $ANTLR start "ruleStructuredClassCS"
    // InternalOCLinEcore.g:4409:1: ruleStructuredClassCS returns [EObject current=null] : ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? otherlv_2= 'class' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )? (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )? ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' ) ) ;
    public final EObject ruleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_instanceClassName_10_0=null;
        Token otherlv_11=null;
        Token lv_isInterface_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        EObject lv_ownedAnnotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedSignature_4_0 = null;

        EObject lv_ownedSuperTypes_6_0 = null;

        EObject lv_ownedSuperTypes_8_0 = null;

        EObject lv_ownedAnnotations_15_0 = null;

        EObject lv_ownedOperations_16_0 = null;

        EObject lv_ownedProperties_17_0 = null;

        EObject lv_ownedConstraints_18_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4412:28: ( ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? otherlv_2= 'class' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )? (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )? ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' ) ) )
            // InternalOCLinEcore.g:4413:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? otherlv_2= 'class' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )? (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )? ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' ) )
            {
            // InternalOCLinEcore.g:4413:1: ( ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? otherlv_2= 'class' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )? (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )? ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' ) )
            // InternalOCLinEcore.g:4413:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )? ( (lv_isAbstract_1_0= 'abstract' ) )? otherlv_2= 'class' ( (lv_name_3_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )? (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )? (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )? ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' )
            {
            // InternalOCLinEcore.g:4413:2: ( (lv_ownedAnnotations_0_0= ruleCommentCS ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==RULE_ML_DOCUMENTATION) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalOCLinEcore.g:4414:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    {
                    // InternalOCLinEcore.g:4414:1: (lv_ownedAnnotations_0_0= ruleCommentCS )
                    // InternalOCLinEcore.g:4415:3: lv_ownedAnnotations_0_0= ruleCommentCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedAnnotationsCommentCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_88);
                    lv_ownedAnnotations_0_0=ruleCommentCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedAnnotations",
                              		lv_ownedAnnotations_0_0,
                              		"org.eclipse.ocl.xtext.base.Base.CommentCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:4431:3: ( (lv_isAbstract_1_0= 'abstract' ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==20) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalOCLinEcore.g:4432:1: (lv_isAbstract_1_0= 'abstract' )
                    {
                    // InternalOCLinEcore.g:4432:1: (lv_isAbstract_1_0= 'abstract' )
                    // InternalOCLinEcore.g:4433:3: lv_isAbstract_1_0= 'abstract'
                    {
                    lv_isAbstract_1_0=(Token)match(input,20,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_1_0, grammarAccess.getStructuredClassCSAccess().getIsAbstractAbstractKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getStructuredClassCSAccess().getClassKeyword_2());

            }
            // InternalOCLinEcore.g:4450:1: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:4451:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:4451:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:4452:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_90);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:4468:2: ( (lv_ownedSignature_4_0= ruleTemplateSignatureCS ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==55||LA130_0==82) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalOCLinEcore.g:4469:1: (lv_ownedSignature_4_0= ruleTemplateSignatureCS )
                    {
                    // InternalOCLinEcore.g:4469:1: (lv_ownedSignature_4_0= ruleTemplateSignatureCS )
                    // InternalOCLinEcore.g:4470:3: lv_ownedSignature_4_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_4_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_ownedSignature_4_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_4_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:4486:3: (otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )* )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==31) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalOCLinEcore.g:4486:5: otherlv_5= 'extends' ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) ) (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_5=(Token)match(input,31,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getStructuredClassCSAccess().getExtendsKeyword_5_0());

                    }
                    // InternalOCLinEcore.g:4490:1: ( (lv_ownedSuperTypes_6_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:4491:1: (lv_ownedSuperTypes_6_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:4491:1: (lv_ownedSuperTypes_6_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:4492:3: lv_ownedSuperTypes_6_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_ownedSuperTypes_6_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedSuperTypes",
                              		lv_ownedSuperTypes_6_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4508:2: (otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) ) )*
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==60) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4508:4: otherlv_7= ',' ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getStructuredClassCSAccess().getCommaKeyword_5_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4512:1: ( (lv_ownedSuperTypes_8_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:4513:1: (lv_ownedSuperTypes_8_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:4513:1: (lv_ownedSuperTypes_8_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:4514:3: lv_ownedSuperTypes_8_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_5_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_92);
                    	    lv_ownedSuperTypes_8_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedSuperTypes",
                    	              		lv_ownedSuperTypes_8_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalOCLinEcore.g:4530:6: (otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==57) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalOCLinEcore.g:4530:8: otherlv_9= ':' ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_9=(Token)match(input,57,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getStructuredClassCSAccess().getColonKeyword_6_0());

                    }
                    // InternalOCLinEcore.g:4534:1: ( (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalOCLinEcore.g:4535:1: (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalOCLinEcore.g:4535:1: (lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalOCLinEcore.g:4536:3: lv_instanceClassName_10_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_10_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_10_0, grammarAccess.getStructuredClassCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_6_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_10_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:4552:4: (otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}' )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==61) ) {
                int LA135_1 = input.LA(2);

                if ( (LA135_1==62) ) {
                    int LA135_3 = input.LA(3);

                    if ( (LA135_3==58||LA135_3==61) ) {
                        alt135=1;
                    }
                }
                else if ( (LA135_1==35) ) {
                    alt135=1;
                }
            }
            switch (alt135) {
                case 1 :
                    // InternalOCLinEcore.g:4552:6: otherlv_11= '{' ( (lv_isInterface_12_0= 'interface' ) )? otherlv_13= '}'
                    {
                    otherlv_11=(Token)match(input,61,FollowSets000.FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_7_0());

                    }
                    // InternalOCLinEcore.g:4556:1: ( (lv_isInterface_12_0= 'interface' ) )?
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( (LA134_0==35) ) {
                        alt134=1;
                    }
                    switch (alt134) {
                        case 1 :
                            // InternalOCLinEcore.g:4557:1: (lv_isInterface_12_0= 'interface' )
                            {
                            // InternalOCLinEcore.g:4557:1: (lv_isInterface_12_0= 'interface' )
                            // InternalOCLinEcore.g:4558:3: lv_isInterface_12_0= 'interface'
                            {
                            lv_isInterface_12_0=(Token)match(input,35,FollowSets000.FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isInterface_12_0, grammarAccess.getStructuredClassCSAccess().getIsInterfaceInterfaceKeyword_7_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isInterface", true, "interface");

                            }

                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,62,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_7_2());

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:4575:3: ( (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' ) | otherlv_20= ';' )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==61) ) {
                alt137=1;
            }
            else if ( (LA137_0==58) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalOCLinEcore.g:4575:4: (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' )
                    {
                    // InternalOCLinEcore.g:4575:4: (otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}' )
                    // InternalOCLinEcore.g:4575:6: otherlv_14= '{' ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )* otherlv_19= '}'
                    {
                    otherlv_14=(Token)match(input,61,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_8_0_0());

                    }
                    // InternalOCLinEcore.g:4579:1: ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )*
                    loop136:
                    do {
                        int alt136=5;
                        alt136 = dfa136.predict(input);
                        switch (alt136) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4579:2: ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4579:2: ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) )
                    	    // InternalOCLinEcore.g:4580:1: (lv_ownedAnnotations_15_0= ruleAnnotationElementCS )
                    	    {
                    	    // InternalOCLinEcore.g:4580:1: (lv_ownedAnnotations_15_0= ruleAnnotationElementCS )
                    	    // InternalOCLinEcore.g:4581:3: lv_ownedAnnotations_15_0= ruleAnnotationElementCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedAnnotationsAnnotationElementCSParserRuleCall_8_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedAnnotations_15_0=ruleAnnotationElementCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedAnnotations",
                    	              		lv_ownedAnnotations_15_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.AnnotationElementCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalOCLinEcore.g:4598:6: ( (lv_ownedOperations_16_0= ruleOperationCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4598:6: ( (lv_ownedOperations_16_0= ruleOperationCS ) )
                    	    // InternalOCLinEcore.g:4599:1: (lv_ownedOperations_16_0= ruleOperationCS )
                    	    {
                    	    // InternalOCLinEcore.g:4599:1: (lv_ownedOperations_16_0= ruleOperationCS )
                    	    // InternalOCLinEcore.g:4600:3: lv_ownedOperations_16_0= ruleOperationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedOperationsOperationCSParserRuleCall_8_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedOperations_16_0=ruleOperationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedOperations",
                    	              		lv_ownedOperations_16_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.OperationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalOCLinEcore.g:4617:6: ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4617:6: ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) )
                    	    // InternalOCLinEcore.g:4618:1: (lv_ownedProperties_17_0= ruleStructuralFeatureCS )
                    	    {
                    	    // InternalOCLinEcore.g:4618:1: (lv_ownedProperties_17_0= ruleStructuralFeatureCS )
                    	    // InternalOCLinEcore.g:4619:3: lv_ownedProperties_17_0= ruleStructuralFeatureCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_8_0_1_2_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedProperties_17_0=ruleStructuralFeatureCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedProperties",
                    	              		lv_ownedProperties_17_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.StructuralFeatureCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalOCLinEcore.g:4636:6: ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:4636:6: ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) )
                    	    // InternalOCLinEcore.g:4637:1: (lv_ownedConstraints_18_0= ruleInvariantConstraintCS )
                    	    {
                    	    // InternalOCLinEcore.g:4637:1: (lv_ownedConstraints_18_0= ruleInvariantConstraintCS )
                    	    // InternalOCLinEcore.g:4638:3: lv_ownedConstraints_18_0= ruleInvariantConstraintCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedConstraintsInvariantConstraintCSParserRuleCall_8_0_1_3_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_51);
                    	    lv_ownedConstraints_18_0=ruleInvariantConstraintCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedConstraints",
                    	              		lv_ownedConstraints_18_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.InvariantConstraintCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);

                    otherlv_19=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_8_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4659:7: otherlv_20= ';'
                    {
                    otherlv_20=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getStructuredClassCSAccess().getSemicolonKeyword_8_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredClassCS"


    // $ANTLR start "entryRuleStructuralFeatureCS"
    // InternalOCLinEcore.g:4671:1: entryRuleStructuralFeatureCS returns [EObject current=null] : iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF ;
    public final EObject entryRuleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuralFeatureCS = null;


        try {
            // InternalOCLinEcore.g:4672:2: (iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF )
            // InternalOCLinEcore.g:4673:2: iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuralFeatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuralFeatureCS=ruleStructuralFeatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuralFeatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuralFeatureCS"


    // $ANTLR start "ruleStructuralFeatureCS"
    // InternalOCLinEcore.g:4680:1: ruleStructuralFeatureCS returns [EObject current=null] : (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) ;
    public final EObject ruleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject this_AttributeCS_0 = null;

        EObject this_ReferenceCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4683:28: ( (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) )
            // InternalOCLinEcore.g:4684:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            {
            // InternalOCLinEcore.g:4684:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            int alt138=2;
            switch ( input.LA(1) ) {
            case RULE_ML_DOCUMENTATION:
                {
                switch ( input.LA(2) ) {
                case 48:
                    {
                    switch ( input.LA(3) ) {
                    case 27:
                        {
                        int LA138_6 = input.LA(4);

                        if ( (LA138_6==44) ) {
                            alt138=2;
                        }
                        else if ( (LA138_6==21) ) {
                            alt138=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 138, 6, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 44:
                        {
                        alt138=2;
                        }
                        break;
                    case 21:
                        {
                        alt138=1;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 2, input);

                        throw nvae;
                    }

                    }
                    break;
                case 27:
                    {
                    switch ( input.LA(3) ) {
                    case 48:
                        {
                        int LA138_7 = input.LA(4);

                        if ( (LA138_7==44) ) {
                            alt138=2;
                        }
                        else if ( (LA138_7==21) ) {
                            alt138=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 138, 7, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 44:
                        {
                        alt138=2;
                        }
                        break;
                    case 21:
                        {
                        alt138=1;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 3, input);

                        throw nvae;
                    }

                    }
                    break;
                case 44:
                    {
                    alt138=2;
                    }
                    break;
                case 21:
                    {
                    alt138=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 138, 1, input);

                    throw nvae;
                }

                }
                break;
            case 48:
                {
                switch ( input.LA(2) ) {
                case 27:
                    {
                    int LA138_6 = input.LA(3);

                    if ( (LA138_6==44) ) {
                        alt138=2;
                    }
                    else if ( (LA138_6==21) ) {
                        alt138=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 44:
                    {
                    alt138=2;
                    }
                    break;
                case 21:
                    {
                    alt138=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 138, 2, input);

                    throw nvae;
                }

                }
                break;
            case 27:
                {
                switch ( input.LA(2) ) {
                case 48:
                    {
                    int LA138_7 = input.LA(3);

                    if ( (LA138_7==44) ) {
                        alt138=2;
                    }
                    else if ( (LA138_7==21) ) {
                        alt138=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 7, input);

                        throw nvae;
                    }
                    }
                    break;
                case 44:
                    {
                    alt138=2;
                    }
                    break;
                case 21:
                    {
                    alt138=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 138, 3, input);

                    throw nvae;
                }

                }
                break;
            case 21:
                {
                alt138=1;
                }
                break;
            case 44:
                {
                alt138=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // InternalOCLinEcore.g:4685:2: this_AttributeCS_0= ruleAttributeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getAttributeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AttributeCS_0=ruleAttributeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AttributeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4698:2: this_ReferenceCS_1= ruleReferenceCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getReferenceCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCS_1=ruleReferenceCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReferenceCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuralFeatureCS"


    // $ANTLR start "entryRuleSysMLCS"
    // InternalOCLinEcore.g:4717:1: entryRuleSysMLCS returns [EObject current=null] : iv_ruleSysMLCS= ruleSysMLCS EOF ;
    public final EObject entryRuleSysMLCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSysMLCS = null;


        try {
            // InternalOCLinEcore.g:4718:2: (iv_ruleSysMLCS= ruleSysMLCS EOF )
            // InternalOCLinEcore.g:4719:2: iv_ruleSysMLCS= ruleSysMLCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSysMLCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSysMLCS=ruleSysMLCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSysMLCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSysMLCS"


    // $ANTLR start "ruleSysMLCS"
    // InternalOCLinEcore.g:4726:1: ruleSysMLCS returns [EObject current=null] : ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) ) ;
    public final EObject ruleSysMLCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_ownedDetails_2_0 = null;

        EObject lv_ownedDetails_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4729:28: ( ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) ) )
            // InternalOCLinEcore.g:4730:1: ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) )
            {
            // InternalOCLinEcore.g:4730:1: ( () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) ) )
            // InternalOCLinEcore.g:4730:2: () otherlv_1= 'sysml' ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) )
            {
            // InternalOCLinEcore.g:4730:2: ()
            // InternalOCLinEcore.g:4731:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSysMLCSAccess().getSysMLCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,81,FollowSets000.FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSysMLCSAccess().getSysmlKeyword_1());

            }
            // InternalOCLinEcore.g:4743:1: ( ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' ) | (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' ) )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==RULE_SINGLE_QUOTED_STRING||(LA140_0>=RULE_SIMPLE_ID && LA140_0<=RULE_ESCAPED_ID)||LA140_0==18||(LA140_0>=20 && LA140_0<=54)||LA140_0==59||LA140_0==72||(LA140_0>=74 && LA140_0<=75)||LA140_0==77||LA140_0==81) ) {
                alt140=1;
            }
            else if ( (LA140_0==61) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalOCLinEcore.g:4743:2: ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' )
                    {
                    // InternalOCLinEcore.g:4743:2: ( ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';' )
                    // InternalOCLinEcore.g:4743:3: ( (lv_ownedDetails_2_0= ruleDetailCS ) ) otherlv_3= ';'
                    {
                    // InternalOCLinEcore.g:4743:3: ( (lv_ownedDetails_2_0= ruleDetailCS ) )
                    // InternalOCLinEcore.g:4744:1: (lv_ownedDetails_2_0= ruleDetailCS )
                    {
                    // InternalOCLinEcore.g:4744:1: (lv_ownedDetails_2_0= ruleDetailCS )
                    // InternalOCLinEcore.g:4745:3: lv_ownedDetails_2_0= ruleDetailCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSysMLCSAccess().getOwnedDetailsDetailCSParserRuleCall_2_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_15);
                    lv_ownedDetails_2_0=ruleDetailCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSysMLCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedDetails",
                              		lv_ownedDetails_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSysMLCSAccess().getSemicolonKeyword_2_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4766:6: (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' )
                    {
                    // InternalOCLinEcore.g:4766:6: (otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}' )
                    // InternalOCLinEcore.g:4766:8: otherlv_4= '{' ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )* otherlv_7= '}'
                    {
                    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSysMLCSAccess().getLeftCurlyBracketKeyword_2_1_0());

                    }
                    // InternalOCLinEcore.g:4770:1: ( ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';' )*
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( (LA139_0==RULE_SINGLE_QUOTED_STRING||(LA139_0>=RULE_SIMPLE_ID && LA139_0<=RULE_ESCAPED_ID)||LA139_0==18||(LA139_0>=20 && LA139_0<=54)||LA139_0==59||LA139_0==72||(LA139_0>=74 && LA139_0<=75)||LA139_0==77||LA139_0==81) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4770:2: ( (lv_ownedDetails_5_0= ruleDetailCS ) ) otherlv_6= ';'
                    	    {
                    	    // InternalOCLinEcore.g:4770:2: ( (lv_ownedDetails_5_0= ruleDetailCS ) )
                    	    // InternalOCLinEcore.g:4771:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    	    {
                    	    // InternalOCLinEcore.g:4771:1: (lv_ownedDetails_5_0= ruleDetailCS )
                    	    // InternalOCLinEcore.g:4772:3: lv_ownedDetails_5_0= ruleDetailCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getSysMLCSAccess().getOwnedDetailsDetailCSParserRuleCall_2_1_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    lv_ownedDetails_5_0=ruleDetailCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSysMLCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedDetails",
                    	              		lv_ownedDetails_5_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.DetailCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    otherlv_6=(Token)match(input,58,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSysMLCSAccess().getSemicolonKeyword_2_1_1_1());

                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getSysMLCSAccess().getRightCurlyBracketKeyword_2_1_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSysMLCS"


    // $ANTLR start "entryRuleTypedMultiplicityRefCS"
    // InternalOCLinEcore.g:4806:1: entryRuleTypedMultiplicityRefCS returns [EObject current=null] : iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF ;
    public final EObject entryRuleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedMultiplicityRefCS = null;


        try {
            // InternalOCLinEcore.g:4807:2: (iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF )
            // InternalOCLinEcore.g:4808:2: iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedMultiplicityRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedMultiplicityRefCS=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedMultiplicityRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedMultiplicityRefCS"


    // $ANTLR start "ruleTypedMultiplicityRefCS"
    // InternalOCLinEcore.g:4815:1: ruleTypedMultiplicityRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4818:28: ( (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:4819:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:4819:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:4820:2: this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getTypedRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_TypedRefCS_0=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypedRefCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:4831:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==130) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalOCLinEcore.g:4832:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:4832:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:4833:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedMultiplicityRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedMultiplicityRefCS"


    // $ANTLR start "entryRuleTemplateSignatureCS"
    // InternalOCLinEcore.g:4857:1: entryRuleTemplateSignatureCS returns [EObject current=null] : iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF ;
    public final EObject entryRuleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateSignatureCS = null;


        try {
            // InternalOCLinEcore.g:4858:2: (iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF )
            // InternalOCLinEcore.g:4859:2: iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateSignatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateSignatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateSignatureCS"


    // $ANTLR start "ruleTemplateSignatureCS"
    // InternalOCLinEcore.g:4866:1: ruleTemplateSignatureCS returns [EObject current=null] : ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) ) ;
    public final EObject ruleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_ownedParameters_1_0 = null;

        EObject lv_ownedParameters_3_0 = null;

        EObject lv_ownedParameters_6_0 = null;

        EObject lv_ownedParameters_8_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4869:28: ( ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) ) )
            // InternalOCLinEcore.g:4870:1: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) )
            {
            // InternalOCLinEcore.g:4870:1: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) | (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' ) )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==55) ) {
                alt144=1;
            }
            else if ( (LA144_0==82) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalOCLinEcore.g:4870:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
                    {
                    // InternalOCLinEcore.g:4870:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
                    // InternalOCLinEcore.g:4870:4: otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0_0());

                    }
                    // InternalOCLinEcore.g:4874:1: ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) )
                    // InternalOCLinEcore.g:4875:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
                    {
                    // InternalOCLinEcore.g:4875:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
                    // InternalOCLinEcore.g:4876:3: lv_ownedParameters_1_0= ruleTypeParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_ownedParameters_1_0=ruleTypeParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4892:2: (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==60) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4892:4: otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4896:1: ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
                    	    // InternalOCLinEcore.g:4897:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:4897:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
                    	    // InternalOCLinEcore.g:4898:3: lv_ownedParameters_3_0= ruleTypeParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    lv_ownedParameters_3_0=ruleTypeParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_0_3());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:4919:6: (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' )
                    {
                    // InternalOCLinEcore.g:4919:6: (otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>' )
                    // InternalOCLinEcore.g:4919:8: otherlv_5= '<' ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) ) (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )* otherlv_9= '>'
                    {
                    otherlv_5=(Token)match(input,82,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTemplateSignatureCSAccess().getLessThanSignKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:4923:1: ( (lv_ownedParameters_6_0= ruleTypeParameterCS ) )
                    // InternalOCLinEcore.g:4924:1: (lv_ownedParameters_6_0= ruleTypeParameterCS )
                    {
                    // InternalOCLinEcore.g:4924:1: (lv_ownedParameters_6_0= ruleTypeParameterCS )
                    // InternalOCLinEcore.g:4925:3: lv_ownedParameters_6_0= ruleTypeParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_ownedParameters_6_0=ruleTypeParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:4941:2: (otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==60) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:4941:4: otherlv_7= ',' ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) )
                    	    {
                    	    otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:4945:1: ( (lv_ownedParameters_8_0= ruleTypeParameterCS ) )
                    	    // InternalOCLinEcore.g:4946:1: (lv_ownedParameters_8_0= ruleTypeParameterCS )
                    	    {
                    	    // InternalOCLinEcore.g:4946:1: (lv_ownedParameters_8_0= ruleTypeParameterCS )
                    	    // InternalOCLinEcore.g:4947:3: lv_ownedParameters_8_0= ruleTypeParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_ownedParameters_8_0=ruleTypeParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_8_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getTemplateSignatureCSAccess().getGreaterThanSignKeyword_1_3());

                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateSignatureCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalOCLinEcore.g:4975:1: entryRuleTypedRefCS returns [EObject current=null] : iv_ruleTypedRefCS= ruleTypedRefCS EOF ;
    public final EObject entryRuleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedRefCS = null;


        try {
            // InternalOCLinEcore.g:4976:2: (iv_ruleTypedRefCS= ruleTypedRefCS EOF )
            // InternalOCLinEcore.g:4977:2: iv_ruleTypedRefCS= ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedRefCS=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalOCLinEcore.g:4984:1: ruleTypedRefCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) ;
    public final EObject ruleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject this_TypedTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:4987:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) )
            // InternalOCLinEcore.g:4988:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            {
            // InternalOCLinEcore.g:4988:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( ((LA145_0>=104 && LA145_0<=105)||(LA145_0>=107 && LA145_0<=119)) ) {
                alt145=1;
            }
            else if ( ((LA145_0>=RULE_SIMPLE_ID && LA145_0<=RULE_ESCAPED_ID)||LA145_0==18||(LA145_0>=20 && LA145_0<=54)||LA145_0==59||LA145_0==72||(LA145_0>=74 && LA145_0<=75)||LA145_0==77||LA145_0==81) ) {
                alt145=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // InternalOCLinEcore.g:4989:2: this_TypeLiteralCS_0= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypeLiteralCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_0=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5002:2: this_TypedTypeRefCS_1= ruleTypedTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedTypeRefCS_1=ruleTypedTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalOCLinEcore.g:5021:1: entryRuleTypedTypeRefCS returns [EObject current=null] : iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF ;
    public final EObject entryRuleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:5022:2: (iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF )
            // InternalOCLinEcore.g:5023:2: iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalOCLinEcore.g:5030:1: ruleTypedTypeRefCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? ) ;
    public final EObject ruleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedBinding_2_0 = null;

        EObject lv_ownedBinding_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5033:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? ) )
            // InternalOCLinEcore.g:5034:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? )
            {
            // InternalOCLinEcore.g:5034:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )? )
            // InternalOCLinEcore.g:5034:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )?
            {
            // InternalOCLinEcore.g:5034:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:5035:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:5035:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:5036:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_98);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:5052:2: ( (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' ) | (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' ) )?
            int alt146=3;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==55) ) {
                alt146=1;
            }
            else if ( (LA146_0==82) ) {
                alt146=2;
            }
            switch (alt146) {
                case 1 :
                    // InternalOCLinEcore.g:5052:3: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )
                    {
                    // InternalOCLinEcore.g:5052:3: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )
                    // InternalOCLinEcore.g:5052:5: otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0_0());

                    }
                    // InternalOCLinEcore.g:5056:1: ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) )
                    // InternalOCLinEcore.g:5057:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    {
                    // InternalOCLinEcore.g:5057:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    // InternalOCLinEcore.g:5058:3: lv_ownedBinding_2_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ownedBinding_2_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5079:6: (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' )
                    {
                    // InternalOCLinEcore.g:5079:6: (otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>' )
                    // InternalOCLinEcore.g:5079:8: otherlv_4= '<' ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) ) otherlv_6= '>'
                    {
                    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTypedTypeRefCSAccess().getLessThanSignKeyword_1_1_0());

                    }
                    // InternalOCLinEcore.g:5083:1: ( (lv_ownedBinding_5_0= ruleTemplateBindingCS ) )
                    // InternalOCLinEcore.g:5084:1: (lv_ownedBinding_5_0= ruleTemplateBindingCS )
                    {
                    // InternalOCLinEcore.g:5084:1: (lv_ownedBinding_5_0= ruleTemplateBindingCS )
                    // InternalOCLinEcore.g:5085:3: lv_ownedBinding_5_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_ownedBinding_5_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_6=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTypedTypeRefCSAccess().getGreaterThanSignKeyword_1_1_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalOCLinEcore.g:5113:1: entryRuleUnrestrictedName returns [String current=null] : iv_ruleUnrestrictedName= ruleUnrestrictedName EOF ;
    public final String entryRuleUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnrestrictedName = null;


        try {
            // InternalOCLinEcore.g:5114:2: (iv_ruleUnrestrictedName= ruleUnrestrictedName EOF )
            // InternalOCLinEcore.g:5115:2: iv_ruleUnrestrictedName= ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnrestrictedName=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalOCLinEcore.g:5122:1: ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' ) ;
    public final AntlrDatatypeRuleToken ruleUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EnumerationLiteralName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5125:28: ( (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' ) )
            // InternalOCLinEcore.g:5126:1: (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' )
            {
            // InternalOCLinEcore.g:5126:1: (this_EnumerationLiteralName_0= ruleEnumerationLiteralName | kw= 'annotation' | kw= 'documentation' | kw= 'invariant' | kw= 'literal' | kw= 'opposite' | kw= 'serializable' | kw= 'sysml' )
            int alt147=8;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 18:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
                {
                alt147=1;
                }
                break;
            case 59:
                {
                alt147=2;
                }
                break;
            case 74:
                {
                alt147=3;
                }
                break;
            case 54:
                {
                alt147=4;
                }
                break;
            case 75:
                {
                alt147=5;
                }
                break;
            case 77:
                {
                alt147=6;
                }
                break;
            case 72:
                {
                alt147=7;
                }
                break;
            case 81:
                {
                alt147=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }

            switch (alt147) {
                case 1 :
                    // InternalOCLinEcore.g:5127:5: this_EnumerationLiteralName_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEnumerationLiteralNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationLiteralName_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EnumerationLiteralName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5139:2: kw= 'annotation'
                    {
                    kw=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getAnnotationKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5146:2: kw= 'documentation'
                    {
                    kw=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getDocumentationKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5153:2: kw= 'invariant'
                    {
                    kw=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getInvariantKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5160:2: kw= 'literal'
                    {
                    kw=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getLiteralKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:5167:2: kw= 'opposite'
                    {
                    kw=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getOppositeKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:5174:2: kw= 'serializable'
                    {
                    kw=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getSerializableKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:5181:2: kw= 'sysml'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUnrestrictedNameAccess().getSysmlKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalOCLinEcore.g:5198:1: entryRuleEssentialOCLUnaryOperatorName returns [String current=null] : iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF ;
    public final String entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:5199:2: (iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF )
            // InternalOCLinEcore.g:5200:2: iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalOCLinEcore.g:5207:1: ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '-' | kw= 'not' | kw= 'not2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5210:28: ( (kw= '-' | kw= 'not' | kw= 'not2' ) )
            // InternalOCLinEcore.g:5211:1: (kw= '-' | kw= 'not' | kw= 'not2' )
            {
            // InternalOCLinEcore.g:5211:1: (kw= '-' | kw= 'not' | kw= 'not2' )
            int alt148=3;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt148=1;
                }
                break;
            case 84:
                {
                alt148=2;
                }
                break;
            case 85:
                {
                alt148=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // InternalOCLinEcore.g:5212:2: kw= '-'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5219:2: kw= 'not'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5226:2: kw= 'not2'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNot2Keyword_2());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalOCLinEcore.g:5239:1: entryRuleEssentialOCLInfixOperatorName returns [String current=null] : iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF ;
    public final String entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLInfixOperatorName = null;


        try {
            // InternalOCLinEcore.g:5240:2: (iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF )
            // InternalOCLinEcore.g:5241:2: iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalOCLinEcore.g:5248:1: ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5251:28: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) )
            // InternalOCLinEcore.g:5252:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            {
            // InternalOCLinEcore.g:5252:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            int alt149=18;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt149=1;
                }
                break;
            case 87:
                {
                alt149=2;
                }
                break;
            case 88:
                {
                alt149=3;
                }
                break;
            case 19:
                {
                alt149=4;
                }
                break;
            case 83:
                {
                alt149=5;
                }
                break;
            case 82:
                {
                alt149=6;
                }
                break;
            case 89:
                {
                alt149=7;
                }
                break;
            case 90:
                {
                alt149=8;
                }
                break;
            case 63:
                {
                alt149=9;
                }
                break;
            case 91:
                {
                alt149=10;
                }
                break;
            case 92:
                {
                alt149=11;
                }
                break;
            case 93:
                {
                alt149=12;
                }
                break;
            case 94:
                {
                alt149=13;
                }
                break;
            case 95:
                {
                alt149=14;
                }
                break;
            case 96:
                {
                alt149=15;
                }
                break;
            case 97:
                {
                alt149=16;
                }
                break;
            case 98:
                {
                alt149=17;
                }
                break;
            case 99:
                {
                alt149=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }

            switch (alt149) {
                case 1 :
                    // InternalOCLinEcore.g:5253:2: kw= '*'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5260:2: kw= '/'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5267:2: kw= '+'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5274:2: kw= '-'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5281:2: kw= '>'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:5288:2: kw= '<'
                    {
                    kw=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:5295:2: kw= '>='
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:5302:2: kw= '<='
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:5309:2: kw= '='
                    {
                    kw=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:5316:2: kw= '<>'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalOCLinEcore.g:5323:2: kw= 'and'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalOCLinEcore.g:5330:2: kw= 'and2'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAnd2Keyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalOCLinEcore.g:5337:2: kw= 'implies'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalOCLinEcore.g:5344:2: kw= 'implies2'
                    {
                    kw=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImplies2Keyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalOCLinEcore.g:5351:2: kw= 'or'
                    {
                    kw=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalOCLinEcore.g:5358:2: kw= 'or2'
                    {
                    kw=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOr2Keyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalOCLinEcore.g:5365:2: kw= 'xor'
                    {
                    kw=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalOCLinEcore.g:5372:2: kw= 'xor2'
                    {
                    kw=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXor2Keyword_17());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalOCLinEcore.g:5385:1: entryRuleEssentialOCLNavigationOperatorName returns [String current=null] : iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF ;
    public final String entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLNavigationOperatorName = null;


        try {
            // InternalOCLinEcore.g:5386:2: (iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF )
            // InternalOCLinEcore.g:5387:2: iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalOCLinEcore.g:5394:1: ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5397:28: ( (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) )
            // InternalOCLinEcore.g:5398:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            {
            // InternalOCLinEcore.g:5398:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            int alt150=4;
            switch ( input.LA(1) ) {
            case 100:
                {
                alt150=1;
                }
                break;
            case 101:
                {
                alt150=2;
                }
                break;
            case 102:
                {
                alt150=3;
                }
                break;
            case 103:
                {
                alt150=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }

            switch (alt150) {
                case 1 :
                    // InternalOCLinEcore.g:5399:2: kw= '.'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5406:2: kw= '->'
                    {
                    kw=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5413:2: kw= '?.'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5420:2: kw= '?->'
                    {
                    kw=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalOCLinEcore.g:5433:1: entryRuleBinaryOperatorName returns [String current=null] : iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF ;
    public final String entryRuleBinaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:5434:2: (iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF )
            // InternalOCLinEcore.g:5435:2: iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBinaryOperatorName=ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalOCLinEcore.g:5442:1: ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_InfixOperatorName_0 = null;

        AntlrDatatypeRuleToken this_NavigationOperatorName_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5445:28: ( (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) )
            // InternalOCLinEcore.g:5446:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            {
            // InternalOCLinEcore.g:5446:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==19||LA151_0==63||(LA151_0>=82 && LA151_0<=83)||(LA151_0>=86 && LA151_0<=99)) ) {
                alt151=1;
            }
            else if ( ((LA151_0>=100 && LA151_0<=103)) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalOCLinEcore.g:5447:5: this_InfixOperatorName_0= ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InfixOperatorName_0=ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_InfixOperatorName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5459:5: this_NavigationOperatorName_1= ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NavigationOperatorName_1=ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NavigationOperatorName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalOCLinEcore.g:5477:1: entryRuleInfixOperatorName returns [String current=null] : iv_ruleInfixOperatorName= ruleInfixOperatorName EOF ;
    public final String entryRuleInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperatorName = null;


        try {
            // InternalOCLinEcore.g:5478:2: (iv_ruleInfixOperatorName= ruleInfixOperatorName EOF )
            // InternalOCLinEcore.g:5479:2: iv_ruleInfixOperatorName= ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInfixOperatorName=ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalOCLinEcore.g:5486:1: ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName ;
    public final AntlrDatatypeRuleToken ruleInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLInfixOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5489:28: (this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName )
            // InternalOCLinEcore.g:5491:5: this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLInfixOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalOCLinEcore.g:5509:1: entryRuleNavigationOperatorName returns [String current=null] : iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF ;
    public final String entryRuleNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNavigationOperatorName = null;


        try {
            // InternalOCLinEcore.g:5510:2: (iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF )
            // InternalOCLinEcore.g:5511:2: iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigationOperatorName=ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalOCLinEcore.g:5518:1: ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName ;
    public final AntlrDatatypeRuleToken ruleNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLNavigationOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5521:28: (this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName )
            // InternalOCLinEcore.g:5523:5: this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLNavigationOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalOCLinEcore.g:5541:1: entryRuleUnaryOperatorName returns [String current=null] : iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF ;
    public final String entryRuleUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperatorName = null;


        try {
            // InternalOCLinEcore.g:5542:2: (iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF )
            // InternalOCLinEcore.g:5543:2: iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnaryOperatorName=ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalOCLinEcore.g:5550:1: ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName ;
    public final AntlrDatatypeRuleToken ruleUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnaryOperatorName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5553:28: (this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName )
            // InternalOCLinEcore.g:5555:5: this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnaryOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalOCLinEcore.g:5573:1: entryRuleEssentialOCLUnrestrictedName returns [String current=null] : iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF ;
    public final String entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnrestrictedName = null;


        try {
            // InternalOCLinEcore.g:5574:2: (iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF )
            // InternalOCLinEcore.g:5575:2: iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalOCLinEcore.g:5582:1: ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Identifier_0= ruleIdentifier ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Identifier_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5585:28: (this_Identifier_0= ruleIdentifier )
            // InternalOCLinEcore.g:5587:5: this_Identifier_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Identifier_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalOCLinEcore.g:5605:1: entryRuleEssentialOCLUnreservedName returns [String current=null] : iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF ;
    public final String entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnreservedName = null;


        try {
            // InternalOCLinEcore.g:5606:2: (iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF )
            // InternalOCLinEcore.g:5607:2: iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalOCLinEcore.g:5614:1: ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_CollectionTypeIdentifier_1 = null;

        AntlrDatatypeRuleToken this_PrimitiveTypeIdentifier_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5617:28: ( (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) )
            // InternalOCLinEcore.g:5618:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            {
            // InternalOCLinEcore.g:5618:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            int alt152=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 18:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 59:
            case 72:
            case 74:
            case 75:
            case 77:
            case 81:
                {
                alt152=1;
                }
                break;
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
                {
                alt152=2;
                }
                break;
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
                {
                alt152=3;
                }
                break;
            case 104:
                {
                alt152=4;
                }
                break;
            case 105:
                {
                alt152=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }

            switch (alt152) {
                case 1 :
                    // InternalOCLinEcore.g:5619:5: this_UnrestrictedName_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnrestrictedName_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_UnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5631:5: this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CollectionTypeIdentifier_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5643:5: this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrimitiveTypeIdentifier_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5655:2: kw= 'Map'
                    {
                    kw=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5662:2: kw= 'Tuple'
                    {
                    kw=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalOCLinEcore.g:5675:1: entryRuleUnreservedName returns [String current=null] : iv_ruleUnreservedName= ruleUnreservedName EOF ;
    public final String entryRuleUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnreservedName = null;


        try {
            // InternalOCLinEcore.g:5676:2: (iv_ruleUnreservedName= ruleUnreservedName EOF )
            // InternalOCLinEcore.g:5677:2: iv_ruleUnreservedName= ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnreservedName=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalOCLinEcore.g:5684:1: ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName ;
    public final AntlrDatatypeRuleToken ruleUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnreservedName_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5687:28: (this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName )
            // InternalOCLinEcore.g:5689:5: this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnreservedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIPathNameCS"
    // InternalOCLinEcore.g:5707:1: entryRuleURIPathNameCS returns [EObject current=null] : iv_ruleURIPathNameCS= ruleURIPathNameCS EOF ;
    public final EObject entryRuleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIPathNameCS = null;


        try {
            // InternalOCLinEcore.g:5708:2: (iv_ruleURIPathNameCS= ruleURIPathNameCS EOF )
            // InternalOCLinEcore.g:5709:2: iv_ruleURIPathNameCS= ruleURIPathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIPathNameCS=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIPathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIPathNameCS"


    // $ANTLR start "ruleURIPathNameCS"
    // InternalOCLinEcore.g:5716:1: ruleURIPathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject ruleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5719:28: ( ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalOCLinEcore.g:5720:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalOCLinEcore.g:5720:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalOCLinEcore.g:5720:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalOCLinEcore.g:5720:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) )
            // InternalOCLinEcore.g:5721:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            {
            // InternalOCLinEcore.g:5721:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            // InternalOCLinEcore.g:5722:3: lv_ownedPathElements_0_0= ruleURIFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_ownedPathElements_0_0=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:5738:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==106) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalOCLinEcore.g:5738:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,106,FollowSets000.FOLLOW_102); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:5742:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalOCLinEcore.g:5743:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalOCLinEcore.g:5743:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalOCLinEcore.g:5744:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_101);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIPathNameCS"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalOCLinEcore.g:5768:1: entryRuleURIFirstPathElementCS returns [EObject current=null] : iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF ;
    public final EObject entryRuleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIFirstPathElementCS = null;


        try {
            // InternalOCLinEcore.g:5769:2: (iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF )
            // InternalOCLinEcore.g:5770:2: iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalOCLinEcore.g:5777:1: ruleURIFirstPathElementCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) ;
    public final EObject ruleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5780:28: ( ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) )
            // InternalOCLinEcore.g:5781:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            {
            // InternalOCLinEcore.g:5781:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=RULE_SIMPLE_ID && LA154_0<=RULE_ESCAPED_ID)||LA154_0==18||(LA154_0>=20 && LA154_0<=54)||LA154_0==59||LA154_0==72||(LA154_0>=74 && LA154_0<=75)||LA154_0==77||LA154_0==81) ) {
                alt154=1;
            }
            else if ( (LA154_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalOCLinEcore.g:5781:2: ( ( ruleUnrestrictedName ) )
                    {
                    // InternalOCLinEcore.g:5781:2: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:5782:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:5782:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:5783:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5800:6: ( () ( ( ruleURI ) ) )
                    {
                    // InternalOCLinEcore.g:5800:6: ( () ( ( ruleURI ) ) )
                    // InternalOCLinEcore.g:5800:7: () ( ( ruleURI ) )
                    {
                    // InternalOCLinEcore.g:5800:7: ()
                    // InternalOCLinEcore.g:5801:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:5809:2: ( ( ruleURI ) )
                    // InternalOCLinEcore.g:5810:1: ( ruleURI )
                    {
                    // InternalOCLinEcore.g:5810:1: ( ruleURI )
                    // InternalOCLinEcore.g:5811:3: ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalOCLinEcore.g:5837:1: entryRulePrimitiveTypeIdentifier returns [String current=null] : iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF ;
    public final String entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimitiveTypeIdentifier = null;


        try {
            // InternalOCLinEcore.g:5838:2: (iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF )
            // InternalOCLinEcore.g:5839:2: iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalOCLinEcore.g:5846:1: rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) ;
    public final AntlrDatatypeRuleToken rulePrimitiveTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5849:28: ( (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) )
            // InternalOCLinEcore.g:5850:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            {
            // InternalOCLinEcore.g:5850:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            int alt155=8;
            switch ( input.LA(1) ) {
            case 107:
                {
                alt155=1;
                }
                break;
            case 108:
                {
                alt155=2;
                }
                break;
            case 109:
                {
                alt155=3;
                }
                break;
            case 110:
                {
                alt155=4;
                }
                break;
            case 111:
                {
                alt155=5;
                }
                break;
            case 112:
                {
                alt155=6;
                }
                break;
            case 113:
                {
                alt155=7;
                }
                break;
            case 114:
                {
                alt155=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }

            switch (alt155) {
                case 1 :
                    // InternalOCLinEcore.g:5851:2: kw= 'Boolean'
                    {
                    kw=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5858:2: kw= 'Integer'
                    {
                    kw=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5865:2: kw= 'Real'
                    {
                    kw=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5872:2: kw= 'String'
                    {
                    kw=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5879:2: kw= 'UnlimitedNatural'
                    {
                    kw=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:5886:2: kw= 'OclAny'
                    {
                    kw=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:5893:2: kw= 'OclInvalid'
                    {
                    kw=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:5900:2: kw= 'OclVoid'
                    {
                    kw=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalOCLinEcore.g:5913:1: entryRulePrimitiveTypeCS returns [EObject current=null] : iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF ;
    public final EObject entryRulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveTypeCS = null;


        try {
            // InternalOCLinEcore.g:5914:2: (iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF )
            // InternalOCLinEcore.g:5915:2: iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalOCLinEcore.g:5922:1: rulePrimitiveTypeCS returns [EObject current=null] : ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) ;
    public final EObject rulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:5925:28: ( ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) )
            // InternalOCLinEcore.g:5926:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            {
            // InternalOCLinEcore.g:5926:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            // InternalOCLinEcore.g:5927:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            {
            // InternalOCLinEcore.g:5927:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            // InternalOCLinEcore.g:5928:3: lv_name_0_0= rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrimitiveTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalOCLinEcore.g:5952:1: entryRuleCollectionTypeIdentifier returns [String current=null] : iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF ;
    public final String entryRuleCollectionTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCollectionTypeIdentifier = null;


        try {
            // InternalOCLinEcore.g:5953:2: (iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF )
            // InternalOCLinEcore.g:5954:2: iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalOCLinEcore.g:5961:1: ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) ;
    public final AntlrDatatypeRuleToken ruleCollectionTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:5964:28: ( (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) )
            // InternalOCLinEcore.g:5965:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            {
            // InternalOCLinEcore.g:5965:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            int alt156=5;
            switch ( input.LA(1) ) {
            case 115:
                {
                alt156=1;
                }
                break;
            case 116:
                {
                alt156=2;
                }
                break;
            case 117:
                {
                alt156=3;
                }
                break;
            case 118:
                {
                alt156=4;
                }
                break;
            case 119:
                {
                alt156=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }

            switch (alt156) {
                case 1 :
                    // InternalOCLinEcore.g:5966:2: kw= 'Set'
                    {
                    kw=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:5973:2: kw= 'Bag'
                    {
                    kw=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:5980:2: kw= 'Sequence'
                    {
                    kw=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:5987:2: kw= 'Collection'
                    {
                    kw=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:5994:2: kw= 'OrderedSet'
                    {
                    kw=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalOCLinEcore.g:6007:1: entryRuleCollectionTypeCS returns [EObject current=null] : iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF ;
    public final EObject entryRuleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTypeCS = null;


        try {
            // InternalOCLinEcore.g:6008:2: (iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF )
            // InternalOCLinEcore.g:6009:2: iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeCS=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalOCLinEcore.g:6016:1: ruleCollectionTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedCollectionMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6019:28: ( ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) )
            // InternalOCLinEcore.g:6020:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            {
            // InternalOCLinEcore.g:6020:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            // InternalOCLinEcore.g:6020:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            {
            // InternalOCLinEcore.g:6020:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) )
            // InternalOCLinEcore.g:6021:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            {
            // InternalOCLinEcore.g:6021:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            // InternalOCLinEcore.g:6022:3: lv_name_0_0= ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_0_0=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:6038:2: (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==55) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalOCLinEcore.g:6038:4: otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:6042:1: ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) )
                    // InternalOCLinEcore.g:6043:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:6043:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    // InternalOCLinEcore.g:6044:3: lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_104);
                    lv_ownedType_2_0=ruleTypeExpWithoutMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpWithoutMultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6060:2: ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==130) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalOCLinEcore.g:6061:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            {
                            // InternalOCLinEcore.g:6061:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            // InternalOCLinEcore.g:6062:3: lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_12);
                            lv_ownedCollectionMultiplicity_3_0=ruleMultiplicityCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCollectionMultiplicity",
                                      		lv_ownedCollectionMultiplicity_3_0,
                                      		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalOCLinEcore.g:6090:1: entryRuleMapTypeCS returns [EObject current=null] : iv_ruleMapTypeCS= ruleMapTypeCS EOF ;
    public final EObject entryRuleMapTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTypeCS = null;


        try {
            // InternalOCLinEcore.g:6091:2: (iv_ruleMapTypeCS= ruleMapTypeCS EOF )
            // InternalOCLinEcore.g:6092:2: iv_ruleMapTypeCS= ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapTypeCS=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalOCLinEcore.g:6099:1: ruleMapTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleMapTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedKeyType_2_0 = null;

        EObject lv_ownedValueType_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6102:28: ( ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) )
            // InternalOCLinEcore.g:6103:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            {
            // InternalOCLinEcore.g:6103:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            // InternalOCLinEcore.g:6103:2: ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            {
            // InternalOCLinEcore.g:6103:2: ( (lv_name_0_0= 'Map' ) )
            // InternalOCLinEcore.g:6104:1: (lv_name_0_0= 'Map' )
            {
            // InternalOCLinEcore.g:6104:1: (lv_name_0_0= 'Map' )
            // InternalOCLinEcore.g:6105:3: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,104,FollowSets000.FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMapTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Map");

            }

            }


            }

            // InternalOCLinEcore.g:6118:2: (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==55) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalOCLinEcore.g:6118:4: otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:6122:1: ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:6123:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:6123:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:6124:3: lv_ownedKeyType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_105);
                    lv_ownedKeyType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedKeyType",
                              		lv_ownedKeyType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());

                    }
                    // InternalOCLinEcore.g:6144:1: ( (lv_ownedValueType_4_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:6145:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:6145:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:6146:3: lv_ownedValueType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ownedValueType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedValueType",
                              		lv_ownedValueType_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalOCLinEcore.g:6174:1: entryRuleTupleTypeCS returns [EObject current=null] : iv_ruleTupleTypeCS= ruleTupleTypeCS EOF ;
    public final EObject entryRuleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTypeCS = null;


        try {
            // InternalOCLinEcore.g:6175:2: (iv_ruleTupleTypeCS= ruleTupleTypeCS EOF )
            // InternalOCLinEcore.g:6176:2: iv_ruleTupleTypeCS= ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleTypeCS=ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalOCLinEcore.g:6183:1: ruleTupleTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6186:28: ( ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) )
            // InternalOCLinEcore.g:6187:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalOCLinEcore.g:6187:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            // InternalOCLinEcore.g:6187:2: ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            {
            // InternalOCLinEcore.g:6187:2: ( (lv_name_0_0= 'Tuple' ) )
            // InternalOCLinEcore.g:6188:1: (lv_name_0_0= 'Tuple' )
            {
            // InternalOCLinEcore.g:6188:1: (lv_name_0_0= 'Tuple' )
            // InternalOCLinEcore.g:6189:3: lv_name_0_0= 'Tuple'
            {
            lv_name_0_0=(Token)match(input,105,FollowSets000.FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTupleTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Tuple");

            }

            }


            }

            // InternalOCLinEcore.g:6202:2: (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==55) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalOCLinEcore.g:6202:4: otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:6206:1: ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( ((LA161_0>=RULE_SIMPLE_ID && LA161_0<=RULE_ESCAPED_ID)||LA161_0==18||(LA161_0>=20 && LA161_0<=54)||LA161_0==59||LA161_0==72||(LA161_0>=74 && LA161_0<=75)||LA161_0==77||LA161_0==81) ) {
                        alt161=1;
                    }
                    switch (alt161) {
                        case 1 :
                            // InternalOCLinEcore.g:6206:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            {
                            // InternalOCLinEcore.g:6206:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) )
                            // InternalOCLinEcore.g:6207:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            {
                            // InternalOCLinEcore.g:6207:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            // InternalOCLinEcore.g:6208:3: lv_ownedParts_2_0= ruleTuplePartCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_22);
                            lv_ownedParts_2_0=ruleTuplePartCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedParts",
                                      		lv_ownedParts_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:6224:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            loop160:
                            do {
                                int alt160=2;
                                int LA160_0 = input.LA(1);

                                if ( (LA160_0==60) ) {
                                    alt160=1;
                                }


                                switch (alt160) {
                            	case 1 :
                            	    // InternalOCLinEcore.g:6224:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    {
                            	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());

                            	    }
                            	    // InternalOCLinEcore.g:6228:1: ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    // InternalOCLinEcore.g:6229:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    {
                            	    // InternalOCLinEcore.g:6229:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    // InternalOCLinEcore.g:6230:3: lv_ownedParts_4_0= ruleTuplePartCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_22);
                            	    lv_ownedParts_4_0=ruleTuplePartCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                            	      	        }
                            	             		add(
                            	             			current,
                            	             			"ownedParts",
                            	              		lv_ownedParts_4_0,
                            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                            	      	        afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop160;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalOCLinEcore.g:6258:1: entryRuleTuplePartCS returns [EObject current=null] : iv_ruleTuplePartCS= ruleTuplePartCS EOF ;
    public final EObject entryRuleTuplePartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuplePartCS = null;


        try {
            // InternalOCLinEcore.g:6259:2: (iv_ruleTuplePartCS= ruleTuplePartCS EOF )
            // InternalOCLinEcore.g:6260:2: iv_ruleTuplePartCS= ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTuplePartCS=ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuplePartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalOCLinEcore.g:6267:1: ruleTuplePartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleTuplePartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6270:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalOCLinEcore.g:6271:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalOCLinEcore.g:6271:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalOCLinEcore.g:6271:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalOCLinEcore.g:6271:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:6272:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:6272:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:6273:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());

            }
            // InternalOCLinEcore.g:6293:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalOCLinEcore.g:6294:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalOCLinEcore.g:6294:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalOCLinEcore.g:6295:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalOCLinEcore.g:6319:1: entryRuleCollectionLiteralExpCS returns [EObject current=null] : iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF ;
    public final EObject entryRuleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6320:2: (iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF )
            // InternalOCLinEcore.g:6321:2: iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalOCLinEcore.g:6328:1: ruleCollectionLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6331:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:6332:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:6332:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:6332:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:6332:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalOCLinEcore.g:6333:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalOCLinEcore.g:6333:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalOCLinEcore.g:6334:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6354:1: ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( ((LA164_0>=RULE_INT && LA164_0<=RULE_SINGLE_QUOTED_STRING)||(LA164_0>=RULE_SIMPLE_ID && LA164_0<=RULE_ESCAPED_ID)||(LA164_0>=18 && LA164_0<=55)||LA164_0==57||LA164_0==59||LA164_0==72||(LA164_0>=74 && LA164_0<=75)||LA164_0==77||LA164_0==81||(LA164_0>=84 && LA164_0<=86)||(LA164_0>=104 && LA164_0<=105)||(LA164_0>=107 && LA164_0<=119)||LA164_0==122||(LA164_0>=124 && LA164_0<=127)||LA164_0==134||(LA164_0>=139 && LA164_0<=140)) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalOCLinEcore.g:6354:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:6354:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) )
                    // InternalOCLinEcore.g:6355:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    {
                    // InternalOCLinEcore.g:6355:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    // InternalOCLinEcore.g:6356:3: lv_ownedParts_2_0= ruleCollectionLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_ownedParts_2_0=ruleCollectionLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6372:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==60) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6372:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_109); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6376:1: ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    // InternalOCLinEcore.g:6377:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:6377:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    // InternalOCLinEcore.g:6378:3: lv_ownedParts_4_0= ruleCollectionLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_108);
                    	    lv_ownedParts_4_0=ruleCollectionLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalOCLinEcore.g:6406:1: entryRuleCollectionLiteralPartCS returns [EObject current=null] : iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF ;
    public final EObject entryRuleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:6407:2: (iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF )
            // InternalOCLinEcore.g:6408:2: iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalOCLinEcore.g:6415:1: ruleCollectionLiteralPartCS returns [EObject current=null] : ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) ;
    public final EObject ruleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedExpression_0_0 = null;

        EObject lv_ownedLastExpression_2_0 = null;

        EObject lv_ownedExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6418:28: ( ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) )
            // InternalOCLinEcore.g:6419:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            {
            // InternalOCLinEcore.g:6419:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            int alt166=2;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalOCLinEcore.g:6419:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:6419:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:6419:3: ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    {
                    // InternalOCLinEcore.g:6419:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:6420:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:6420:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalOCLinEcore.g:6421:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6437:2: (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    int alt165=2;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==120) ) {
                        alt165=1;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalOCLinEcore.g:6437:4: otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            {
                            otherlv_1=(Token)match(input,120,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());

                            }
                            // InternalOCLinEcore.g:6441:1: ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:6442:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:6442:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            // InternalOCLinEcore.g:6443:3: lv_ownedLastExpression_2_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedLastExpression_2_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedLastExpression",
                                      		lv_ownedLastExpression_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6460:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    {
                    // InternalOCLinEcore.g:6460:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6461:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6461:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    // InternalOCLinEcore.g:6462:3: lv_ownedExpression_3_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_3_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalOCLinEcore.g:6486:1: entryRuleCollectionPatternCS returns [EObject current=null] : iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF ;
    public final EObject entryRuleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionPatternCS = null;


        try {
            // InternalOCLinEcore.g:6487:2: (iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF )
            // InternalOCLinEcore.g:6488:2: iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionPatternCS=ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionPatternCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalOCLinEcore.g:6495:1: ruleCollectionPatternCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;

        AntlrDatatypeRuleToken lv_restVariableName_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6498:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) )
            // InternalOCLinEcore.g:6499:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            {
            // InternalOCLinEcore.g:6499:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            // InternalOCLinEcore.g:6499:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}'
            {
            // InternalOCLinEcore.g:6499:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalOCLinEcore.g:6500:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalOCLinEcore.g:6500:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalOCLinEcore.g:6501:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6521:1: ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=RULE_SIMPLE_ID && LA168_0<=RULE_ESCAPED_ID)||LA168_0==18||(LA168_0>=20 && LA168_0<=54)||LA168_0==57||LA168_0==59||LA168_0==72||(LA168_0>=74 && LA168_0<=75)||LA168_0==77||LA168_0==81) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalOCLinEcore.g:6521:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    {
                    // InternalOCLinEcore.g:6521:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6522:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6522:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    // InternalOCLinEcore.g:6523:3: lv_ownedParts_2_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_ownedParts_2_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6539:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==60) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6539:4: otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_109); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6543:1: ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    // InternalOCLinEcore.g:6544:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    {
                    	    // InternalOCLinEcore.g:6544:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    // InternalOCLinEcore.g:6545:3: lv_ownedParts_4_0= rulePatternExpCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_ownedParts_4_0=rulePatternExpCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);

                    // InternalOCLinEcore.g:6561:4: (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    // InternalOCLinEcore.g:6561:6: otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    {
                    otherlv_5=(Token)match(input,121,FollowSets000.FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());

                    }
                    // InternalOCLinEcore.g:6565:1: ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    // InternalOCLinEcore.g:6566:1: (lv_restVariableName_6_0= ruleIdentifier )
                    {
                    // InternalOCLinEcore.g:6566:1: (lv_restVariableName_6_0= ruleIdentifier )
                    // InternalOCLinEcore.g:6567:3: lv_restVariableName_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_restVariableName_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		set(
                             			current,
                             			"restVariableName",
                              		lv_restVariableName_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalOCLinEcore.g:6595:1: entryRuleShadowPartCS returns [EObject current=null] : iv_ruleShadowPartCS= ruleShadowPartCS EOF ;
    public final EObject entryRuleShadowPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShadowPartCS = null;


        try {
            // InternalOCLinEcore.g:6596:2: (iv_ruleShadowPartCS= ruleShadowPartCS EOF )
            // InternalOCLinEcore.g:6597:2: iv_ruleShadowPartCS= ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShadowPartCS=ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShadowPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalOCLinEcore.g:6604:1: ruleShadowPartCS returns [EObject current=null] : ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) ;
    public final EObject ruleShadowPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedInitExpression_2_1 = null;

        EObject lv_ownedInitExpression_2_2 = null;

        EObject lv_ownedInitExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6607:28: ( ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) )
            // InternalOCLinEcore.g:6608:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            {
            // InternalOCLinEcore.g:6608:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( ((LA170_0>=RULE_SIMPLE_ID && LA170_0<=RULE_ESCAPED_ID)||LA170_0==18||(LA170_0>=20 && LA170_0<=54)||LA170_0==59||LA170_0==72||(LA170_0>=74 && LA170_0<=75)||LA170_0==77||LA170_0==81) ) {
                alt170=1;
            }
            else if ( (LA170_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalOCLinEcore.g:6608:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    {
                    // InternalOCLinEcore.g:6608:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    // InternalOCLinEcore.g:6608:3: ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:6608:3: ( ( ruleUnrestrictedName ) )
                    // InternalOCLinEcore.g:6609:1: ( ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:6609:1: ( ruleUnrestrictedName )
                    // InternalOCLinEcore.g:6610:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getShadowPartCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_1=(Token)match(input,63,FollowSets000.FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());

                    }
                    // InternalOCLinEcore.g:6630:1: ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    // InternalOCLinEcore.g:6631:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    {
                    // InternalOCLinEcore.g:6631:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    // InternalOCLinEcore.g:6632:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    {
                    // InternalOCLinEcore.g:6632:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    int alt169=2;
                    alt169 = dfa169.predict(input);
                    switch (alt169) {
                        case 1 :
                            // InternalOCLinEcore.g:6633:3: lv_ownedInitExpression_2_1= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_1=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_1,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:6648:8: lv_ownedInitExpression_2_2= rulePatternExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_2=rulePatternExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_2,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6667:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    {
                    // InternalOCLinEcore.g:6667:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    // InternalOCLinEcore.g:6668:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    {
                    // InternalOCLinEcore.g:6668:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    // InternalOCLinEcore.g:6669:3: lv_ownedInitExpression_3_0= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_3_0=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.StringLiteralExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalOCLinEcore.g:6693:1: entryRulePatternExpCS returns [EObject current=null] : iv_rulePatternExpCS= rulePatternExpCS EOF ;
    public final EObject entryRulePatternExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpCS = null;


        try {
            // InternalOCLinEcore.g:6694:2: (iv_rulePatternExpCS= rulePatternExpCS EOF )
            // InternalOCLinEcore.g:6695:2: iv_rulePatternExpCS= rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternExpCS=rulePatternExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalOCLinEcore.g:6702:1: rulePatternExpCS returns [EObject current=null] : ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject rulePatternExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_patternVariableName_0_0 = null;

        EObject lv_ownedPatternType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6705:28: ( ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) )
            // InternalOCLinEcore.g:6706:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalOCLinEcore.g:6706:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            // InternalOCLinEcore.g:6706:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            {
            // InternalOCLinEcore.g:6706:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( ((LA171_0>=RULE_SIMPLE_ID && LA171_0<=RULE_ESCAPED_ID)||LA171_0==18||(LA171_0>=20 && LA171_0<=54)||LA171_0==59||LA171_0==72||(LA171_0>=74 && LA171_0<=75)||LA171_0==77||LA171_0==81) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalOCLinEcore.g:6707:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    {
                    // InternalOCLinEcore.g:6707:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    // InternalOCLinEcore.g:6708:3: lv_patternVariableName_0_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_patternVariableName_0_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"patternVariableName",
                              		lv_patternVariableName_0_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());

            }
            // InternalOCLinEcore.g:6728:1: ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            // InternalOCLinEcore.g:6729:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            {
            // InternalOCLinEcore.g:6729:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            // InternalOCLinEcore.g:6730:3: lv_ownedPatternType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedPatternType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPatternType",
                      		lv_ownedPatternType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalOCLinEcore.g:6754:1: entryRuleLambdaLiteralExpCS returns [EObject current=null] : iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF ;
    public final EObject entryRuleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLambdaLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6755:2: (iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF )
            // InternalOCLinEcore.g:6756:2: iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLambdaLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalOCLinEcore.g:6763:1: ruleLambdaLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) ;
    public final EObject ruleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedExpressionCS_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6766:28: ( (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) )
            // InternalOCLinEcore.g:6767:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            {
            // InternalOCLinEcore.g:6767:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            // InternalOCLinEcore.g:6767:3: otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,122,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());

            }
            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6775:1: ( (lv_ownedExpressionCS_2_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6776:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6776:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            // InternalOCLinEcore.g:6777:3: lv_ownedExpressionCS_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_ownedExpressionCS_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpressionCS",
                      		lv_ownedExpressionCS_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalOCLinEcore.g:6805:1: entryRuleMapLiteralExpCS returns [EObject current=null] : iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF ;
    public final EObject entryRuleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6806:2: (iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF )
            // InternalOCLinEcore.g:6807:2: iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalOCLinEcore.g:6814:1: ruleMapLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6817:28: ( ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:6818:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:6818:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:6818:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:6818:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) )
            // InternalOCLinEcore.g:6819:1: (lv_ownedType_0_0= ruleMapTypeCS )
            {
            // InternalOCLinEcore.g:6819:1: (lv_ownedType_0_0= ruleMapTypeCS )
            // InternalOCLinEcore.g:6820:3: lv_ownedType_0_0= ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            lv_ownedType_0_0=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:6840:1: ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( ((LA173_0>=RULE_INT && LA173_0<=RULE_SINGLE_QUOTED_STRING)||(LA173_0>=RULE_SIMPLE_ID && LA173_0<=RULE_ESCAPED_ID)||(LA173_0>=18 && LA173_0<=55)||LA173_0==59||LA173_0==72||(LA173_0>=74 && LA173_0<=75)||LA173_0==77||LA173_0==81||(LA173_0>=84 && LA173_0<=86)||(LA173_0>=104 && LA173_0<=105)||(LA173_0>=107 && LA173_0<=119)||LA173_0==122||(LA173_0>=124 && LA173_0<=127)||LA173_0==134||(LA173_0>=139 && LA173_0<=140)) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalOCLinEcore.g:6840:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:6840:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) )
                    // InternalOCLinEcore.g:6841:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    {
                    // InternalOCLinEcore.g:6841:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    // InternalOCLinEcore.g:6842:3: lv_ownedParts_2_0= ruleMapLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_ownedParts_2_0=ruleMapLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:6858:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

                        if ( (LA172_0==60) ) {
                            alt172=1;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:6858:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:6862:1: ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    // InternalOCLinEcore.g:6863:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:6863:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    // InternalOCLinEcore.g:6864:3: lv_ownedParts_4_0= ruleMapLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_108);
                    	    lv_ownedParts_4_0=ruleMapLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalOCLinEcore.g:6892:1: entryRuleMapLiteralPartCS returns [EObject current=null] : iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF ;
    public final EObject entryRuleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:6893:2: (iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF )
            // InternalOCLinEcore.g:6894:2: iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalOCLinEcore.g:6901:1: ruleMapLiteralPartCS returns [EObject current=null] : ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) ;
    public final EObject ruleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedKey_0_0 = null;

        EObject lv_ownedValue_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6904:28: ( ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:6905:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:6905:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:6905:2: ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:6905:2: ( (lv_ownedKey_0_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6906:1: (lv_ownedKey_0_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6906:1: (lv_ownedKey_0_0= ruleExpCS )
            // InternalOCLinEcore.g:6907:3: lv_ownedKey_0_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_ownedKey_0_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedKey",
                      		lv_ownedKey_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,123,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());

            }
            // InternalOCLinEcore.g:6927:1: ( (lv_ownedValue_2_0= ruleExpCS ) )
            // InternalOCLinEcore.g:6928:1: (lv_ownedValue_2_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:6928:1: (lv_ownedValue_2_0= ruleExpCS )
            // InternalOCLinEcore.g:6929:3: lv_ownedValue_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedValue_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalOCLinEcore.g:6953:1: entryRulePrimitiveLiteralExpCS returns [EObject current=null] : iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF ;
    public final EObject entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:6954:2: (iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF )
            // InternalOCLinEcore.g:6955:2: iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalOCLinEcore.g:6962:1: rulePrimitiveLiteralExpCS returns [EObject current=null] : (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) ;
    public final EObject rulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NumberLiteralExpCS_0 = null;

        EObject this_StringLiteralExpCS_1 = null;

        EObject this_BooleanLiteralExpCS_2 = null;

        EObject this_UnlimitedNaturalLiteralExpCS_3 = null;

        EObject this_InvalidLiteralExpCS_4 = null;

        EObject this_NullLiteralExpCS_5 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:6965:28: ( (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) )
            // InternalOCLinEcore.g:6966:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            {
            // InternalOCLinEcore.g:6966:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            int alt174=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt174=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
                {
                alt174=2;
                }
                break;
            case 124:
            case 125:
                {
                alt174=3;
                }
                break;
            case 86:
                {
                alt174=4;
                }
                break;
            case 126:
                {
                alt174=5;
                }
                break;
            case 127:
                {
                alt174=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }

            switch (alt174) {
                case 1 :
                    // InternalOCLinEcore.g:6967:2: this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumberLiteralExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:6980:2: this_StringLiteralExpCS_1= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringLiteralExpCS_1=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteralExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:6993:2: this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteralExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:7006:2: this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnlimitedNaturalLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:7019:2: this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InvalidLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:7032:2: this_NullLiteralExpCS_5= ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullLiteralExpCS_5=ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalOCLinEcore.g:7051:1: entryRuleTupleLiteralExpCS returns [EObject current=null] : iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF ;
    public final EObject entryRuleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7052:2: (iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF )
            // InternalOCLinEcore.g:7053:2: iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalOCLinEcore.g:7060:1: ruleTupleLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7063:28: ( (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) )
            // InternalOCLinEcore.g:7064:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:7064:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            // InternalOCLinEcore.g:7064:3: otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,105,FollowSets000.FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());

            }
            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:7072:1: ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) )
            // InternalOCLinEcore.g:7073:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            {
            // InternalOCLinEcore.g:7073:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            // InternalOCLinEcore.g:7074:3: lv_ownedParts_2_0= ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_108);
            lv_ownedParts_2_0=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParts",
                      		lv_ownedParts_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:7090:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==60) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalOCLinEcore.g:7090:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    {
            	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());

            	    }
            	    // InternalOCLinEcore.g:7094:1: ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    // InternalOCLinEcore.g:7095:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    {
            	    // InternalOCLinEcore.g:7095:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    // InternalOCLinEcore.g:7096:3: lv_ownedParts_4_0= ruleTupleLiteralPartCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_ownedParts_4_0=ruleTupleLiteralPartCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParts",
            	              		lv_ownedParts_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalOCLinEcore.g:7124:1: entryRuleTupleLiteralPartCS returns [EObject current=null] : iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF ;
    public final EObject entryRuleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralPartCS = null;


        try {
            // InternalOCLinEcore.g:7125:2: (iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF )
            // InternalOCLinEcore.g:7126:2: iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalOCLinEcore.g:7133:1: ruleTupleLiteralPartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) ;
    public final EObject ruleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7136:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:7137:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:7137:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:7137:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:7137:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:7138:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:7138:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:7139:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_116);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:7155:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==57) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalOCLinEcore.g:7155:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:7159:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:7160:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:7160:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:7161:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());

            }
            // InternalOCLinEcore.g:7181:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            // InternalOCLinEcore.g:7182:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:7182:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            // InternalOCLinEcore.g:7183:3: lv_ownedInitExpression_4_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_4_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_4_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalOCLinEcore.g:7207:1: entryRuleNumberLiteralExpCS returns [EObject current=null] : iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF ;
    public final EObject entryRuleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7208:2: (iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF )
            // InternalOCLinEcore.g:7209:2: iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalOCLinEcore.g:7216:1: ruleNumberLiteralExpCS returns [EObject current=null] : ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) ;
    public final EObject ruleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7219:28: ( ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) )
            // InternalOCLinEcore.g:7220:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            {
            // InternalOCLinEcore.g:7220:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            // InternalOCLinEcore.g:7221:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            {
            // InternalOCLinEcore.g:7221:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            // InternalOCLinEcore.g:7222:3: lv_symbol_0_0= ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_symbol_0_0=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"symbol",
                      		lv_symbol_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalOCLinEcore.g:7246:1: entryRuleStringLiteralExpCS returns [EObject current=null] : iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF ;
    public final EObject entryRuleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7247:2: (iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF )
            // InternalOCLinEcore.g:7248:2: iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalOCLinEcore.g:7255:1: ruleStringLiteralExpCS returns [EObject current=null] : ( (lv_segments_0_0= ruleStringLiteral ) )+ ;
    public final EObject ruleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_segments_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7258:28: ( ( (lv_segments_0_0= ruleStringLiteral ) )+ )
            // InternalOCLinEcore.g:7259:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            {
            // InternalOCLinEcore.g:7259:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            int cnt177=0;
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==RULE_SINGLE_QUOTED_STRING) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalOCLinEcore.g:7260:1: (lv_segments_0_0= ruleStringLiteral )
            	    {
            	    // InternalOCLinEcore.g:7260:1: (lv_segments_0_0= ruleStringLiteral )
            	    // InternalOCLinEcore.g:7261:3: lv_segments_0_0= ruleStringLiteral
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_117);
            	    lv_segments_0_0=ruleStringLiteral();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"segments",
            	              		lv_segments_0_0,
            	              		"org.eclipse.ocl.xtext.base.Base.StringLiteral");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt177 >= 1 ) break loop177;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(177, input);
                        throw eee;
                }
                cnt177++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalOCLinEcore.g:7285:1: entryRuleBooleanLiteralExpCS returns [EObject current=null] : iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF ;
    public final EObject entryRuleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7286:2: (iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF )
            // InternalOCLinEcore.g:7287:2: iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalOCLinEcore.g:7294:1: ruleBooleanLiteralExpCS returns [EObject current=null] : ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) ;
    public final EObject ruleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;
        Token lv_symbol_1_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7297:28: ( ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) )
            // InternalOCLinEcore.g:7298:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            {
            // InternalOCLinEcore.g:7298:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==124) ) {
                alt178=1;
            }
            else if ( (LA178_0==125) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // InternalOCLinEcore.g:7298:2: ( (lv_symbol_0_0= 'true' ) )
                    {
                    // InternalOCLinEcore.g:7298:2: ( (lv_symbol_0_0= 'true' ) )
                    // InternalOCLinEcore.g:7299:1: (lv_symbol_0_0= 'true' )
                    {
                    // InternalOCLinEcore.g:7299:1: (lv_symbol_0_0= 'true' )
                    // InternalOCLinEcore.g:7300:3: lv_symbol_0_0= 'true'
                    {
                    lv_symbol_0_0=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_0_0, "true");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7314:6: ( (lv_symbol_1_0= 'false' ) )
                    {
                    // InternalOCLinEcore.g:7314:6: ( (lv_symbol_1_0= 'false' ) )
                    // InternalOCLinEcore.g:7315:1: (lv_symbol_1_0= 'false' )
                    {
                    // InternalOCLinEcore.g:7315:1: (lv_symbol_1_0= 'false' )
                    // InternalOCLinEcore.g:7316:3: lv_symbol_1_0= 'false'
                    {
                    lv_symbol_1_0=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_1_0, "false");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalOCLinEcore.g:7337:1: entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final EObject entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7338:2: (iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalOCLinEcore.g:7339:2: iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalOCLinEcore.g:7346:1: ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7349:28: ( ( () otherlv_1= '*' ) )
            // InternalOCLinEcore.g:7350:1: ( () otherlv_1= '*' )
            {
            // InternalOCLinEcore.g:7350:1: ( () otherlv_1= '*' )
            // InternalOCLinEcore.g:7350:2: () otherlv_1= '*'
            {
            // InternalOCLinEcore.g:7350:2: ()
            // InternalOCLinEcore.g:7351:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalOCLinEcore.g:7371:1: entryRuleInvalidLiteralExpCS returns [EObject current=null] : iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF ;
    public final EObject entryRuleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvalidLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7372:2: (iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF )
            // InternalOCLinEcore.g:7373:2: iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvalidLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalOCLinEcore.g:7380:1: ruleInvalidLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'invalid' ) ;
    public final EObject ruleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7383:28: ( ( () otherlv_1= 'invalid' ) )
            // InternalOCLinEcore.g:7384:1: ( () otherlv_1= 'invalid' )
            {
            // InternalOCLinEcore.g:7384:1: ( () otherlv_1= 'invalid' )
            // InternalOCLinEcore.g:7384:2: () otherlv_1= 'invalid'
            {
            // InternalOCLinEcore.g:7384:2: ()
            // InternalOCLinEcore.g:7385:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalOCLinEcore.g:7405:1: entryRuleNullLiteralExpCS returns [EObject current=null] : iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF ;
    public final EObject entryRuleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7406:2: (iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF )
            // InternalOCLinEcore.g:7407:2: iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalOCLinEcore.g:7414:1: ruleNullLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:7417:28: ( ( () otherlv_1= 'null' ) )
            // InternalOCLinEcore.g:7418:1: ( () otherlv_1= 'null' )
            {
            // InternalOCLinEcore.g:7418:1: ( () otherlv_1= 'null' )
            // InternalOCLinEcore.g:7418:2: () otherlv_1= 'null'
            {
            // InternalOCLinEcore.g:7418:2: ()
            // InternalOCLinEcore.g:7419:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalOCLinEcore.g:7439:1: entryRuleTypeLiteralCS returns [EObject current=null] : iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF ;
    public final EObject entryRuleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralCS = null;


        try {
            // InternalOCLinEcore.g:7440:2: (iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF )
            // InternalOCLinEcore.g:7441:2: iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralCS=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalOCLinEcore.g:7448:1: ruleTypeLiteralCS returns [EObject current=null] : (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) ;
    public final EObject ruleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrimitiveTypeCS_0 = null;

        EObject this_CollectionTypeCS_1 = null;

        EObject this_MapTypeCS_2 = null;

        EObject this_TupleTypeCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7451:28: ( (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) )
            // InternalOCLinEcore.g:7452:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            {
            // InternalOCLinEcore.g:7452:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            int alt179=4;
            switch ( input.LA(1) ) {
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
                {
                alt179=1;
                }
                break;
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
                {
                alt179=2;
                }
                break;
            case 104:
                {
                alt179=3;
                }
                break;
            case 105:
                {
                alt179=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    // InternalOCLinEcore.g:7453:2: this_PrimitiveTypeCS_0= rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeCS_0=rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveTypeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7466:2: this_CollectionTypeCS_1= ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeCS_1=ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:7479:2: this_MapTypeCS_2= ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapTypeCS_2=ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapTypeCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:7492:2: this_TupleTypeCS_3= ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleTypeCS_3=ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleTypeCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalOCLinEcore.g:7511:1: entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null] : iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF ;
    public final EObject entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralWithMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:7512:2: (iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalOCLinEcore.g:7513:2: iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralWithMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalOCLinEcore.g:7520:1: ruleTypeLiteralWithMultiplicityCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7523:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:7524:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:7524:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:7525:2: this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_TypeLiteralCS_0=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeLiteralCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:7536:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==130) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalOCLinEcore.g:7537:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:7537:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:7538:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalOCLinEcore.g:7562:1: entryRuleTypeLiteralExpCS returns [EObject current=null] : iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF ;
    public final EObject entryRuleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralExpCS = null;


        try {
            // InternalOCLinEcore.g:7563:2: (iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF )
            // InternalOCLinEcore.g:7564:2: iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalOCLinEcore.g:7571:1: ruleTypeLiteralExpCS returns [EObject current=null] : ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) ;
    public final EObject ruleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedType_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7574:28: ( ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) )
            // InternalOCLinEcore.g:7575:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            {
            // InternalOCLinEcore.g:7575:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            // InternalOCLinEcore.g:7576:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalOCLinEcore.g:7576:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            // InternalOCLinEcore.g:7577:3: lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalOCLinEcore.g:7601:1: entryRuleTypeNameExpCS returns [EObject current=null] : iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF ;
    public final EObject entryRuleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameExpCS = null;


        try {
            // InternalOCLinEcore.g:7602:2: (iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF )
            // InternalOCLinEcore.g:7603:2: iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeNameExpCS=ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalOCLinEcore.g:7610:1: ruleTypeNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) ;
    public final EObject ruleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7613:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) )
            // InternalOCLinEcore.g:7614:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            {
            // InternalOCLinEcore.g:7614:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            // InternalOCLinEcore.g:7614:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            {
            // InternalOCLinEcore.g:7614:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:7615:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:7615:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:7616:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:7632:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==61) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalOCLinEcore.g:7632:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    {
                    // InternalOCLinEcore.g:7632:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
                    // InternalOCLinEcore.g:7633:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:7633:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    // InternalOCLinEcore.g:7634:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:7650:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==61) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalOCLinEcore.g:7650:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                            {
                            otherlv_2=(Token)match(input,61,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());

                            }
                            // InternalOCLinEcore.g:7654:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:7655:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:7655:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            // InternalOCLinEcore.g:7656:3: lv_ownedPatternGuard_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_43);
                            lv_ownedPatternGuard_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedPatternGuard",
                                      		lv_ownedPatternGuard_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalOCLinEcore.g:7684:1: entryRuleTypeExpWithoutMultiplicityCS returns [EObject current=null] : iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF ;
    public final EObject entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpWithoutMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:7685:2: (iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalOCLinEcore.g:7686:2: iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpWithoutMultiplicityCS=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpWithoutMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalOCLinEcore.g:7693:1: ruleTypeExpWithoutMultiplicityCS returns [EObject current=null] : (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) ;
    public final EObject ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeNameExpCS_0 = null;

        EObject this_TypeLiteralCS_1 = null;

        EObject this_CollectionPatternCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7696:28: ( (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) )
            // InternalOCLinEcore.g:7697:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            {
            // InternalOCLinEcore.g:7697:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            int alt183=3;
            alt183 = dfa183.predict(input);
            switch (alt183) {
                case 1 :
                    // InternalOCLinEcore.g:7698:2: this_TypeNameExpCS_0= ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeNameExpCS_0=ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeNameExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7711:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_1=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:7724:2: this_CollectionPatternCS_2= ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionPatternCS_2=ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionPatternCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalOCLinEcore.g:7743:1: entryRuleTypeExpCS returns [EObject current=null] : iv_ruleTypeExpCS= ruleTypeExpCS EOF ;
    public final EObject entryRuleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpCS = null;


        try {
            // InternalOCLinEcore.g:7744:2: (iv_ruleTypeExpCS= ruleTypeExpCS EOF )
            // InternalOCLinEcore.g:7745:2: iv_ruleTypeExpCS= ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpCS=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalOCLinEcore.g:7752:1: ruleTypeExpCS returns [EObject current=null] : (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeExpWithoutMultiplicityCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7755:28: ( (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:7756:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:7756:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:7757:2: this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_TypeExpWithoutMultiplicityCS_0=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeExpWithoutMultiplicityCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalOCLinEcore.g:7768:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==130) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalOCLinEcore.g:7769:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:7769:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:7770:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalOCLinEcore.g:7794:1: entryRuleExpCS returns [EObject current=null] : iv_ruleExpCS= ruleExpCS EOF ;
    public final EObject entryRuleExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpCS = null;


        try {
            // InternalOCLinEcore.g:7795:2: (iv_ruleExpCS= ruleExpCS EOF )
            // InternalOCLinEcore.g:7796:2: iv_ruleExpCS= ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpCS=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalOCLinEcore.g:7803:1: ruleExpCS returns [EObject current=null] : ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) ;
    public final EObject ruleExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;

        EObject this_PrefixedLetExpCS_4 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7806:28: ( ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) )
            // InternalOCLinEcore.g:7807:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            {
            // InternalOCLinEcore.g:7807:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            int alt186=2;
            alt186 = dfa186.predict(input);
            switch (alt186) {
                case 1 :
                    // InternalOCLinEcore.g:7807:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:7807:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:7808:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedPrimaryExpCS_0;
                              afterParserOrEnumRuleCall();

                    }
                    // InternalOCLinEcore.g:7819:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==19||LA185_0==63||(LA185_0>=82 && LA185_0<=83)||(LA185_0>=86 && LA185_0<=103)) ) {
                        alt185=1;
                    }
                    switch (alt185) {
                        case 1 :
                            // InternalOCLinEcore.g:7819:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                            {
                            // InternalOCLinEcore.g:7819:2: ()
                            // InternalOCLinEcore.g:7820:2:
                            {
                            if ( state.backtracking==0 ) {

                              	  /* */

                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
                                          current);

                            }

                            }

                            // InternalOCLinEcore.g:7828:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                            // InternalOCLinEcore.g:7829:1: (lv_name_2_0= ruleBinaryOperatorName )
                            {
                            // InternalOCLinEcore.g:7829:1: (lv_name_2_0= ruleBinaryOperatorName )
                            // InternalOCLinEcore.g:7830:3: lv_name_2_0= ruleBinaryOperatorName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_111);
                            lv_name_2_0=ruleBinaryOperatorName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:7846:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:7847:1: (lv_ownedRight_3_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:7847:1: (lv_ownedRight_3_0= ruleExpCS )
                            // InternalOCLinEcore.g:7848:3: lv_ownedRight_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedRight_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedRight",
                                      		lv_ownedRight_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7866:2: this_PrefixedLetExpCS_4= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrefixedLetExpCS_4=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedLetExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalOCLinEcore.g:7885:1: entryRulePrefixedLetExpCS returns [EObject current=null] : iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF ;
    public final EObject entryRulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedLetExpCS = null;


        try {
            // InternalOCLinEcore.g:7886:2: (iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF )
            // InternalOCLinEcore.g:7887:2: iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalOCLinEcore.g:7894:1: rulePrefixedLetExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) ;
    public final EObject rulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_LetExpCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7897:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) )
            // InternalOCLinEcore.g:7898:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            {
            // InternalOCLinEcore.g:7898:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==19||(LA187_0>=84 && LA187_0<=85)) ) {
                alt187=1;
            }
            else if ( (LA187_0==139) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // InternalOCLinEcore.g:7898:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:7898:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    // InternalOCLinEcore.g:7898:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    {
                    // InternalOCLinEcore.g:7898:3: ()
                    // InternalOCLinEcore.g:7899:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:7907:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalOCLinEcore.g:7908:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalOCLinEcore.g:7908:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalOCLinEcore.g:7909:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:7925:2: ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    // InternalOCLinEcore.g:7926:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    {
                    // InternalOCLinEcore.g:7926:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    // InternalOCLinEcore.g:7927:3: lv_ownedRight_2_0= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:7945:2: this_LetExpCS_3= ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LetExpCS_3=ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LetExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalOCLinEcore.g:7964:1: entryRulePrefixedPrimaryExpCS returns [EObject current=null] : iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF ;
    public final EObject entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedPrimaryExpCS = null;


        try {
            // InternalOCLinEcore.g:7965:2: (iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF )
            // InternalOCLinEcore.g:7966:2: iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedPrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalOCLinEcore.g:7973:1: rulePrefixedPrimaryExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) ;
    public final EObject rulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_PrimaryExpCS_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:7976:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) )
            // InternalOCLinEcore.g:7977:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            {
            // InternalOCLinEcore.g:7977:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==19||(LA188_0>=84 && LA188_0<=85)) ) {
                alt188=1;
            }
            else if ( ((LA188_0>=RULE_INT && LA188_0<=RULE_SINGLE_QUOTED_STRING)||(LA188_0>=RULE_SIMPLE_ID && LA188_0<=RULE_ESCAPED_ID)||LA188_0==18||(LA188_0>=20 && LA188_0<=55)||LA188_0==59||LA188_0==72||(LA188_0>=74 && LA188_0<=75)||LA188_0==77||LA188_0==81||LA188_0==86||(LA188_0>=104 && LA188_0<=105)||(LA188_0>=107 && LA188_0<=119)||LA188_0==122||(LA188_0>=124 && LA188_0<=127)||LA188_0==134||LA188_0==140) ) {
                alt188=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }
            switch (alt188) {
                case 1 :
                    // InternalOCLinEcore.g:7977:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:7977:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    // InternalOCLinEcore.g:7977:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    {
                    // InternalOCLinEcore.g:7977:3: ()
                    // InternalOCLinEcore.g:7978:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalOCLinEcore.g:7986:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalOCLinEcore.g:7987:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalOCLinEcore.g:7987:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalOCLinEcore.g:7988:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8004:2: ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    // InternalOCLinEcore.g:8005:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    {
                    // InternalOCLinEcore.g:8005:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    // InternalOCLinEcore.g:8006:3: lv_ownedRight_2_0= rulePrefixedPrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8024:2: this_PrimaryExpCS_3= rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimaryExpCS_3=rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalOCLinEcore.g:8043:1: entryRulePrimaryExpCS returns [EObject current=null] : iv_rulePrimaryExpCS= rulePrimaryExpCS EOF ;
    public final EObject entryRulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpCS = null;


        try {
            // InternalOCLinEcore.g:8044:2: (iv_rulePrimaryExpCS= rulePrimaryExpCS EOF )
            // InternalOCLinEcore.g:8045:2: iv_rulePrimaryExpCS= rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimaryExpCS=rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalOCLinEcore.g:8052:1: rulePrimaryExpCS returns [EObject current=null] : (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) ;
    public final EObject rulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NestedExpCS_0 = null;

        EObject this_IfExpCS_1 = null;

        EObject this_SelfExpCS_2 = null;

        EObject this_PrimitiveLiteralExpCS_3 = null;

        EObject this_TupleLiteralExpCS_4 = null;

        EObject this_MapLiteralExpCS_5 = null;

        EObject this_CollectionLiteralExpCS_6 = null;

        EObject this_LambdaLiteralExpCS_7 = null;

        EObject this_TypeLiteralExpCS_8 = null;

        EObject this_NameExpCS_9 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8055:28: ( (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) )
            // InternalOCLinEcore.g:8056:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            {
            // InternalOCLinEcore.g:8056:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            int alt189=10;
            alt189 = dfa189.predict(input);
            switch (alt189) {
                case 1 :
                    // InternalOCLinEcore.g:8057:2: this_NestedExpCS_0= ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedExpCS_0=ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NestedExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8070:2: this_IfExpCS_1= ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfExpCS_1=ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:8083:2: this_SelfExpCS_2= ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SelfExpCS_2=ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SelfExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalOCLinEcore.g:8096:2: this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalOCLinEcore.g:8109:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalOCLinEcore.g:8122:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 7 :
                    // InternalOCLinEcore.g:8135:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionLiteralExpCS_6;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 8 :
                    // InternalOCLinEcore.g:8148:2: this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LambdaLiteralExpCS_7;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 9 :
                    // InternalOCLinEcore.g:8161:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralExpCS_8;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 10 :
                    // InternalOCLinEcore.g:8174:2: this_NameExpCS_9= ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NameExpCS_9=ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NameExpCS_9;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalOCLinEcore.g:8193:1: entryRuleNameExpCS returns [EObject current=null] : iv_ruleNameExpCS= ruleNameExpCS EOF ;
    public final EObject entryRuleNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameExpCS = null;


        try {
            // InternalOCLinEcore.g:8194:2: (iv_ruleNameExpCS= ruleNameExpCS EOF )
            // InternalOCLinEcore.g:8195:2: iv_ruleNameExpCS= ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNameExpCS=ruleNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalOCLinEcore.g:8202:1: ruleNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) ;
    public final EObject ruleNameExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPre_4_0=null;
        Token otherlv_5=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedSquareBracketedClauses_1_0 = null;

        EObject lv_ownedRoundBracketedClause_2_0 = null;

        EObject lv_ownedCurlyBracketedClause_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8205:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) )
            // InternalOCLinEcore.g:8206:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            {
            // InternalOCLinEcore.g:8206:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            // InternalOCLinEcore.g:8206:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            {
            // InternalOCLinEcore.g:8206:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalOCLinEcore.g:8207:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalOCLinEcore.g:8207:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalOCLinEcore.g:8208:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8224:2: ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==130) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalOCLinEcore.g:8225:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    {
            	    // InternalOCLinEcore.g:8225:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    // InternalOCLinEcore.g:8226:3: lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSquareBracketedClauses",
            	              		lv_ownedSquareBracketedClauses_1_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);

            // InternalOCLinEcore.g:8242:3: ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==55) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalOCLinEcore.g:8243:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:8243:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    // InternalOCLinEcore.g:8244:3: lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:8260:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==61) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalOCLinEcore.g:8261:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:8261:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    // InternalOCLinEcore.g:8262:3: lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:8278:3: ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==128) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalOCLinEcore.g:8278:4: ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre'
                    {
                    // InternalOCLinEcore.g:8278:4: ( (lv_isPre_4_0= '@' ) )
                    // InternalOCLinEcore.g:8279:1: (lv_isPre_4_0= '@' )
                    {
                    // InternalOCLinEcore.g:8279:1: (lv_isPre_4_0= '@' )
                    // InternalOCLinEcore.g:8280:3: lv_isPre_4_0= '@'
                    {
                    lv_isPre_4_0=(Token)match(input,128,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNameExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPre", true, "@");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalOCLinEcore.g:8305:1: entryRuleCurlyBracketedClauseCS returns [EObject current=null] : iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF ;
    public final EObject entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurlyBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:8306:2: (iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF )
            // InternalOCLinEcore.g:8307:2: iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurlyBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalOCLinEcore.g:8314:1: ruleCurlyBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8317:28: ( ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalOCLinEcore.g:8318:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalOCLinEcore.g:8318:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            // InternalOCLinEcore.g:8318:2: () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalOCLinEcore.g:8318:2: ()
            // InternalOCLinEcore.g:8319:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,61,FollowSets000.FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalOCLinEcore.g:8331:1: ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==RULE_SINGLE_QUOTED_STRING||(LA195_0>=RULE_SIMPLE_ID && LA195_0<=RULE_ESCAPED_ID)||LA195_0==18||(LA195_0>=20 && LA195_0<=54)||LA195_0==59||LA195_0==72||(LA195_0>=74 && LA195_0<=75)||LA195_0==77||LA195_0==81) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalOCLinEcore.g:8331:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    {
                    // InternalOCLinEcore.g:8331:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) )
                    // InternalOCLinEcore.g:8332:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    {
                    // InternalOCLinEcore.g:8332:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    // InternalOCLinEcore.g:8333:3: lv_ownedParts_2_0= ruleShadowPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_ownedParts_2_0=ruleShadowPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8349:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    loop194:
                    do {
                        int alt194=2;
                        int LA194_0 = input.LA(1);

                        if ( (LA194_0==60) ) {
                            alt194=1;
                        }


                        switch (alt194) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:8349:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,60,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalOCLinEcore.g:8353:1: ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    // InternalOCLinEcore.g:8354:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    {
                    	    // InternalOCLinEcore.g:8354:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    // InternalOCLinEcore.g:8355:3: lv_ownedParts_4_0= ruleShadowPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_108);
                    	    lv_ownedParts_4_0=ruleShadowPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop194;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalOCLinEcore.g:8383:1: entryRuleRoundBracketedClauseCS returns [EObject current=null] : iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF ;
    public final EObject entryRuleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:8384:2: (iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF )
            // InternalOCLinEcore.g:8385:2: iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalOCLinEcore.g:8392:1: ruleRoundBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) ;
    public final EObject ruleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedArguments_2_0 = null;

        EObject lv_ownedArguments_3_1 = null;

        EObject lv_ownedArguments_3_2 = null;

        EObject lv_ownedArguments_3_3 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8395:28: ( ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) )
            // InternalOCLinEcore.g:8396:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            {
            // InternalOCLinEcore.g:8396:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            // InternalOCLinEcore.g:8396:2: () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')'
            {
            // InternalOCLinEcore.g:8396:2: ()
            // InternalOCLinEcore.g:8397:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());

            }
            // InternalOCLinEcore.g:8409:1: ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( ((LA198_0>=RULE_INT && LA198_0<=RULE_SINGLE_QUOTED_STRING)||(LA198_0>=RULE_SIMPLE_ID && LA198_0<=RULE_ESCAPED_ID)||(LA198_0>=18 && LA198_0<=55)||LA198_0==57||LA198_0==59||LA198_0==72||(LA198_0>=74 && LA198_0<=75)||LA198_0==77||LA198_0==81||(LA198_0>=84 && LA198_0<=86)||(LA198_0>=104 && LA198_0<=105)||(LA198_0>=107 && LA198_0<=119)||LA198_0==122||(LA198_0>=124 && LA198_0<=127)||LA198_0==134||(LA198_0>=139 && LA198_0<=140)) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalOCLinEcore.g:8409:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    {
                    // InternalOCLinEcore.g:8409:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) )
                    // InternalOCLinEcore.g:8410:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    {
                    // InternalOCLinEcore.g:8410:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    // InternalOCLinEcore.g:8411:3: lv_ownedArguments_2_0= ruleNavigatingArgCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_124);
                    lv_ownedArguments_2_0=ruleNavigatingArgCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedArguments",
                              		lv_ownedArguments_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8427:2: ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    loop197:
                    do {
                        int alt197=2;
                        int LA197_0 = input.LA(1);

                        if ( (LA197_0==58||LA197_0==60||LA197_0==133) ) {
                            alt197=1;
                        }


                        switch (alt197) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:8428:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    {
                    	    // InternalOCLinEcore.g:8428:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    // InternalOCLinEcore.g:8429:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    {
                    	    // InternalOCLinEcore.g:8429:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    int alt196=3;
                    	    switch ( input.LA(1) ) {
                    	    case 60:
                    	        {
                    	        alt196=1;
                    	        }
                    	        break;
                    	    case 58:
                    	        {
                    	        alt196=2;
                    	        }
                    	        break;
                    	    case 133:
                    	        {
                    	        alt196=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 196, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt196) {
                    	        case 1 :
                    	            // InternalOCLinEcore.g:8430:3: lv_ownedArguments_3_1= ruleNavigatingCommaArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_124);
                    	            lv_ownedArguments_3_1=ruleNavigatingCommaArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_1,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalOCLinEcore.g:8445:8: lv_ownedArguments_3_2= ruleNavigatingSemiArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_124);
                    	            lv_ownedArguments_3_2=ruleNavigatingSemiArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_2,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalOCLinEcore.g:8460:8: lv_ownedArguments_3_3= ruleNavigatingBarArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_1_0_2());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_124);
                    	            lv_ownedArguments_3_3=ruleNavigatingBarArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_3,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop197;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalOCLinEcore.g:8490:1: entryRuleSquareBracketedClauseCS returns [EObject current=null] : iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF ;
    public final EObject entryRuleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSquareBracketedClauseCS = null;


        try {
            // InternalOCLinEcore.g:8491:2: (iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF )
            // InternalOCLinEcore.g:8492:2: iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSquareBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalOCLinEcore.g:8499:1: ruleSquareBracketedClauseCS returns [EObject current=null] : (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedTerms_1_0 = null;

        EObject lv_ownedTerms_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8502:28: ( (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) )
            // InternalOCLinEcore.g:8503:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            {
            // InternalOCLinEcore.g:8503:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            // InternalOCLinEcore.g:8503:3: otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,130,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalOCLinEcore.g:8507:1: ( (lv_ownedTerms_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:8508:1: (lv_ownedTerms_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:8508:1: (lv_ownedTerms_1_0= ruleExpCS )
            // InternalOCLinEcore.g:8509:3: lv_ownedTerms_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_125);
            lv_ownedTerms_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedTerms",
                      		lv_ownedTerms_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8525:2: (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==60) ) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalOCLinEcore.g:8525:4: otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,60,FollowSets000.FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalOCLinEcore.g:8529:1: ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    // InternalOCLinEcore.g:8530:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    {
            	    // InternalOCLinEcore.g:8530:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    // InternalOCLinEcore.g:8531:3: lv_ownedTerms_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_125);
            	    lv_ownedTerms_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTerms",
            	              		lv_ownedTerms_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);

            otherlv_4=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalOCLinEcore.g:8559:1: entryRuleNavigatingArgCS returns [EObject current=null] : iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF ;
    public final EObject entryRuleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgCS = null;


        try {
            // InternalOCLinEcore.g:8560:2: (iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF )
            // InternalOCLinEcore.g:8561:2: iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgCS=ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalOCLinEcore.g:8568:1: ruleNavigatingArgCS returns [EObject current=null] : ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) ) ;
    public final EObject ruleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_ownedNameExpression_0_0 = null;

        EObject lv_ownedCoIterator_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;

        EObject lv_ownedType_6_0 = null;

        EObject lv_ownedCoIterator_8_0 = null;

        EObject lv_ownedInitExpression_10_0 = null;

        EObject lv_ownedType_12_0 = null;

        EObject lv_ownedCoIterator_14_0 = null;

        EObject lv_ownedInitExpression_16_0 = null;

        EObject lv_ownedType_18_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8571:28: ( ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) ) )
            // InternalOCLinEcore.g:8572:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) )
            {
            // InternalOCLinEcore.g:8572:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( ((LA206_0>=RULE_INT && LA206_0<=RULE_SINGLE_QUOTED_STRING)||(LA206_0>=RULE_SIMPLE_ID && LA206_0<=RULE_ESCAPED_ID)||(LA206_0>=18 && LA206_0<=55)||LA206_0==59||LA206_0==72||(LA206_0>=74 && LA206_0<=75)||LA206_0==77||LA206_0==81||(LA206_0>=84 && LA206_0<=86)||(LA206_0>=104 && LA206_0<=105)||(LA206_0>=107 && LA206_0<=119)||LA206_0==122||(LA206_0>=124 && LA206_0<=127)||LA206_0==134||(LA206_0>=139 && LA206_0<=140)) ) {
                alt206=1;
            }
            else if ( (LA206_0==57) ) {
                alt206=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;
            }
            switch (alt206) {
                case 1 :
                    // InternalOCLinEcore.g:8572:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? )
                    {
                    // InternalOCLinEcore.g:8572:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? )
                    // InternalOCLinEcore.g:8572:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?
                    {
                    // InternalOCLinEcore.g:8572:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) )
                    // InternalOCLinEcore.g:8573:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    {
                    // InternalOCLinEcore.g:8573:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    // InternalOCLinEcore.g:8574:3: lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_126);
                    lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedNameExpression",
                              		lv_ownedNameExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8590:2: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?
                    int alt205=4;
                    alt205 = dfa205.predict(input);
                    switch (alt205) {
                        case 1 :
                            // InternalOCLinEcore.g:8590:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            {
                            // InternalOCLinEcore.g:8590:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            // InternalOCLinEcore.g:8590:5: otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            {
                            otherlv_1=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_0_0());

                            }
                            // InternalOCLinEcore.g:8594:1: ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:8595:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:8595:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:8596:3: lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_127);
                            lv_ownedCoIterator_2_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:8612:2: (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            int alt200=2;
                            int LA200_0 = input.LA(1);

                            if ( (LA200_0==63) ) {
                                alt200=1;
                            }
                            switch (alt200) {
                                case 1 :
                                    // InternalOCLinEcore.g:8612:4: otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    {
                                    otherlv_3=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_3, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());

                                    }
                                    // InternalOCLinEcore.g:8616:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    // InternalOCLinEcore.g:8617:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    {
                                    // InternalOCLinEcore.g:8617:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    // InternalOCLinEcore.g:8618:3: lv_ownedInitExpression_4_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_4_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_4_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalOCLinEcore.g:8635:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
                            {
                            // InternalOCLinEcore.g:8635:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
                            // InternalOCLinEcore.g:8635:8: otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
                            {
                            otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_1_0());

                            }
                            // InternalOCLinEcore.g:8639:1: ( (lv_ownedType_6_0= ruleTypeExpCS ) )
                            // InternalOCLinEcore.g:8640:1: (lv_ownedType_6_0= ruleTypeExpCS )
                            {
                            // InternalOCLinEcore.g:8640:1: (lv_ownedType_6_0= ruleTypeExpCS )
                            // InternalOCLinEcore.g:8641:3: lv_ownedType_6_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_128);
                            lv_ownedType_6_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_6_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalOCLinEcore.g:8657:2: (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )?
                            int alt201=2;
                            int LA201_0 = input.LA(1);

                            if ( (LA201_0==123) ) {
                                alt201=1;
                            }
                            switch (alt201) {
                                case 1 :
                                    // InternalOCLinEcore.g:8657:4: otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                                    {
                                    otherlv_7=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_7, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_1_2_0());

                                    }
                                    // InternalOCLinEcore.g:8661:1: ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                                    // InternalOCLinEcore.g:8662:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalOCLinEcore.g:8662:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                                    // InternalOCLinEcore.g:8663:3: lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_127);
                                    lv_ownedCoIterator_8_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_8_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8679:4: (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
                            int alt202=2;
                            int LA202_0 = input.LA(1);

                            if ( (LA202_0==63) ) {
                                alt202=1;
                            }
                            switch (alt202) {
                                case 1 :
                                    // InternalOCLinEcore.g:8679:6: otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                                    {
                                    otherlv_9=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_9, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_1_3_0());

                                    }
                                    // InternalOCLinEcore.g:8683:1: ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                                    // InternalOCLinEcore.g:8684:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                                    {
                                    // InternalOCLinEcore.g:8684:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                                    // InternalOCLinEcore.g:8685:3: lv_ownedInitExpression_10_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_10_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_10_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalOCLinEcore.g:8702:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
                            {
                            // InternalOCLinEcore.g:8702:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
                            // InternalOCLinEcore.g:8702:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
                            {
                            // InternalOCLinEcore.g:8702:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )?
                            int alt203=2;
                            int LA203_0 = input.LA(1);

                            if ( (LA203_0==57) ) {
                                alt203=1;
                            }
                            switch (alt203) {
                                case 1 :
                                    // InternalOCLinEcore.g:8702:9: otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                                    {
                                    otherlv_11=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_11, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_2_0_0());

                                    }
                                    // InternalOCLinEcore.g:8706:1: ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                                    // InternalOCLinEcore.g:8707:1: (lv_ownedType_12_0= ruleTypeExpCS )
                                    {
                                    // InternalOCLinEcore.g:8707:1: (lv_ownedType_12_0= ruleTypeExpCS )
                                    // InternalOCLinEcore.g:8708:3: lv_ownedType_12_0= ruleTypeExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_129);
                                    lv_ownedType_12_0=ruleTypeExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedType",
                                              		lv_ownedType_12_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalOCLinEcore.g:8724:4: (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )?
                            int alt204=2;
                            int LA204_0 = input.LA(1);

                            if ( (LA204_0==123) ) {
                                alt204=1;
                            }
                            switch (alt204) {
                                case 1 :
                                    // InternalOCLinEcore.g:8724:6: otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                                    {
                                    otherlv_13=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_13, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_2_1_0());

                                    }
                                    // InternalOCLinEcore.g:8728:1: ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                                    // InternalOCLinEcore.g:8729:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalOCLinEcore.g:8729:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                                    // InternalOCLinEcore.g:8730:3: lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_130);
                                    lv_ownedCoIterator_14_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_14_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_15=(Token)match(input,132,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_2_2());

                            }
                            // InternalOCLinEcore.g:8750:1: ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8751:1: (lv_ownedInitExpression_16_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8751:1: (lv_ownedInitExpression_16_0= ruleExpCS )
                            // InternalOCLinEcore.g:8752:3: lv_ownedInitExpression_16_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_16_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_16_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8769:6: (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:8769:6: (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) )
                    // InternalOCLinEcore.g:8769:8: otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) )
                    {
                    otherlv_17=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:8773:1: ( (lv_ownedType_18_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8774:1: (lv_ownedType_18_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8774:1: (lv_ownedType_18_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8775:3: lv_ownedType_18_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_18_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_18_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalOCLinEcore.g:8799:1: entryRuleNavigatingBarArgCS returns [EObject current=null] : iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF ;
    public final EObject entryRuleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingBarArgCS = null;


        try {
            // InternalOCLinEcore.g:8800:2: (iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF )
            // InternalOCLinEcore.g:8801:2: iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingBarArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalOCLinEcore.g:8808:1: ruleNavigatingBarArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8811:28: ( ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalOCLinEcore.g:8812:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalOCLinEcore.g:8812:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalOCLinEcore.g:8812:2: ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalOCLinEcore.g:8812:2: ( (lv_prefix_0_0= '|' ) )
            // InternalOCLinEcore.g:8813:1: (lv_prefix_0_0= '|' )
            {
            // InternalOCLinEcore.g:8813:1: (lv_prefix_0_0= '|' )
            // InternalOCLinEcore.g:8814:3: lv_prefix_0_0= '|'
            {
            lv_prefix_0_0=(Token)match(input,133,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, "|");

            }

            }


            }

            // InternalOCLinEcore.g:8827:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:8828:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:8828:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:8829:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8845:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==57) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalOCLinEcore.g:8845:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:8849:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8850:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8850:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8851:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8867:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==63) ) {
                        alt207=1;
                    }
                    switch (alt207) {
                        case 1 :
                            // InternalOCLinEcore.g:8867:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalOCLinEcore.g:8871:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8872:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8872:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalOCLinEcore.g:8873:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalOCLinEcore.g:8897:1: entryRuleNavigatingCommaArgCS returns [EObject current=null] : iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF ;
    public final EObject entryRuleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingCommaArgCS = null;


        try {
            // InternalOCLinEcore.g:8898:2: (iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF )
            // InternalOCLinEcore.g:8899:2: iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingCommaArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalOCLinEcore.g:8906:1: ruleNavigatingCommaArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? ) ;
    public final EObject ruleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_9_0 = null;

        EObject lv_ownedInitExpression_11_0 = null;

        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedCoIterator_15_0 = null;

        EObject lv_ownedInitExpression_17_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:8909:28: ( ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? ) )
            // InternalOCLinEcore.g:8910:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? )
            {
            // InternalOCLinEcore.g:8910:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? )
            // InternalOCLinEcore.g:8910:2: ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?
            {
            // InternalOCLinEcore.g:8910:2: ( (lv_prefix_0_0= ',' ) )
            // InternalOCLinEcore.g:8911:1: (lv_prefix_0_0= ',' )
            {
            // InternalOCLinEcore.g:8911:1: (lv_prefix_0_0= ',' )
            // InternalOCLinEcore.g:8912:3: lv_prefix_0_0= ','
            {
            lv_prefix_0_0=(Token)match(input,60,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ",");

            }

            }


            }

            // InternalOCLinEcore.g:8925:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:8926:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:8926:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:8927:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_126);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:8943:2: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?
            int alt214=4;
            alt214 = dfa214.predict(input);
            switch (alt214) {
                case 1 :
                    // InternalOCLinEcore.g:8943:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:8943:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:8943:5: otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_0_0());

                    }
                    // InternalOCLinEcore.g:8947:1: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
                    // InternalOCLinEcore.g:8948:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                    {
                    // InternalOCLinEcore.g:8948:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                    // InternalOCLinEcore.g:8949:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCoIterator",
                              		lv_ownedCoIterator_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:8965:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt209=2;
                    int LA209_0 = input.LA(1);

                    if ( (LA209_0==63) ) {
                        alt209=1;
                    }
                    switch (alt209) {
                        case 1 :
                            // InternalOCLinEcore.g:8965:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());

                            }
                            // InternalOCLinEcore.g:8969:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:8970:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:8970:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalOCLinEcore.g:8971:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:8988:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
                    {
                    // InternalOCLinEcore.g:8988:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
                    // InternalOCLinEcore.g:8988:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
                    {
                    otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_1_0());

                    }
                    // InternalOCLinEcore.g:8992:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:8993:1: (lv_ownedType_7_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:8993:1: (lv_ownedType_7_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:8994:3: lv_ownedType_7_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_128);
                    lv_ownedType_7_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_7_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:9010:2: (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==123) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalOCLinEcore.g:9010:4: otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                            {
                            otherlv_8=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_1_2_0());

                            }
                            // InternalOCLinEcore.g:9014:1: ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:9015:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:9015:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:9016:3: lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_127);
                            lv_ownedCoIterator_9_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_9_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalOCLinEcore.g:9032:4: (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==63) ) {
                        alt211=1;
                    }
                    switch (alt211) {
                        case 1 :
                            // InternalOCLinEcore.g:9032:6: otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                            {
                            otherlv_10=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_1_3_0());

                            }
                            // InternalOCLinEcore.g:9036:1: ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:9037:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:9037:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                            // InternalOCLinEcore.g:9038:3: lv_ownedInitExpression_11_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_11_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_11_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:9055:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
                    {
                    // InternalOCLinEcore.g:9055:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
                    // InternalOCLinEcore.g:9055:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
                    {
                    // InternalOCLinEcore.g:9055:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )?
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==57) ) {
                        alt212=1;
                    }
                    switch (alt212) {
                        case 1 :
                            // InternalOCLinEcore.g:9055:9: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                            {
                            otherlv_12=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_2_0_0());

                            }
                            // InternalOCLinEcore.g:9059:1: ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                            // InternalOCLinEcore.g:9060:1: (lv_ownedType_13_0= ruleTypeExpCS )
                            {
                            // InternalOCLinEcore.g:9060:1: (lv_ownedType_13_0= ruleTypeExpCS )
                            // InternalOCLinEcore.g:9061:3: lv_ownedType_13_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_129);
                            lv_ownedType_13_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_13_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalOCLinEcore.g:9077:4: (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==123) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // InternalOCLinEcore.g:9077:6: otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                            {
                            otherlv_14=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_2_1_0());

                            }
                            // InternalOCLinEcore.g:9081:1: ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                            // InternalOCLinEcore.g:9082:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                            {
                            // InternalOCLinEcore.g:9082:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                            // InternalOCLinEcore.g:9083:3: lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_130);
                            lv_ownedCoIterator_15_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_15_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,132,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_2_2());

                    }
                    // InternalOCLinEcore.g:9103:1: ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
                    // InternalOCLinEcore.g:9104:1: (lv_ownedInitExpression_17_0= ruleExpCS )
                    {
                    // InternalOCLinEcore.g:9104:1: (lv_ownedInitExpression_17_0= ruleExpCS )
                    // InternalOCLinEcore.g:9105:3: lv_ownedInitExpression_17_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_17_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_17_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalOCLinEcore.g:9129:1: entryRuleNavigatingSemiArgCS returns [EObject current=null] : iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF ;
    public final EObject entryRuleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingSemiArgCS = null;


        try {
            // InternalOCLinEcore.g:9130:2: (iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF )
            // InternalOCLinEcore.g:9131:2: iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingSemiArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalOCLinEcore.g:9138:1: ruleNavigatingSemiArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9141:28: ( ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalOCLinEcore.g:9142:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalOCLinEcore.g:9142:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalOCLinEcore.g:9142:2: ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalOCLinEcore.g:9142:2: ( (lv_prefix_0_0= ';' ) )
            // InternalOCLinEcore.g:9143:1: (lv_prefix_0_0= ';' )
            {
            // InternalOCLinEcore.g:9143:1: (lv_prefix_0_0= ';' )
            // InternalOCLinEcore.g:9144:3: lv_prefix_0_0= ';'
            {
            lv_prefix_0_0=(Token)match(input,58,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ";");

            }

            }


            }

            // InternalOCLinEcore.g:9157:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalOCLinEcore.g:9158:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalOCLinEcore.g:9158:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalOCLinEcore.g:9159:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9175:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==57) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalOCLinEcore.g:9175:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:9179:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:9180:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:9180:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:9181:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:9197:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt215=2;
                    int LA215_0 = input.LA(1);

                    if ( (LA215_0==63) ) {
                        alt215=1;
                    }
                    switch (alt215) {
                        case 1 :
                            // InternalOCLinEcore.g:9197:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalOCLinEcore.g:9201:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalOCLinEcore.g:9202:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalOCLinEcore.g:9202:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalOCLinEcore.g:9203:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalOCLinEcore.g:9227:1: entryRuleNavigatingArgExpCS returns [EObject current=null] : iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF ;
    public final EObject entryRuleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgExpCS = null;


        try {
            // InternalOCLinEcore.g:9228:2: (iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF )
            // InternalOCLinEcore.g:9229:2: iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalOCLinEcore.g:9236:1: ruleNavigatingArgExpCS returns [EObject current=null] : this_ExpCS_0= ruleExpCS ;
    public final EObject ruleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_ExpCS_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9239:28: (this_ExpCS_0= ruleExpCS )
            // InternalOCLinEcore.g:9241:2: this_ExpCS_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ExpCS_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpCS_0;
                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleCoIteratorVariableCS"
    // InternalOCLinEcore.g:9260:1: entryRuleCoIteratorVariableCS returns [EObject current=null] : iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF ;
    public final EObject entryRuleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoIteratorVariableCS = null;


        try {
            // InternalOCLinEcore.g:9261:2: (iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF )
            // InternalOCLinEcore.g:9262:2: iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCoIteratorVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCoIteratorVariableCS=ruleCoIteratorVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCoIteratorVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoIteratorVariableCS"


    // $ANTLR start "ruleCoIteratorVariableCS"
    // InternalOCLinEcore.g:9269:1: ruleCoIteratorVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9272:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalOCLinEcore.g:9273:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalOCLinEcore.g:9273:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalOCLinEcore.g:9273:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalOCLinEcore.g:9273:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:9274:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:9274:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:9275:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9291:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==57) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalOCLinEcore.g:9291:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCoIteratorVariableCSAccess().getColonKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:9295:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:9296:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:9296:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:9297:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoIteratorVariableCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalOCLinEcore.g:9321:1: entryRuleIfExpCS returns [EObject current=null] : iv_ruleIfExpCS= ruleIfExpCS EOF ;
    public final EObject entryRuleIfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpCS = null;


        try {
            // InternalOCLinEcore.g:9322:2: (iv_ruleIfExpCS= ruleIfExpCS EOF )
            // InternalOCLinEcore.g:9323:2: iv_ruleIfExpCS= ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfExpCS=ruleIfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalOCLinEcore.g:9330:1: ruleIfExpCS returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) ;
    public final EObject ruleIfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedCondition_1_1 = null;

        EObject lv_ownedCondition_1_2 = null;

        EObject lv_ownedThenExpression_3_0 = null;

        EObject lv_ownedIfThenExpressions_4_0 = null;

        EObject lv_ownedElseExpression_6_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9333:28: ( (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) )
            // InternalOCLinEcore.g:9334:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            {
            // InternalOCLinEcore.g:9334:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            // InternalOCLinEcore.g:9334:3: otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif'
            {
            otherlv_0=(Token)match(input,134,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());

            }
            // InternalOCLinEcore.g:9338:1: ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) )
            // InternalOCLinEcore.g:9339:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            {
            // InternalOCLinEcore.g:9339:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            // InternalOCLinEcore.g:9340:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            {
            // InternalOCLinEcore.g:9340:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            int alt218=2;
            alt218 = dfa218.predict(input);
            switch (alt218) {
                case 1 :
                    // InternalOCLinEcore.g:9341:3: lv_ownedCondition_1_1= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_ownedCondition_1_1=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_1,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9356:8: lv_ownedCondition_1_2= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_ownedCondition_1_2=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_2,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());

            }
            // InternalOCLinEcore.g:9378:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9379:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9379:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalOCLinEcore.g:9380:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_133);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9396:2: ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==138) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalOCLinEcore.g:9397:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    {
            	    // InternalOCLinEcore.g:9397:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    // InternalOCLinEcore.g:9398:3: lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_133);
            	    lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedIfThenExpressions",
            	              		lv_ownedIfThenExpressions_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            otherlv_5=(Token)match(input,136,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());

            }
            // InternalOCLinEcore.g:9418:1: ( (lv_ownedElseExpression_6_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9419:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9419:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            // InternalOCLinEcore.g:9420:3: lv_ownedElseExpression_6_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_ownedElseExpression_6_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedElseExpression",
                      		lv_ownedElseExpression_6_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalOCLinEcore.g:9448:1: entryRuleElseIfThenExpCS returns [EObject current=null] : iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF ;
    public final EObject entryRuleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfThenExpCS = null;


        try {
            // InternalOCLinEcore.g:9449:2: (iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF )
            // InternalOCLinEcore.g:9450:2: iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfThenExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalOCLinEcore.g:9457:1: ruleElseIfThenExpCS returns [EObject current=null] : (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;

        EObject lv_ownedThenExpression_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9460:28: ( (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9461:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9461:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9461:3: otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,138,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());

            }
            // InternalOCLinEcore.g:9465:1: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9466:1: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9466:1: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalOCLinEcore.g:9467:3: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());

            }
            // InternalOCLinEcore.g:9487:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9488:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9488:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalOCLinEcore.g:9489:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalOCLinEcore.g:9513:1: entryRuleLetExpCS returns [EObject current=null] : iv_ruleLetExpCS= ruleLetExpCS EOF ;
    public final EObject entryRuleLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpCS = null;


        try {
            // InternalOCLinEcore.g:9514:2: (iv_ruleLetExpCS= ruleLetExpCS EOF )
            // InternalOCLinEcore.g:9515:2: iv_ruleLetExpCS= ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetExpCS=ruleLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalOCLinEcore.g:9522:1: ruleLetExpCS returns [EObject current=null] : (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedVariables_1_0 = null;

        EObject lv_ownedVariables_3_0 = null;

        EObject lv_ownedInExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9525:28: ( (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9526:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9526:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9526:3: otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,139,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());

            }
            // InternalOCLinEcore.g:9530:1: ( (lv_ownedVariables_1_0= ruleLetVariableCS ) )
            // InternalOCLinEcore.g:9531:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            {
            // InternalOCLinEcore.g:9531:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            // InternalOCLinEcore.g:9532:3: lv_ownedVariables_1_0= ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_ownedVariables_1_0=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedVariables",
                      		lv_ownedVariables_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9548:2: (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( (LA220_0==60) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // InternalOCLinEcore.g:9548:4: otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    {
            	    otherlv_2=(Token)match(input,60,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalOCLinEcore.g:9552:1: ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    // InternalOCLinEcore.g:9553:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    {
            	    // InternalOCLinEcore.g:9553:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    // InternalOCLinEcore.g:9554:3: lv_ownedVariables_3_0= ruleLetVariableCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_135);
            	    lv_ownedVariables_3_0=ruleLetVariableCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedVariables",
            	              		lv_ownedVariables_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);

            otherlv_4=(Token)match(input,132,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());

            }
            // InternalOCLinEcore.g:9574:1: ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9575:1: (lv_ownedInExpression_5_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9575:1: (lv_ownedInExpression_5_0= ruleExpCS )
            // InternalOCLinEcore.g:9576:3: lv_ownedInExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalOCLinEcore.g:9600:1: entryRuleLetVariableCS returns [EObject current=null] : iv_ruleLetVariableCS= ruleLetVariableCS EOF ;
    public final EObject entryRuleLetVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetVariableCS = null;


        try {
            // InternalOCLinEcore.g:9601:2: (iv_ruleLetVariableCS= ruleLetVariableCS EOF )
            // InternalOCLinEcore.g:9602:2: iv_ruleLetVariableCS= ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetVariableCS=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalOCLinEcore.g:9609:1: ruleLetVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRoundBracketedClause_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9612:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) )
            // InternalOCLinEcore.g:9613:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            {
            // InternalOCLinEcore.g:9613:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            // InternalOCLinEcore.g:9613:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            {
            // InternalOCLinEcore.g:9613:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:9614:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:9614:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:9615:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_136);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9631:2: ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==55) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalOCLinEcore.g:9632:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalOCLinEcore.g:9632:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    // InternalOCLinEcore.g:9633:3: lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalOCLinEcore.g:9649:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==57) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalOCLinEcore.g:9649:5: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    {
                    otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:9653:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalOCLinEcore.g:9654:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalOCLinEcore.g:9654:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalOCLinEcore.g:9655:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());

            }
            // InternalOCLinEcore.g:9675:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9676:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9676:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            // InternalOCLinEcore.g:9677:3: lv_ownedInitExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalOCLinEcore.g:9701:1: entryRuleNestedExpCS returns [EObject current=null] : iv_ruleNestedExpCS= ruleNestedExpCS EOF ;
    public final EObject entryRuleNestedExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpCS = null;


        try {
            // InternalOCLinEcore.g:9702:2: (iv_ruleNestedExpCS= ruleNestedExpCS EOF )
            // InternalOCLinEcore.g:9703:2: iv_ruleNestedExpCS= ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedExpCS=ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalOCLinEcore.g:9710:1: ruleNestedExpCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) ;
    public final EObject ruleNestedExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedExpression_1_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9713:28: ( (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) )
            // InternalOCLinEcore.g:9714:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            {
            // InternalOCLinEcore.g:9714:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            // InternalOCLinEcore.g:9714:3: otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalOCLinEcore.g:9718:1: ( (lv_ownedExpression_1_0= ruleExpCS ) )
            // InternalOCLinEcore.g:9719:1: (lv_ownedExpression_1_0= ruleExpCS )
            {
            // InternalOCLinEcore.g:9719:1: (lv_ownedExpression_1_0= ruleExpCS )
            // InternalOCLinEcore.g:9720:3: lv_ownedExpression_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_12);
            lv_ownedExpression_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalOCLinEcore.g:9748:1: entryRuleSelfExpCS returns [EObject current=null] : iv_ruleSelfExpCS= ruleSelfExpCS EOF ;
    public final EObject entryRuleSelfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfExpCS = null;


        try {
            // InternalOCLinEcore.g:9749:2: (iv_ruleSelfExpCS= ruleSelfExpCS EOF )
            // InternalOCLinEcore.g:9750:2: iv_ruleSelfExpCS= ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSelfExpCS=ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalOCLinEcore.g:9757:1: ruleSelfExpCS returns [EObject current=null] : ( () otherlv_1= 'self' ) ;
    public final EObject ruleSelfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9760:28: ( ( () otherlv_1= 'self' ) )
            // InternalOCLinEcore.g:9761:1: ( () otherlv_1= 'self' )
            {
            // InternalOCLinEcore.g:9761:1: ( () otherlv_1= 'self' )
            // InternalOCLinEcore.g:9761:2: () otherlv_1= 'self'
            {
            // InternalOCLinEcore.g:9761:2: ()
            // InternalOCLinEcore.g:9762:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleCommentCS"
    // InternalOCLinEcore.g:9782:1: entryRuleCommentCS returns [EObject current=null] : iv_ruleCommentCS= ruleCommentCS EOF ;
    public final EObject entryRuleCommentCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentCS = null;


        try {
            // InternalOCLinEcore.g:9783:2: (iv_ruleCommentCS= ruleCommentCS EOF )
            // InternalOCLinEcore.g:9784:2: iv_ruleCommentCS= ruleCommentCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentCS=ruleCommentCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentCS"


    // $ANTLR start "ruleCommentCS"
    // InternalOCLinEcore.g:9791:1: ruleCommentCS returns [EObject current=null] : ( (lv_value_0_0= RULE_ML_DOCUMENTATION ) ) ;
    public final EObject ruleCommentCS() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9794:28: ( ( (lv_value_0_0= RULE_ML_DOCUMENTATION ) ) )
            // InternalOCLinEcore.g:9795:1: ( (lv_value_0_0= RULE_ML_DOCUMENTATION ) )
            {
            // InternalOCLinEcore.g:9795:1: ( (lv_value_0_0= RULE_ML_DOCUMENTATION ) )
            // InternalOCLinEcore.g:9796:1: (lv_value_0_0= RULE_ML_DOCUMENTATION )
            {
            // InternalOCLinEcore.g:9796:1: (lv_value_0_0= RULE_ML_DOCUMENTATION )
            // InternalOCLinEcore.g:9797:3: lv_value_0_0= RULE_ML_DOCUMENTATION
            {
            lv_value_0_0=(Token)match(input,RULE_ML_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getCommentCSAccess().getValueML_DOCUMENTATIONTerminalRuleCall_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCommentCSRule());
              	        }
                     		setWithLastConsumed(
                     			current,
                     			"value",
                      		lv_value_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.ML_DOCUMENTATION");

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalOCLinEcore.g:9821:1: entryRuleMultiplicityBoundsCS returns [EObject current=null] : iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF ;
    public final EObject entryRuleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityBoundsCS = null;


        try {
            // InternalOCLinEcore.g:9822:2: (iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF )
            // InternalOCLinEcore.g:9823:2: iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityBoundsCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalOCLinEcore.g:9830:1: ruleMultiplicityBoundsCS returns [EObject current=null] : ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) ;
    public final EObject ruleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_lowerBound_0_0 = null;

        AntlrDatatypeRuleToken lv_upperBound_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9833:28: ( ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) )
            // InternalOCLinEcore.g:9834:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            {
            // InternalOCLinEcore.g:9834:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            // InternalOCLinEcore.g:9834:2: ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            {
            // InternalOCLinEcore.g:9834:2: ( (lv_lowerBound_0_0= ruleLOWER ) )
            // InternalOCLinEcore.g:9835:1: (lv_lowerBound_0_0= ruleLOWER )
            {
            // InternalOCLinEcore.g:9835:1: (lv_lowerBound_0_0= ruleLOWER )
            // InternalOCLinEcore.g:9836:3: lv_lowerBound_0_0= ruleLOWER
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_110);
            lv_lowerBound_0_0=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
              	        }
                     		set(
                     			current,
                     			"lowerBound",
                      		lv_lowerBound_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:9852:2: (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==120) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalOCLinEcore.g:9852:4: otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) )
                    {
                    otherlv_1=(Token)match(input,120,FollowSets000.FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:9856:1: ( (lv_upperBound_2_0= ruleUPPER ) )
                    // InternalOCLinEcore.g:9857:1: (lv_upperBound_2_0= ruleUPPER )
                    {
                    // InternalOCLinEcore.g:9857:1: (lv_upperBound_2_0= ruleUPPER )
                    // InternalOCLinEcore.g:9858:3: lv_upperBound_2_0= ruleUPPER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_upperBound_2_0=ruleUPPER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
                      	        }
                             		set(
                             			current,
                             			"upperBound",
                              		lv_upperBound_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.UPPER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalOCLinEcore.g:9882:1: entryRuleMultiplicityCS returns [EObject current=null] : iv_ruleMultiplicityCS= ruleMultiplicityCS EOF ;
    public final EObject entryRuleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityCS = null;


        try {
            // InternalOCLinEcore.g:9883:2: (iv_ruleMultiplicityCS= ruleMultiplicityCS EOF )
            // InternalOCLinEcore.g:9884:2: iv_ruleMultiplicityCS= ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityCS=ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalOCLinEcore.g:9891:1: ruleMultiplicityCS returns [EObject current=null] : (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) ;
    public final EObject ruleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_isNullFree_4_0=null;
        Token otherlv_5=null;
        EObject this_MultiplicityBoundsCS_1 = null;

        EObject this_MultiplicityStringCS_2 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:9894:28: ( (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) )
            // InternalOCLinEcore.g:9895:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            {
            // InternalOCLinEcore.g:9895:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            // InternalOCLinEcore.g:9895:3: otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']'
            {
            otherlv_0=(Token)match(input,130,FollowSets000.FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalOCLinEcore.g:9899:1: (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS )
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==RULE_INT) ) {
                alt224=1;
            }
            else if ( (LA224_0==86||LA224_0==88||LA224_0==143) ) {
                alt224=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }
            switch (alt224) {
                case 1 :
                    // InternalOCLinEcore.g:9900:2: this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_139);
                    this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityBoundsCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9913:2: this_MultiplicityStringCS_2= ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_139);
                    this_MultiplicityStringCS_2=ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityStringCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalOCLinEcore.g:9924:2: (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )?
            int alt225=3;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==141) ) {
                alt225=1;
            }
            else if ( (LA225_0==142) ) {
                alt225=2;
            }
            switch (alt225) {
                case 1 :
                    // InternalOCLinEcore.g:9924:4: otherlv_3= '|?'
                    {
                    otherlv_3=(Token)match(input,141,FollowSets000.FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9929:6: ( (lv_isNullFree_4_0= '|1' ) )
                    {
                    // InternalOCLinEcore.g:9929:6: ( (lv_isNullFree_4_0= '|1' ) )
                    // InternalOCLinEcore.g:9930:1: (lv_isNullFree_4_0= '|1' )
                    {
                    // InternalOCLinEcore.g:9930:1: (lv_isNullFree_4_0= '|1' )
                    // InternalOCLinEcore.g:9931:3: lv_isNullFree_4_0= '|1'
                    {
                    lv_isNullFree_4_0=(Token)match(input,142,FollowSets000.FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNullFree", true, "|1");

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalOCLinEcore.g:9956:1: entryRuleMultiplicityStringCS returns [EObject current=null] : iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF ;
    public final EObject entryRuleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityStringCS = null;


        try {
            // InternalOCLinEcore.g:9957:2: (iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF )
            // InternalOCLinEcore.g:9958:2: iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityStringCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalOCLinEcore.g:9965:1: ruleMultiplicityStringCS returns [EObject current=null] : ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) ;
    public final EObject ruleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        Token lv_stringBounds_0_1=null;
        Token lv_stringBounds_0_2=null;
        Token lv_stringBounds_0_3=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:9968:28: ( ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) )
            // InternalOCLinEcore.g:9969:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            {
            // InternalOCLinEcore.g:9969:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            // InternalOCLinEcore.g:9970:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            {
            // InternalOCLinEcore.g:9970:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            // InternalOCLinEcore.g:9971:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            {
            // InternalOCLinEcore.g:9971:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            int alt226=3;
            switch ( input.LA(1) ) {
            case 86:
                {
                alt226=1;
                }
                break;
            case 88:
                {
                alt226=2;
                }
                break;
            case 143:
                {
                alt226=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 226, 0, input);

                throw nvae;
            }

            switch (alt226) {
                case 1 :
                    // InternalOCLinEcore.g:9972:3: lv_stringBounds_0_1= '*'
                    {
                    lv_stringBounds_0_1=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_1, null);

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:9984:8: lv_stringBounds_0_2= '+'
                    {
                    lv_stringBounds_0_2=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_2, null);

                    }

                    }
                    break;
                case 3 :
                    // InternalOCLinEcore.g:9996:8: lv_stringBounds_0_3= '?'
                    {
                    lv_stringBounds_0_3=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_3, null);

                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalOCLinEcore.g:10019:1: entryRulePathNameCS returns [EObject current=null] : iv_rulePathNameCS= rulePathNameCS EOF ;
    public final EObject entryRulePathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathNameCS = null;


        try {
            // InternalOCLinEcore.g:10020:2: (iv_rulePathNameCS= rulePathNameCS EOF )
            // InternalOCLinEcore.g:10021:2: iv_rulePathNameCS= rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePathNameCS=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalOCLinEcore.g:10028:1: rulePathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject rulePathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10031:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalOCLinEcore.g:10032:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalOCLinEcore.g:10032:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalOCLinEcore.g:10032:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalOCLinEcore.g:10032:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalOCLinEcore.g:10033:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalOCLinEcore.g:10033:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalOCLinEcore.g:10034:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:10050:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop227:
            do {
                int alt227=2;
                int LA227_0 = input.LA(1);

                if ( (LA227_0==106) ) {
                    alt227=1;
                }


                switch (alt227) {
            	case 1 :
            	    // InternalOCLinEcore.g:10050:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,106,FollowSets000.FOLLOW_102); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:10054:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalOCLinEcore.g:10055:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalOCLinEcore.g:10055:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalOCLinEcore.g:10056:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_101);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop227;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalOCLinEcore.g:10080:1: entryRuleFirstPathElementCS returns [EObject current=null] : iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF ;
    public final EObject entryRuleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstPathElementCS = null;


        try {
            // InternalOCLinEcore.g:10081:2: (iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF )
            // InternalOCLinEcore.g:10082:2: iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFirstPathElementCS=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalOCLinEcore.g:10089:1: ruleFirstPathElementCS returns [EObject current=null] : ( ( ruleUnrestrictedName ) ) ;
    public final EObject ruleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10092:28: ( ( ( ruleUnrestrictedName ) ) )
            // InternalOCLinEcore.g:10093:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalOCLinEcore.g:10093:1: ( ( ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:10094:1: ( ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:10094:1: ( ruleUnrestrictedName )
            // InternalOCLinEcore.g:10095:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getFirstPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalOCLinEcore.g:10119:1: entryRuleNextPathElementCS returns [EObject current=null] : iv_ruleNextPathElementCS= ruleNextPathElementCS EOF ;
    public final EObject entryRuleNextPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNextPathElementCS = null;


        try {
            // InternalOCLinEcore.g:10120:2: (iv_ruleNextPathElementCS= ruleNextPathElementCS EOF )
            // InternalOCLinEcore.g:10121:2: iv_ruleNextPathElementCS= ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNextPathElementCS=ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNextPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalOCLinEcore.g:10128:1: ruleNextPathElementCS returns [EObject current=null] : ( ( ruleUnreservedName ) ) ;
    public final EObject ruleNextPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10131:28: ( ( ( ruleUnreservedName ) ) )
            // InternalOCLinEcore.g:10132:1: ( ( ruleUnreservedName ) )
            {
            // InternalOCLinEcore.g:10132:1: ( ( ruleUnreservedName ) )
            // InternalOCLinEcore.g:10133:1: ( ruleUnreservedName )
            {
            // InternalOCLinEcore.g:10133:1: ( ruleUnreservedName )
            // InternalOCLinEcore.g:10134:3: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNextPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalOCLinEcore.g:10158:1: entryRuleTemplateBindingCS returns [EObject current=null] : iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF ;
    public final EObject entryRuleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateBindingCS = null;


        try {
            // InternalOCLinEcore.g:10159:2: (iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF )
            // InternalOCLinEcore.g:10160:2: iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateBindingCS=ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalOCLinEcore.g:10167:1: ruleTemplateBindingCS returns [EObject current=null] : ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedSubstitutions_0_0 = null;

        EObject lv_ownedSubstitutions_2_0 = null;

        EObject lv_ownedMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10170:28: ( ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) )
            // InternalOCLinEcore.g:10171:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            {
            // InternalOCLinEcore.g:10171:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            // InternalOCLinEcore.g:10171:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            {
            // InternalOCLinEcore.g:10171:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) )
            // InternalOCLinEcore.g:10172:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            {
            // InternalOCLinEcore.g:10172:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            // InternalOCLinEcore.g:10173:3: lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_141);
            lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedSubstitutions",
                      		lv_ownedSubstitutions_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:10189:2: (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==60) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // InternalOCLinEcore.g:10189:4: otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    {
            	    otherlv_1=(Token)match(input,60,FollowSets000.FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());

            	    }
            	    // InternalOCLinEcore.g:10193:1: ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    // InternalOCLinEcore.g:10194:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    {
            	    // InternalOCLinEcore.g:10194:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    // InternalOCLinEcore.g:10195:3: lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_141);
            	    lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSubstitutions",
            	              		lv_ownedSubstitutions_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);

            // InternalOCLinEcore.g:10211:4: ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==130) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalOCLinEcore.g:10212:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    {
                    // InternalOCLinEcore.g:10212:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    // InternalOCLinEcore.g:10213:3: lv_ownedMultiplicity_3_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_3_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalOCLinEcore.g:10237:1: entryRuleTemplateParameterSubstitutionCS returns [EObject current=null] : iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF ;
    public final EObject entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateParameterSubstitutionCS = null;


        try {
            // InternalOCLinEcore.g:10238:2: (iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF )
            // InternalOCLinEcore.g:10239:2: iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateParameterSubstitutionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalOCLinEcore.g:10246:1: ruleTemplateParameterSubstitutionCS returns [EObject current=null] : ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) ;
    public final EObject ruleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedActualParameter_0_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10249:28: ( ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) )
            // InternalOCLinEcore.g:10250:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            {
            // InternalOCLinEcore.g:10250:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            // InternalOCLinEcore.g:10251:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            {
            // InternalOCLinEcore.g:10251:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            // InternalOCLinEcore.g:10252:3: lv_ownedActualParameter_0_0= ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedActualParameter_0_0=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedActualParameter",
                      		lv_ownedActualParameter_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalOCLinEcore.g:10276:1: entryRuleTypeParameterCS returns [EObject current=null] : iv_ruleTypeParameterCS= ruleTypeParameterCS EOF ;
    public final EObject entryRuleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeParameterCS = null;


        try {
            // InternalOCLinEcore.g:10277:2: (iv_ruleTypeParameterCS= ruleTypeParameterCS EOF )
            // InternalOCLinEcore.g:10278:2: iv_ruleTypeParameterCS= ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeParameterCS=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalOCLinEcore.g:10285:1: ruleTypeParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) ;
    public final EObject ruleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedExtends_2_0 = null;

        EObject lv_ownedExtends_4_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10288:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) )
            // InternalOCLinEcore.g:10289:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            {
            // InternalOCLinEcore.g:10289:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            // InternalOCLinEcore.g:10289:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            {
            // InternalOCLinEcore.g:10289:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalOCLinEcore.g:10290:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalOCLinEcore.g:10290:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalOCLinEcore.g:10291:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_142);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalOCLinEcore.g:10307:2: (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==31) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalOCLinEcore.g:10307:4: otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_1=(Token)match(input,31,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());

                    }
                    // InternalOCLinEcore.g:10311:1: ( (lv_ownedExtends_2_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:10312:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:10312:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:10313:3: lv_ownedExtends_2_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_143);
                    lv_ownedExtends_2_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_2_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalOCLinEcore.g:10329:2: (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==144) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // InternalOCLinEcore.g:10329:4: otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,144,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());

                    	    }
                    	    // InternalOCLinEcore.g:10333:1: ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    // InternalOCLinEcore.g:10334:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    {
                    	    // InternalOCLinEcore.g:10334:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    // InternalOCLinEcore.g:10335:3: lv_ownedExtends_4_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_143);
                    	    lv_ownedExtends_4_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExtends",
                    	              		lv_ownedExtends_4_0,
                    	              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop230;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalOCLinEcore.g:10359:1: entryRuleTypeRefCS returns [EObject current=null] : iv_ruleTypeRefCS= ruleTypeRefCS EOF ;
    public final EObject entryRuleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:10360:2: (iv_ruleTypeRefCS= ruleTypeRefCS EOF )
            // InternalOCLinEcore.g:10361:2: iv_ruleTypeRefCS= ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRefCS=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalOCLinEcore.g:10368:1: ruleTypeRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) ;
    public final EObject ruleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject this_WildcardTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10371:28: ( (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) )
            // InternalOCLinEcore.g:10372:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            {
            // InternalOCLinEcore.g:10372:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( ((LA232_0>=RULE_SIMPLE_ID && LA232_0<=RULE_ESCAPED_ID)||LA232_0==18||(LA232_0>=20 && LA232_0<=54)||LA232_0==59||LA232_0==72||(LA232_0>=74 && LA232_0<=75)||LA232_0==77||LA232_0==81||(LA232_0>=104 && LA232_0<=105)||(LA232_0>=107 && LA232_0<=119)) ) {
                alt232=1;
            }
            else if ( (LA232_0==143) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalOCLinEcore.g:10373:2: this_TypedRefCS_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedRefCS_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedRefCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10386:2: this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalOCLinEcore.g:10405:1: entryRuleWildcardTypeRefCS returns [EObject current=null] : iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF ;
    public final EObject entryRuleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardTypeRefCS = null;


        try {
            // InternalOCLinEcore.g:10406:2: (iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF )
            // InternalOCLinEcore.g:10407:2: iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalOCLinEcore.g:10414:1: ruleWildcardTypeRefCS returns [EObject current=null] : ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) ;
    public final EObject ruleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedExtends_3_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10417:28: ( ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) )
            // InternalOCLinEcore.g:10418:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            {
            // InternalOCLinEcore.g:10418:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            // InternalOCLinEcore.g:10418:2: () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            {
            // InternalOCLinEcore.g:10418:2: ()
            // InternalOCLinEcore.g:10419:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,143,FollowSets000.FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());

            }
            // InternalOCLinEcore.g:10431:1: (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==31) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // InternalOCLinEcore.g:10431:3: otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());

                    }
                    // InternalOCLinEcore.g:10435:1: ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    // InternalOCLinEcore.g:10436:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    {
                    // InternalOCLinEcore.g:10436:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    // InternalOCLinEcore.g:10437:3: lv_ownedExtends_3_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExtends_3_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_3_0,
                              		"org.eclipse.ocl.xtext.oclinecore.OCLinEcore.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalOCLinEcore.g:10461:1: entryRuleID returns [String current=null] : iv_ruleID= ruleID EOF ;
    public final String entryRuleID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID = null;


        try {
            // InternalOCLinEcore.g:10462:2: (iv_ruleID= ruleID EOF )
            // InternalOCLinEcore.g:10463:2: iv_ruleID= ruleID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleID=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalOCLinEcore.g:10470:1: ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) ;
    public final AntlrDatatypeRuleToken ruleID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SIMPLE_ID_0=null;
        Token this_ESCAPED_ID_1=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10473:28: ( (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) )
            // InternalOCLinEcore.g:10474:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            {
            // InternalOCLinEcore.g:10474:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==RULE_SIMPLE_ID) ) {
                alt234=1;
            }
            else if ( (LA234_0==RULE_ESCAPED_ID) ) {
                alt234=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }
            switch (alt234) {
                case 1 :
                    // InternalOCLinEcore.g:10474:6: this_SIMPLE_ID_0= RULE_SIMPLE_ID
                    {
                    this_SIMPLE_ID_0=(Token)match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SIMPLE_ID_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10482:10: this_ESCAPED_ID_1= RULE_ESCAPED_ID
                    {
                    this_ESCAPED_ID_1=(Token)match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESCAPED_ID_1);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalOCLinEcore.g:10497:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


        try {
            // InternalOCLinEcore.g:10498:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalOCLinEcore.g:10499:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalOCLinEcore.g:10506:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= ruleID ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ID_0 = null;


         enterRule();

        try {
            // InternalOCLinEcore.g:10509:28: (this_ID_0= ruleID )
            // InternalOCLinEcore.g:10511:5: this_ID_0= ruleID
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ID_0=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalOCLinEcore.g:10529:1: entryRuleLOWER returns [String current=null] : iv_ruleLOWER= ruleLOWER EOF ;
    public final String entryRuleLOWER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLOWER = null;


        try {
            // InternalOCLinEcore.g:10530:2: (iv_ruleLOWER= ruleLOWER EOF )
            // InternalOCLinEcore.g:10531:2: iv_ruleLOWER= ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLOWER=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLOWER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalOCLinEcore.g:10538:1: ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleLOWER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10541:28: (this_INT_0= RULE_INT )
            // InternalOCLinEcore.g:10542:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalOCLinEcore.g:10557:1: entryRuleNUMBER_LITERAL returns [String current=null] : iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF ;
    public final String entryRuleNUMBER_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER_LITERAL = null;


        try {
            // InternalOCLinEcore.g:10558:2: (iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF )
            // InternalOCLinEcore.g:10559:2: iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER_LITERAL.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalOCLinEcore.g:10566:1: ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleNUMBER_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10569:28: (this_INT_0= RULE_INT )
            // InternalOCLinEcore.g:10570:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalOCLinEcore.g:10585:1: entryRuleStringLiteral returns [String current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final String entryRuleStringLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStringLiteral = null;


        try {
            // InternalOCLinEcore.g:10586:2: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalOCLinEcore.g:10587:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalOCLinEcore.g:10594:1: ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleStringLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10597:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalOCLinEcore.g:10598:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleUPPER"
    // InternalOCLinEcore.g:10613:1: entryRuleUPPER returns [String current=null] : iv_ruleUPPER= ruleUPPER EOF ;
    public final String entryRuleUPPER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPER = null;


        try {
            // InternalOCLinEcore.g:10614:2: (iv_ruleUPPER= ruleUPPER EOF )
            // InternalOCLinEcore.g:10615:2: iv_ruleUPPER= ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUPPER=ruleUPPER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalOCLinEcore.g:10622:1: ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleUPPER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10625:28: ( (this_INT_0= RULE_INT | kw= '*' ) )
            // InternalOCLinEcore.g:10626:1: (this_INT_0= RULE_INT | kw= '*' )
            {
            // InternalOCLinEcore.g:10626:1: (this_INT_0= RULE_INT | kw= '*' )
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==RULE_INT) ) {
                alt235=1;
            }
            else if ( (LA235_0==86) ) {
                alt235=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }
            switch (alt235) {
                case 1 :
                    // InternalOCLinEcore.g:10626:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalOCLinEcore.g:10635:2: kw= '*'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalOCLinEcore.g:10648:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // InternalOCLinEcore.g:10649:2: (iv_ruleURI= ruleURI EOF )
            // InternalOCLinEcore.g:10650:2: iv_ruleURI= ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURI=ruleURI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURI.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalOCLinEcore.g:10657:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalOCLinEcore.g:10660:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalOCLinEcore.g:10661:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURI"

    // $ANTLR start synpred331_InternalOCLinEcore
    public final void synpred331_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TypeLiteralCS_1 = null;


        // InternalOCLinEcore.g:7711:2: (this_TypeLiteralCS_1= ruleTypeLiteralCS )
        // InternalOCLinEcore.g:7711:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralCS_1=ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred331_InternalOCLinEcore

    // $ANTLR start synpred334_InternalOCLinEcore
    public final void synpred334_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;


        // InternalOCLinEcore.g:7807:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:7807:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:7807:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:7808:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_118);
        this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

        state._fsp--;
        if (state.failed) return ;
        // InternalOCLinEcore.g:7819:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        int alt325=2;
        int LA325_0 = input.LA(1);

        if ( (LA325_0==19||LA325_0==63||(LA325_0>=82 && LA325_0<=83)||(LA325_0>=86 && LA325_0<=103)) ) {
            alt325=1;
        }
        switch (alt325) {
            case 1 :
                // InternalOCLinEcore.g:7819:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                {
                // InternalOCLinEcore.g:7819:2: ()
                // InternalOCLinEcore.g:7820:2:
                {
                if ( state.backtracking==0 ) {

                  	  /* */

                }

                }

                // InternalOCLinEcore.g:7828:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                // InternalOCLinEcore.g:7829:1: (lv_name_2_0= ruleBinaryOperatorName )
                {
                // InternalOCLinEcore.g:7829:1: (lv_name_2_0= ruleBinaryOperatorName )
                // InternalOCLinEcore.g:7830:3: lv_name_2_0= ruleBinaryOperatorName
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_111);
                lv_name_2_0=ruleBinaryOperatorName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalOCLinEcore.g:7846:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                // InternalOCLinEcore.g:7847:1: (lv_ownedRight_3_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:7847:1: (lv_ownedRight_3_0= ruleExpCS )
                // InternalOCLinEcore.g:7848:3: lv_ownedRight_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedRight_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred334_InternalOCLinEcore

    // $ANTLR start synpred341_InternalOCLinEcore
    public final void synpred341_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TupleLiteralExpCS_4 = null;


        // InternalOCLinEcore.g:8109:2: (this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS )
        // InternalOCLinEcore.g:8109:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred341_InternalOCLinEcore

    // $ANTLR start synpred342_InternalOCLinEcore
    public final void synpred342_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_MapLiteralExpCS_5 = null;


        // InternalOCLinEcore.g:8122:2: (this_MapLiteralExpCS_5= ruleMapLiteralExpCS )
        // InternalOCLinEcore.g:8122:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred342_InternalOCLinEcore

    // $ANTLR start synpred343_InternalOCLinEcore
    public final void synpred343_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_CollectionLiteralExpCS_6 = null;


        // InternalOCLinEcore.g:8135:2: (this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS )
        // InternalOCLinEcore.g:8135:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred343_InternalOCLinEcore

    // $ANTLR start synpred345_InternalOCLinEcore
    public final void synpred345_InternalOCLinEcore_fragment() throws RecognitionException {
        EObject this_TypeLiteralExpCS_8 = null;


        // InternalOCLinEcore.g:8161:2: (this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS )
        // InternalOCLinEcore.g:8161:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred345_InternalOCLinEcore

    // $ANTLR start synpred358_InternalOCLinEcore
    public final void synpred358_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedCoIterator_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


        // InternalOCLinEcore.g:8590:3: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8590:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8590:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8590:5: otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
        {
        otherlv_1=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalOCLinEcore.g:8594:1: ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) )
        // InternalOCLinEcore.g:8595:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
        {
        // InternalOCLinEcore.g:8595:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
        // InternalOCLinEcore.g:8596:3: lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_127);
        lv_ownedCoIterator_2_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8612:2: (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
        int alt330=2;
        int LA330_0 = input.LA(1);

        if ( (LA330_0==63) ) {
            alt330=1;
        }
        switch (alt330) {
            case 1 :
                // InternalOCLinEcore.g:8612:4: otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                {
                otherlv_3=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return ;
                // InternalOCLinEcore.g:8616:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8617:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8617:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                // InternalOCLinEcore.g:8618:3: lv_ownedInitExpression_4_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_4_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred358_InternalOCLinEcore

    // $ANTLR start synpred361_InternalOCLinEcore
    public final void synpred361_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_ownedType_6_0 = null;

        EObject lv_ownedCoIterator_8_0 = null;

        EObject lv_ownedInitExpression_10_0 = null;


        // InternalOCLinEcore.g:8635:6: ( (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8635:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8635:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8635:8: otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
        {
        otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return ;
        // InternalOCLinEcore.g:8639:1: ( (lv_ownedType_6_0= ruleTypeExpCS ) )
        // InternalOCLinEcore.g:8640:1: (lv_ownedType_6_0= ruleTypeExpCS )
        {
        // InternalOCLinEcore.g:8640:1: (lv_ownedType_6_0= ruleTypeExpCS )
        // InternalOCLinEcore.g:8641:3: lv_ownedType_6_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_128);
        lv_ownedType_6_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8657:2: (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )?
        int alt331=2;
        int LA331_0 = input.LA(1);

        if ( (LA331_0==123) ) {
            alt331=1;
        }
        switch (alt331) {
            case 1 :
                // InternalOCLinEcore.g:8657:4: otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_7=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalOCLinEcore.g:8661:1: ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8662:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8662:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8663:3: lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_127);
                lv_ownedCoIterator_8_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8679:4: (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
        int alt332=2;
        int LA332_0 = input.LA(1);

        if ( (LA332_0==63) ) {
            alt332=1;
        }
        switch (alt332) {
            case 1 :
                // InternalOCLinEcore.g:8679:6: otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                {
                otherlv_9=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return ;
                // InternalOCLinEcore.g:8683:1: ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8684:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8684:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                // InternalOCLinEcore.g:8685:3: lv_ownedInitExpression_10_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_10_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred361_InternalOCLinEcore

    // $ANTLR start synpred364_InternalOCLinEcore
    public final void synpred364_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_ownedType_12_0 = null;

        EObject lv_ownedCoIterator_14_0 = null;

        EObject lv_ownedInitExpression_16_0 = null;


        // InternalOCLinEcore.g:8702:6: ( ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )
        // InternalOCLinEcore.g:8702:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
        {
        // InternalOCLinEcore.g:8702:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
        // InternalOCLinEcore.g:8702:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
        {
        // InternalOCLinEcore.g:8702:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )?
        int alt333=2;
        int LA333_0 = input.LA(1);

        if ( (LA333_0==57) ) {
            alt333=1;
        }
        switch (alt333) {
            case 1 :
                // InternalOCLinEcore.g:8702:9: otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                {
                otherlv_11=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return ;
                // InternalOCLinEcore.g:8706:1: ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                // InternalOCLinEcore.g:8707:1: (lv_ownedType_12_0= ruleTypeExpCS )
                {
                // InternalOCLinEcore.g:8707:1: (lv_ownedType_12_0= ruleTypeExpCS )
                // InternalOCLinEcore.g:8708:3: lv_ownedType_12_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_129);
                lv_ownedType_12_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:8724:4: (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )?
        int alt334=2;
        int LA334_0 = input.LA(1);

        if ( (LA334_0==123) ) {
            alt334=1;
        }
        switch (alt334) {
            case 1 :
                // InternalOCLinEcore.g:8724:6: otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_13=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalOCLinEcore.g:8728:1: ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:8729:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:8729:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:8730:3: lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_130);
                lv_ownedCoIterator_14_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_15=(Token)match(input,132,FollowSets000.FOLLOW_111); if (state.failed) return ;
        // InternalOCLinEcore.g:8750:1: ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
        // InternalOCLinEcore.g:8751:1: (lv_ownedInitExpression_16_0= ruleExpCS )
        {
        // InternalOCLinEcore.g:8751:1: (lv_ownedInitExpression_16_0= ruleExpCS )
        // InternalOCLinEcore.g:8752:3: lv_ownedInitExpression_16_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_16_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred364_InternalOCLinEcore

    // $ANTLR start synpred369_InternalOCLinEcore
    public final void synpred369_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


        // InternalOCLinEcore.g:8943:3: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8943:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8943:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8943:5: otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        {
        otherlv_2=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalOCLinEcore.g:8947:1: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
        // InternalOCLinEcore.g:8948:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        {
        // InternalOCLinEcore.g:8948:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        // InternalOCLinEcore.g:8949:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_127);
        lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:8965:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        int alt342=2;
        int LA342_0 = input.LA(1);

        if ( (LA342_0==63) ) {
            alt342=1;
        }
        switch (alt342) {
            case 1 :
                // InternalOCLinEcore.g:8965:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                {
                otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return ;
                // InternalOCLinEcore.g:8969:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                // InternalOCLinEcore.g:8970:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:8970:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                // InternalOCLinEcore.g:8971:3: lv_ownedInitExpression_5_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_5_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred369_InternalOCLinEcore

    // $ANTLR start synpred372_InternalOCLinEcore
    public final void synpred372_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_9_0 = null;

        EObject lv_ownedInitExpression_11_0 = null;


        // InternalOCLinEcore.g:8988:6: ( (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) )
        // InternalOCLinEcore.g:8988:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
        {
        // InternalOCLinEcore.g:8988:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
        // InternalOCLinEcore.g:8988:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
        {
        otherlv_6=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return ;
        // InternalOCLinEcore.g:8992:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
        // InternalOCLinEcore.g:8993:1: (lv_ownedType_7_0= ruleTypeExpCS )
        {
        // InternalOCLinEcore.g:8993:1: (lv_ownedType_7_0= ruleTypeExpCS )
        // InternalOCLinEcore.g:8994:3: lv_ownedType_7_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_128);
        lv_ownedType_7_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalOCLinEcore.g:9010:2: (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )?
        int alt343=2;
        int LA343_0 = input.LA(1);

        if ( (LA343_0==123) ) {
            alt343=1;
        }
        switch (alt343) {
            case 1 :
                // InternalOCLinEcore.g:9010:4: otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_8=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalOCLinEcore.g:9014:1: ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:9015:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:9015:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:9016:3: lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_127);
                lv_ownedCoIterator_9_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:9032:4: (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
        int alt344=2;
        int LA344_0 = input.LA(1);

        if ( (LA344_0==63) ) {
            alt344=1;
        }
        switch (alt344) {
            case 1 :
                // InternalOCLinEcore.g:9032:6: otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                {
                otherlv_10=(Token)match(input,63,FollowSets000.FOLLOW_111); if (state.failed) return ;
                // InternalOCLinEcore.g:9036:1: ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                // InternalOCLinEcore.g:9037:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                {
                // InternalOCLinEcore.g:9037:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                // InternalOCLinEcore.g:9038:3: lv_ownedInitExpression_11_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_11_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred372_InternalOCLinEcore

    // $ANTLR start synpred375_InternalOCLinEcore
    public final void synpred375_InternalOCLinEcore_fragment() throws RecognitionException {
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedCoIterator_15_0 = null;

        EObject lv_ownedInitExpression_17_0 = null;


        // InternalOCLinEcore.g:9055:6: ( ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )
        // InternalOCLinEcore.g:9055:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
        {
        // InternalOCLinEcore.g:9055:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
        // InternalOCLinEcore.g:9055:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
        {
        // InternalOCLinEcore.g:9055:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )?
        int alt345=2;
        int LA345_0 = input.LA(1);

        if ( (LA345_0==57) ) {
            alt345=1;
        }
        switch (alt345) {
            case 1 :
                // InternalOCLinEcore.g:9055:9: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                {
                otherlv_12=(Token)match(input,57,FollowSets000.FOLLOW_31); if (state.failed) return ;
                // InternalOCLinEcore.g:9059:1: ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                // InternalOCLinEcore.g:9060:1: (lv_ownedType_13_0= ruleTypeExpCS )
                {
                // InternalOCLinEcore.g:9060:1: (lv_ownedType_13_0= ruleTypeExpCS )
                // InternalOCLinEcore.g:9061:3: lv_ownedType_13_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_129);
                lv_ownedType_13_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalOCLinEcore.g:9077:4: (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )?
        int alt346=2;
        int LA346_0 = input.LA(1);

        if ( (LA346_0==123) ) {
            alt346=1;
        }
        switch (alt346) {
            case 1 :
                // InternalOCLinEcore.g:9077:6: otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_14=(Token)match(input,123,FollowSets000.FOLLOW_4); if (state.failed) return ;
                // InternalOCLinEcore.g:9081:1: ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                // InternalOCLinEcore.g:9082:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                {
                // InternalOCLinEcore.g:9082:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                // InternalOCLinEcore.g:9083:3: lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_130);
                lv_ownedCoIterator_15_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_16=(Token)match(input,132,FollowSets000.FOLLOW_111); if (state.failed) return ;
        // InternalOCLinEcore.g:9103:1: ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
        // InternalOCLinEcore.g:9104:1: (lv_ownedInitExpression_17_0= ruleExpCS )
        {
        // InternalOCLinEcore.g:9104:1: (lv_ownedInitExpression_17_0= ruleExpCS )
        // InternalOCLinEcore.g:9105:3: lv_ownedInitExpression_17_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_17_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred375_InternalOCLinEcore

    // Delegated rules

    public final boolean synpred361_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred341_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred341_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred358_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred343_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred343_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred369_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred369_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalOCLinEcore() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalOCLinEcore_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA72 dfa72 = new DFA72(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA218 dfa218 = new DFA218(this);
    static final String dfa_1s = "\57\uffff";
    static final String dfa_2s = "\1\5\54\71\2\uffff";
    static final String dfa_3s = "\1\121\54\152\2\uffff";
    static final String dfa_4s = "\55\uffff\1\2\1\1";
    static final String dfa_5s = "\57\uffff}>";
    static final String[] dfa_6s = {
            "\1\55\3\uffff\1\1\1\2\7\uffff\1\25\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\50\4\uffff\1\46\14\uffff\1\53\1\uffff\1\47\1\51\1\uffff\1\52\3\uffff\1\54",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "\1\56\1\55\21\uffff\1\55\35\uffff\1\55",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2489:2: ( ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' )?";
        }
    }
    static final String dfa_7s = "\24\uffff";
    static final String dfa_8s = "\1\10\1\11\1\30\1\11\1\32\2\11\1\uffff\1\11\1\25\3\11\1\25\2\uffff\1\25\2\uffff\1\25";
    static final String dfa_9s = "\2\113\1\77\1\121\1\77\2\121\1\uffff\1\121\1\77\1\122\2\121\1\77\2\uffff\1\54\2\uffff\1\54";
    static final String dfa_10s = "\7\uffff\1\2\6\uffff\1\1\1\5\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_11s = "\24\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\2\7\7\uffff\1\7\1\uffff\1\2\1\10\2\7\1\3\1\7\1\5\1\11\2\7\1\6\7\7\1\12\1\7\1\13\2\7\1\4\1\14\3\7\1\15\5\7\25\uffff\1\7",
            "\2\7\7\uffff\1\7\1\uffff\1\2\1\10\2\7\1\3\1\7\1\5\1\11\2\7\1\6\7\7\1\12\1\7\1\13\2\7\1\4\1\14\3\7\1\15\5\7\25\uffff\1\7",
            "\1\16\40\uffff\2\7\2\uffff\1\7\1\uffff\1\7",
            "\2\16\7\uffff\1\16\1\uffff\43\16\2\uffff\2\7\1\16\1\uffff\1\7\1\uffff\1\7\10\uffff\1\16\1\uffff\2\16\1\uffff\1\16\3\uffff\1\16",
            "\1\16\36\uffff\2\7\2\uffff\1\7\1\uffff\1\7",
            "\2\16\7\uffff\1\16\1\uffff\43\16\2\uffff\2\7\1\16\1\uffff\1\7\1\uffff\1\7\10\uffff\1\16\1\uffff\2\16\1\uffff\1\16\3\uffff\1\16",
            "\2\16\7\uffff\1\16\1\uffff\43\16\2\uffff\2\7\1\16\1\uffff\1\7\1\uffff\1\7\10\uffff\1\16\1\uffff\2\16\1\uffff\1\16\3\uffff\1\16",
            "",
            "\2\17\7\uffff\1\17\1\uffff\43\17\2\uffff\2\7\1\17\1\uffff\1\7\1\uffff\1\7\10\uffff\1\17\1\uffff\2\17\1\uffff\1\17\3\uffff\1\17",
            "\1\17\20\uffff\1\21\5\uffff\1\17\3\uffff\1\20\10\uffff\2\7\2\uffff\1\7\1\uffff\1\7",
            "\2\21\7\uffff\1\21\1\uffff\44\21\1\uffff\2\7\1\21\1\uffff\1\7\1\uffff\1\7\10\uffff\1\21\1\uffff\2\21\1\uffff\1\21\3\uffff\2\21",
            "\2\22\7\uffff\1\22\1\uffff\43\22\2\uffff\2\7\1\22\1\uffff\1\7\1\uffff\1\7\10\uffff\1\22\1\uffff\2\22\1\uffff\1\22\3\uffff\1\22",
            "\2\17\7\uffff\1\17\1\uffff\43\17\2\uffff\2\7\1\17\1\uffff\1\7\1\uffff\1\7\10\uffff\1\17\1\uffff\2\17\1\uffff\1\17\3\uffff\1\17",
            "\1\17\5\uffff\1\23\12\uffff\1\21\5\uffff\1\17\14\uffff\2\7\2\uffff\1\7\1\uffff\1\7",
            "",
            "",
            "\1\17\20\uffff\1\21\5\uffff\1\17",
            "",
            "",
            "\1\17\20\uffff\1\21\5\uffff\1\17"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2569:1: (this_ClassCS_0= ruleClassCS | this_EnumerationLiteralCS_1= ruleEnumerationLiteralCS | this_OperationCS_2= ruleOperationCS | this_PackageCS_3= rulePackageCS | this_StructuralFeatureCS_4= ruleStructuralFeatureCS )";
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\1\10\2\uffff\3\25\3\uffff\2\25";
    static final String dfa_15s = "\1\121\2\uffff\1\112\1\54\1\60\3\uffff\2\54";
    static final String dfa_16s = "\1\uffff\1\5\1\1\3\uffff\1\2\1\3\1\4\2\uffff";
    static final String dfa_17s = "\13\uffff}>";
    static final String[] dfa_18s = {
            "\1\3\14\uffff\1\7\1\uffff\1\10\3\uffff\1\5\12\uffff\1\6\5\uffff\1\7\3\uffff\1\4\5\uffff\1\10\4\uffff\1\2\2\uffff\1\1\13\uffff\1\2\6\uffff\1\2",
            "",
            "",
            "\1\7\5\uffff\1\5\12\uffff\1\6\5\uffff\1\7\3\uffff\1\4\31\uffff\1\2",
            "\1\7\5\uffff\1\11\12\uffff\1\6\5\uffff\1\7",
            "\1\7\20\uffff\1\6\5\uffff\1\7\3\uffff\1\12",
            "",
            "",
            "",
            "\1\7\20\uffff\1\6\5\uffff\1\7",
            "\1\7\20\uffff\1\6\5\uffff\1\7"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "()* loopback of 4579:1: ( ( (lv_ownedAnnotations_15_0= ruleAnnotationElementCS ) ) | ( (lv_ownedOperations_16_0= ruleOperationCS ) ) | ( (lv_ownedProperties_17_0= ruleStructuralFeatureCS ) ) | ( (lv_ownedConstraints_18_0= ruleInvariantConstraintCS ) ) )*";
        }
    }
    static final String dfa_19s = "\2\uffff\54\1\1\uffff";
    static final String dfa_20s = "\1\4\1\uffff\54\23\1\uffff";
    static final String dfa_21s = "\1\u008c\1\uffff\54\u0082\1\uffff";
    static final String dfa_22s = "\1\uffff\1\1\54\uffff\1\2";
    static final String[] dfa_23s = {
            "\2\1\3\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\1\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\15\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_1;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_5;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "6419:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )";
        }
    }
    static final String[] dfa_24s = {
            "\2\1\3\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\1\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\2\uffff\4\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_1;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_5;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "6632:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )";
        }
    }
    static final String dfa_25s = "\75\uffff";
    static final String dfa_26s = "\1\11\64\uffff\5\0\3\uffff";
    static final String dfa_27s = "\1\167\64\uffff\5\0\3\uffff";
    static final String dfa_28s = "\1\uffff\1\1\53\uffff\1\2\16\uffff\1\3";
    static final String dfa_29s = "\65\uffff\1\0\1\1\1\2\1\3\1\4\3\uffff}>";
    static final String[] dfa_30s = {
            "\2\1\7\uffff\1\1\1\uffff\43\1\4\uffff\1\1\14\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\26\uffff\2\55\1\uffff\10\55\1\65\1\66\1\67\1\70\1\71",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "7697:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA183_53 = input.LA(1);


                        int index183_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index183_53);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA183_54 = input.LA(1);


                        int index183_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index183_54);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA183_55 = input.LA(1);


                        int index183_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index183_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA183_56 = input.LA(1);


                        int index183_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index183_56);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA183_57 = input.LA(1);


                        int index183_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred331_InternalOCLinEcore()) ) {s = 45;}

                        else if ( (true) ) {s = 60;}


                        input.seek(index183_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 183, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\113\uffff";
    static final String dfa_32s = "\1\4\3\0\107\uffff";
    static final String dfa_33s = "\1\u008c\3\0\107\uffff";
    static final String dfa_34s = "\4\uffff\1\1\105\uffff\1\2";
    static final String dfa_35s = "\1\uffff\1\0\1\1\1\2\107\uffff}>";
    static final String[] dfa_36s = {
            "\2\4\3\uffff\2\4\7\uffff\1\4\1\1\44\4\3\uffff\1\4\14\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\1\4\2\uffff\1\2\1\3\1\4\21\uffff\2\4\1\uffff\15\4\2\uffff\1\4\1\uffff\4\4\6\uffff\1\4\4\uffff\1\112\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "7807:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA186_1 = input.LA(1);


                        int index186_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred334_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index186_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA186_2 = input.LA(1);


                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred334_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA186_3 = input.LA(1);


                        int index186_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred334_InternalOCLinEcore()) ) {s = 4;}

                        else if ( (true) ) {s = 74;}


                        input.seek(index186_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\112\uffff";
    static final String dfa_38s = "\1\4\12\uffff\7\0\70\uffff";
    static final String dfa_39s = "\1\u008c\12\uffff\7\0\70\uffff";
    static final String dfa_40s = "\1\uffff\1\1\1\2\1\3\1\4\15\uffff\1\10\1\11\7\uffff\1\12\53\uffff\1\5\1\6\1\7";
    static final String dfa_41s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\70\uffff}>";
    static final String[] dfa_42s = {
            "\2\4\3\uffff\2\33\7\uffff\1\33\1\uffff\43\33\1\1\3\uffff\1\33\14\uffff\1\33\1\uffff\2\33\1\uffff\1\33\3\uffff\1\33\4\uffff\1\4\21\uffff\1\14\1\13\1\uffff\10\23\1\15\1\16\1\17\1\20\1\21\2\uffff\1\22\1\uffff\4\4\6\uffff\1\2\5\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_37;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "8056:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA189_11 = input.LA(1);


                        int index189_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred341_InternalOCLinEcore()) ) {s = 71;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA189_12 = input.LA(1);


                        int index189_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalOCLinEcore()) ) {s = 72;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA189_13 = input.LA(1);


                        int index189_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA189_14 = input.LA(1);


                        int index189_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA189_15 = input.LA(1);


                        int index189_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA189_16 = input.LA(1);


                        int index189_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA189_17 = input.LA(1);


                        int index189_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalOCLinEcore()) ) {s = 73;}

                        else if ( (synpred345_InternalOCLinEcore()) ) {s = 19;}


                        input.seek(index189_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\1\4\12\uffff";
    static final String dfa_44s = "\1\70\2\0\10\uffff";
    static final String dfa_45s = "\1\u0085\2\0\10\uffff";
    static final String dfa_46s = "\3\uffff\1\3\1\4\4\uffff\1\1\1\2";
    static final String dfa_47s = "\1\uffff\1\0\1\1\10\uffff}>";
    static final String[] dfa_48s = {
            "\1\4\1\2\1\4\1\uffff\1\4\76\uffff\1\1\10\uffff\1\3\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_13;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "8590:2: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA205_1 = input.LA(1);


                        int index205_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred358_InternalOCLinEcore()) ) {s = 9;}

                        else if ( (synpred364_InternalOCLinEcore()) ) {s = 3;}


                        input.seek(index205_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA205_2 = input.LA(1);


                        int index205_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred364_InternalOCLinEcore()) ) {s = 3;}


                        input.seek(index205_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_13;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "8943:2: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA214_1 = input.LA(1);


                        int index214_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred369_InternalOCLinEcore()) ) {s = 9;}

                        else if ( (synpred375_InternalOCLinEcore()) ) {s = 3;}


                        input.seek(index214_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA214_2 = input.LA(1);


                        int index214_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_InternalOCLinEcore()) ) {s = 10;}

                        else if ( (synpred375_InternalOCLinEcore()) ) {s = 3;}


                        input.seek(index214_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\1\u008c\1\uffff\54\u0087\1\uffff";
    static final String[] dfa_50s = {
            "\2\1\3\uffff\1\2\1\3\7\uffff\1\26\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\51\1\1\1\uffff\1\56\1\uffff\1\47\14\uffff\1\54\1\uffff\1\50\1\52\1\uffff\1\53\3\uffff\1\55\2\uffff\3\1\21\uffff\2\1\1\uffff\15\1\2\uffff\1\1\1\uffff\4\1\6\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            "\1\1\43\uffff\1\1\1\uffff\1\56\3\uffff\1\1\1\uffff\1\1\22\uffff\2\1\2\uffff\22\1\2\uffff\1\1\25\uffff\1\1\1\uffff\1\1\4\uffff\1\1",
            ""
    };
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA218 extends DFA {

        public DFA218(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 218;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_20;
            this.max = dfa_49;
            this.accept = dfa_22;
            this.special = dfa_5;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "9340:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )";
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x087FFFFFFFF40600L,0x0000000000022D00L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000012200000102L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000010000000102L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0E7FFFFFFFF40600L,0x0000000000022D00L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0680000000000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x08FFFFFFFFFC06B0L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0600000000000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0CFFFFFFFFFC06B0L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0A7FFFFFFFF40600L,0x0000000000022D00L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0280000000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x2CFFFFFFFFF40620L,0x0000000000022D00L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x2480000000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x087FFFFFFFF40620L,0x0000000000022D00L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x1100000000000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x2400000000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x083FFFFFFFF40700L,0x0000000000020C00L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x483FFFFFFFF40700L,0x0000000000020C00L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0001000008200000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000008200000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0001000000200000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0xA600000000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x08FFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001040L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xA400000000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x003C208120000000L,0x00000000000000FFL});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x503C208120000000L,0x00000000000000FFL});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x403C208120000000L,0x00000000000000FFL});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x4800000410000100L,0x0000000000020400L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000080004000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x2680000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x2600000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000300L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x4840000000800100L,0x0000000000020400L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000062L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0480000000000020L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0480000000000000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x487FFFFFFFF40700L,0x0000000000020C00L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x003FFFFFFFF40600L,0x0000000000000800L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000080010L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x4800000000000100L,0x0000000000020400L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000002200000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0400000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0001004008000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000004008000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0001004000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x08FFFFFFFFF40600L,0x0000000000062D00L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x097FFFFFFFF40600L,0x0000000000022D00L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x2602000000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x2402000000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x3400000000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x000C008020000000L,0x0000000000000035L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x500C008020000000L,0x0000000000000035L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x400C008020000000L,0x0000000000000035L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x4800060000400100L,0x0000000000020400L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x4800090045100100L,0x0000000000020400L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x2200000000000002L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0008008000000000L,0x0000000000000024L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x5008008000000000L,0x0000000000000024L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x4008008000000000L,0x0000000000000024L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0001100008000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000100008000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0001100000000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0xA600000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x003CA08022000000L,0x00000000000180FDL});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x503CA08022000000L,0x00000000000180FDL});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x403CA08022000000L,0x00000000000180FDL});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x4800001410000100L,0x0000000000022400L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x1400000000000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000001100000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x2680000080000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x2600000080000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x3600000000000000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x4000000800000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x287FFFFFFFF40620L,0x0000000000022D00L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x487FFFFFFFF40620L,0x0000000000022D00L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x1000000000000000L,0x0000000000080000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0080000000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x08FFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000009040L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x087FFFFFFFF40600L,0x00FFFB0000022D00L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x4AFFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x5000000000000000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0AFFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x08FFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x1000000000000000L,0x0200000000000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000600L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x48FFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x8200000000000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x8000000000080002L,0x000000FFFFCC0000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x2080000000000002L,0x0000000000000000L,0x0000000000000005L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0BFFFFFFFFFC0630L,0xF4FFFB0000722D00L,0x0000000000001840L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x1500000000000000L,0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0200000000000002L,0x0800000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x8000000000000002L,0x0800000000000000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0200000000000002L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000500L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x8280000000000000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000010L,0x0000000000400000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000010L,0x0000000001400000L,0x0000000000008000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000006008L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x1000000000000002L,0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L});
    }


}
