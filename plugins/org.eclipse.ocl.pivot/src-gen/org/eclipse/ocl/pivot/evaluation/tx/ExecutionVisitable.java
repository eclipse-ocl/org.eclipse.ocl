/**
 * This file was copied and re-packaged automatically by
 *     org.eclipse.ocl.examples.build.GenerateAutoCSModels.mwe2
 * from 
 *     org.eclipse.qvtd.runtime/src/org/eclipse/qvtd/runtime/evaluation/ExecutionVisitable.java
 *
 * Do not edit this file. 
 */
/*******************************************************************************
 * Copyright (c) 2015 Willink Transformations and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *   E.D.Willink - Initial API and implementation
 *******************************************************************************/
package org.eclipse.ocl.pivot.evaluation.tx;

import org.eclipse.jdt.annotation.NonNull;
import org.eclipse.jdt.annotation.Nullable;

/** 
 * ExecutionVisitable defines the common visitable capability of all run-time execution objects.
 * 
 * @noimplement clients should derive from some AbstractXXX class
 * at-since 1.1
 */
public interface ExecutionVisitable
{ 
	/**
	 * Returns the result of accepting a visit from a visitor.
	 * Implementations typically invoke a derived-class-specific
	 * variant of visitXXX() to facilitate derived-class-specific
	 * processing or just visit() when no such method is available.
	 */
	@Nullable <R> R accept(@NonNull ExecutionVisitor<R> visitor);
}