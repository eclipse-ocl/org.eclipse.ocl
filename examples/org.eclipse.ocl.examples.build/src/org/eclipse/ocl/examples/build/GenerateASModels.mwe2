/*******************************************************************************
 * Copyright (c) 2010, 2013 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *   E.D.Willink - initial API and implementation
 *   E.D.Willink (CEA LIST) - Bug 424034
 *
 * Run As->MWE2 Workflow to regenerate the pivot model.
 *******************************************************************************/
module GenerateASModels

import org.eclipse.ocl.examples.build.utilities.*
import org.eclipse.ocl.examples.build.xtend.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

var sourceName = "org.eclipse.ocl.pivot"
var pivotProjectName = "org.eclipse.ocl.pivot"
var internalProjectName = "org.eclipse.ocl.pivot"
var basePivotProject = "../../plugins/${pivotProjectName}"

/**
 *	Generate the OCLstdlib Model, by converting oclstdlib.oclstdlib to OCLstdlib.java.
 */
Workflow {
	bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = "../../plugins"
    }
    bean = EcoreGenModelSetup { resourceSet = resourceSet }
 	component = OCLInstanceSetup : oclInstanceSetup { resourceSet = resourceSet }
    component = GenerateASModelsXtend { oclInstanceSetup = oclInstanceSetup
    	projectName = "${sourceName}"
    	stdlibFile = "model/OCL-2.5.oclstdlib"
     	modelFile = "model/PivotStructural.ecore"
     	oclURI = "/org.eclipse.ocl.pivot/model/Pivot.ocl"
    	uri = "http://www.eclipse.org/ocl/2015/Library"
    	ecoreFile = "/org.eclipse.ocl.pivot/model-gen/PivotMerged.ecore"
    	javaFolder = "/org.eclipse.ocl.pivot/emf-gen"
    	javaPackageName = "org.eclipse.ocl.pivot"
    	javaClassName = "Pivot"
    //	libraryName = "oclas"
    //	libraryNsPrefix = "oclas"
    /* 	excludedEClassifierName = "BooleanType"
    	excludedEClassifierName = "Class"
    	excludedEClassifierName = "CollectionType"
    	excludedEClassifierName = "Enumeration"
    	excludedEClassifierName = "EnumerationLiteral"
    	excludedEClassifierName = "InvalidType"
    	excludedEClassifierName = "MapType"
    	excludedEClassifierName = "State"
    	excludedEClassifierName = "Stereotype"
    	excludedEClassifierName = "Type"
    	excludedEClassifierName = "VoidType" */
    	invariantPrefix = "validate"
    }
 	bean = ResourceSetImpl : pivotGenerateResourceSet {}
    bean = ProjectMapSetup { resourceSet = pivotGenerateResourceSet }
//    bean = UMLStandaloneSetup { resourceSet = pivotGenerateResourceSet }
    bean = OCLStandaloneSetup {}
    bean = EcoreGenModelSetup { resourceSet = pivotGenerateResourceSet }
     component = GenmodelReloader { resourceSet = pivotGenerateResourceSet skipOnErrors = true
    	projectName = "${internalProjectName}"
    	genModel = "/${internalProjectName}/model/Pivot.genmodel"
    	ecoreFile = "/${internalProjectName}/model-gen/PivotMerged.ecore"
    	outputGenModel = "/${internalProjectName}/model-gen/Pivot.genmodel"
  	 	outputEcoreFile = "/${internalProjectName}/model-gen/Pivot.ecore"
     }
    
 /*    component = GenerateModel { resourceSet = pivotGenerateResourceSet skipOnErrors = true
//    	projectName = "${internalProjectName}"
    	genModel = "/${internalProjectName}/model-gen/Pivot.genmodel"
//    	clearResourceSet = false
//    	modelSlot = "${ecoreSlot}"
    }
    

    component = GenerateASVisitors { resourceSet = pivotGenerateResourceSet
    	projectName = "${internalProjectName}"
    	genModelFile = "model-gen/Pivot.genmodel"
    } */
    
    
    
/*    component = Model2tablesGenerator { oclInstanceSetup = oclInstanceSetup
   		library = "http://www.eclipse.org/ocl/2023/Library"
    	genModelFile = "/${sourceName}/model/oclas.genmodel"
    	genOCLstdlib = true
    } */
	component = OCLInstanceDispose { oclInstanceSetup = oclInstanceSetup }
	component = ConvertToUnixLineEndings {
		directory = "../../plugins/${sourceName}/emf-gen"
	}
}

