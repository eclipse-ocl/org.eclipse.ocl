/**
*******************************************************************************/

package org.eclipse.ocl.examples.ecore2xtext;

public interface Ecore2XtextParsersym {
    public final static int
      TK_IDENTIFIER = 14,
      TK_STRING = 5,
      TK_WS = 65,
      TK_Slash_GreaterThan = 7,
      TK_Colon = 59,
      TK_LessThan = 1,
      TK_LessThan_Slash = 45,
      TK_LessThan_Slash_100_101_116_97_105_108_115_GreaterThan = 46,
      TK_LessThan_Slash_101_65_110_110_111_116_97_116_105_111_110_115_GreaterThan = 47,
      TK_LessThan_Slash_101_67_108_97_115_115_105_102_105_101_114_115_GreaterThan = 48,
      TK_LessThan_Slash_101_71_101_110_101_114_105_99_84_121_112_101_GreaterThan = 49,
      TK_LessThan_Slash_101_79_112_101_114_97_116_105_111_110_115_GreaterThan = 50,
      TK_LessThan_Slash_101_80_97_99_107_97_103_101_115_GreaterThan = 51,
      TK_LessThan_Slash_101_80_97_114_97_109_101_116_101_114_115_GreaterThan = 52,
      TK_LessThan_Slash_101_83_116_114_117_99_116_117_114_97_108_70_101_97_116_117_114_101_115_GreaterThan = 53,
      TK_LessThan_Slash_101_84_121_112_101_65_114_103_117_109_101_110_116_115_GreaterThan = 54,
      TK_LessThan_Slash_101_99_111_114_101_Colon_69_80_97_99_107_97_103_101_GreaterThan = 55,
      TK_LessThan_Slash_120_109_105_Colon_88_77_73_GreaterThan = 17,
      TK_LessThan_QuestionMark_120_109_108 = 62,
      TK_LessThan_100_101_116_97_105_108_115 = 9,
      TK_LessThan_101_65_110_110_111_116_97_116_105_111_110_115 = 2,
      TK_LessThan_101_67_108_97_115_115_105_102_105_101_114_115 = 8,
      TK_LessThan_101_71_101_110_101_114_105_99_84_121_112_101 = 3,
      TK_LessThan_101_79_112_101_114_97_116_105_111_110_115 = 10,
      TK_LessThan_101_80_97_99_107_97_103_101_115 = 16,
      TK_LessThan_101_80_97_114_97_109_101_116_101_114_115 = 11,
      TK_LessThan_101_83_116_114_117_99_116_117_114_97_108_70_101_97_116_117_114_101_115 = 12,
      TK_LessThan_101_84_121_112_101_65_114_103_117_109_101_110_116_115 = 13,
      TK_LessThan_101_99_111_114_101_Colon_69_80_97_99_107_97_103_101 = 56,
      TK_LessThan_120_109_105_Colon_88_77_73 = 57,
      TK_Equal = 6,
      TK_GreaterThan = 4,
      TK_QuestionMark_GreaterThan = 58,
      TK_abstract = 25,
      TK_changeable = 26,
      TK_containment = 27,
      TK_defaultValueLiteral = 28,
      TK_derived = 29,
      TK_eClassifier = 22,
      TK_eExceptions = 30,
      TK_eOpposite = 31,
      TK_eSuperTypes = 32,
      TK_eType = 21,
      TK_encoding = 60,
      TK_instanceClassName = 33,
      TK_key = 34,
      TK_lowerBound = 35,
      TK_name = 18,
      TK_nsPrefix = 23,
      TK_nsURI = 24,
      TK_ordered = 36,
      TK_resolveProxies = 37,
      TK_serializable = 38,
      TK_source = 39,
      TK_transient = 40,
      TK_type = 63,
      TK_unsettable = 41,
      TK_upperBound = 42,
      TK_value = 43,
      TK_version = 61,
      TK_volatile = 44,
      TK_xmi = 19,
      TK_xmlns = 20,
      TK_xsi = 15,
      TK_EOF_TOKEN = 64,
      TK_ERROR_TOKEN = 66;

    public final static String orderedTerminalSymbols[] = {
                 "",
                 "LessThan",
                 "LessThan_101_65_110_110_111_116_97_116_105_111_110_115",
                 "LessThan_101_71_101_110_101_114_105_99_84_121_112_101",
                 "GreaterThan",
                 "STRING",
                 "Equal",
                 "Slash_GreaterThan",
                 "LessThan_101_67_108_97_115_115_105_102_105_101_114_115",
                 "LessThan_100_101_116_97_105_108_115",
                 "LessThan_101_79_112_101_114_97_116_105_111_110_115",
                 "LessThan_101_80_97_114_97_109_101_116_101_114_115",
                 "LessThan_101_83_116_114_117_99_116_117_114_97_108_70_101_97_116_117_114_101_115",
                 "LessThan_101_84_121_112_101_65_114_103_117_109_101_110_116_115",
                 "IDENTIFIER",
                 "xsi",
                 "LessThan_101_80_97_99_107_97_103_101_115",
                 "LessThan_Slash_120_109_105_Colon_88_77_73_GreaterThan",
                 "name",
                 "xmi",
                 "xmlns",
                 "eType",
                 "eClassifier",
                 "nsPrefix",
                 "nsURI",
                 "abstract",
                 "changeable",
                 "containment",
                 "defaultValueLiteral",
                 "derived",
                 "eExceptions",
                 "eOpposite",
                 "eSuperTypes",
                 "instanceClassName",
                 "key",
                 "lowerBound",
                 "ordered",
                 "resolveProxies",
                 "serializable",
                 "source",
                 "transient",
                 "unsettable",
                 "upperBound",
                 "value",
                 "volatile",
                 "LessThan_Slash",
                 "LessThan_Slash_100_101_116_97_105_108_115_GreaterThan",
                 "LessThan_Slash_101_65_110_110_111_116_97_116_105_111_110_115_GreaterThan",
                 "LessThan_Slash_101_67_108_97_115_115_105_102_105_101_114_115_GreaterThan",
                 "LessThan_Slash_101_71_101_110_101_114_105_99_84_121_112_101_GreaterThan",
                 "LessThan_Slash_101_79_112_101_114_97_116_105_111_110_115_GreaterThan",
                 "LessThan_Slash_101_80_97_99_107_97_103_101_115_GreaterThan",
                 "LessThan_Slash_101_80_97_114_97_109_101_116_101_114_115_GreaterThan",
                 "LessThan_Slash_101_83_116_114_117_99_116_117_114_97_108_70_101_97_116_117_114_101_115_GreaterThan",
                 "LessThan_Slash_101_84_121_112_101_65_114_103_117_109_101_110_116_115_GreaterThan",
                 "LessThan_Slash_101_99_111_114_101_Colon_69_80_97_99_107_97_103_101_GreaterThan",
                 "LessThan_101_99_111_114_101_Colon_69_80_97_99_107_97_103_101",
                 "LessThan_120_109_105_Colon_88_77_73",
                 "QuestionMark_GreaterThan",
                 "Colon",
                 "encoding",
                 "version",
                 "LessThan_QuestionMark_120_109_108",
                 "type",
                 "EOF_TOKEN",
                 "WS",
                 "ERROR_TOKEN"
             };

    public final static int numTokenKinds = orderedTerminalSymbols.length;
    public final static boolean isValidForParser = true;
}
