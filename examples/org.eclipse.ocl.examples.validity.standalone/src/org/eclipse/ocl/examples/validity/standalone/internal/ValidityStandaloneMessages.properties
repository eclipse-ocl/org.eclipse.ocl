###############################################################################
# Copyright (c) 2014 Obeo and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     Obeo - initial API and implementation
# $Id$
###############################################################################
## Application
OCLValidatorApplication_Aborted = Operation aborted
OCLValidatorApplication_ValidationStarting = Starting OCL Evaluation
OCLValidatorApplication_ValidationComplete = Evaluation successfully completed
OCLValidatorApplication_ExportStarting = Starting results export
OCLValidatorApplication_ExportProblem= A problem detected while exporting results
OCLValidatorApplication_ExportedFileGenerated = Results successfully exported
OCLValidatorApplication_ModelLoadProblem = A Problem detected while loading the model {0}
OCLValidatorApplication_OclLoadProblem = A Problem detected while loading the ocl file model {0}
OCLValidatorApplication_OclUriProblem = A Problem detected while initiating the ocl file URI {0}
OCLValidatorApplication_MetaModelsLoadProblem = A Problem detected while loading metamodels by the helper

## Analyzer
## Missing keyword
OCLArgumentAnalyzer_NoDefinedKeyword = The command line requires a keyword. For more details type {0}.

## Mandatory Arguments
OCLArgumentAnalyzer_ModelArg = Argument '-model' is required in the command line
OCLArgumentAnalyzer_RulesArg = Argument '-rules' is required in the command line

## Mandatory Arguments values missing
OCLArgumentAnalyzer_ModelPathMissing = The Model Path after the '-model' argument is required in the command line
OCLArgumentAnalyzer_RulesPathMissing = At least one Rule Path after the '-rules' argument is required in the command line

## Optional Arguments
OCLArgumentAnalyzer_OutputArg = Argument '-output' is missing in the command line. The exported file will be saved in a temporary file.
OCLArgumentAnalyzer_ExporterArg = Argument '-exporter' is missing in the command line. The default 'text' exporter will be used.
OCLArgumentAnalyzer_RestrictionArg = Argument '-using' is missing in the command line. All constraints will be validated.

## Optional Arguments values missing
OCLArgumentAnalyzer_OutputFilePathMissing = The Output Path after the '-output' argument is required in the command line.
OCLArgumentAnalyzer_OutputFileInvalidExtension = The Output File Extension is invalid, it must be '{0}'.
OCLArgumentAnalyzer_OutputFileCreationProblem = A problem detected while creating a temporary file to export results
OCLArgumentAnalyzer_ExporterMissing = A 'text|html' exporter after the '-exporter' argument is required in the command line.
OCLArgumentAnalyzer_RestrictionMissing = A 'all|ocl|java|uml' identifiers after the '-using' argument is required in the command line.

OCLArgumentAnalyzer_FileExt = File extension for resource 
OCLArgumentAnalyzer_OutputDir = Output directory 
OCLArgumentAnalyzer_OutputFile = Output file 
OCLArgumentAnalyzer_OCLFileNotFound = The OCL file {0} does not exist. 
OCLArgumentAnalyzer_NoOCLFiles = No OCL Document to evaluate. Check the command line.
OCLArgumentAnalyzer_CannotBeRead = \ cannot be read.
OCLArgumentAnalyzer_ExtensionPb = \ must be either *.ocl or *.txt
OCLArgumentAnalyzer_found = \ found

OCLArgumentAnalyzer_ignored = \ ignored
OCLArgumentAnalyzer_ModelFile = Model file 
OCLArgumentAnalyzer_NotDirectory = \ is not a directory
OCLArgumentAnalyzer_AlreadyExists = \ already exists in command line.
OCLArgumentAnalyzer_NotFile = \ is not a file
OCLArgumentAnalyzer_NotExist = \ does not exist.
OCLArgumentAnalyzer_OCLFile = OCL file 
OCLArgumentAnalyzer_OCLResource = OCL resource

OCLArgumentAnalyzer_help =\
*** Use 'ocl help' to get this list.***\n\
> ocl help\n\
\n\
> ocl validate -model <MODEL_PATH> -rules <OCL_RULES_PATH(s)> [-output <OUTPUT_FILE_PATH>] [-exporter text|html] [-using all|ocl|java|uml]\n\
\n\
>> -model: Mandatory token. This token must be followed by the model file path as a value.\n\
\n\
>> -rules: Mandatory token used to define the paths to the OCL documents containing the constraints to evaluate.\n\
>>> Users can specify one or several OCL Documents paths in the command line, separated with a whitespace.\n\
>>> A text file containing a list of OCL Documents paths can be used instead, in which case all OCL constraints defined in all of these documents will be evaluated sequentially.\n\
\n\
>> -output: Optional token to define the output file path. The exporter will create results within that target file.\n\
\n\
>> -exporter: Optional token to specify which exporter should be used. By default, the "text" exporter (TextExport Class) will be used, exporting a textual report of the validation.\n\
\n\
>> -using: Optional token. It can be used if the user wishes to run all constraints or to only run the OCL, Java, UML constraints validation. Otherwise, all rules will be checked against the input model.\n\


