/*
 * generated by Xtext
 */
package org.eclipse.ocl.examples.xtext.oclstdlib.scoping;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.ocl.examples.xtext.base.baseCST.ModelElementCS;
import org.eclipse.ocl.examples.xtext.base.scope.ScopeAdapter;
import org.eclipse.ocl.examples.xtext.base.scoping.cs.DefaultScopeAdapter;
import org.eclipse.ocl.examples.xtext.base.scoping.cs.ModelElementCSScopeAdapter;
import org.eclipse.ocl.examples.xtext.base.scoping.cs.RootPackageCSScopeAdapter;
import org.eclipse.ocl.examples.xtext.essentialocl.scoping.EssentialOCLCSScopeProvider;
import org.eclipse.ocl.examples.xtext.oclstdlib.oclstdlibCST.LibIterationCS;
import org.eclipse.ocl.examples.xtext.oclstdlib.oclstdlibCST.LibOperationCS;
import org.eclipse.ocl.examples.xtext.oclstdlib.oclstdlibCST.LibRootPackageCS;
import org.eclipse.ocl.examples.xtext.oclstdlib.oclstdlibCST.OCLstdlibCSTPackage;
import org.eclipse.ocl.examples.xtext.oclstdlib.oclstdlibCST.util.OCLstdlibCSTSwitch;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
public class OCLstdlibScopeProvider extends EssentialOCLCSScopeProvider
{
	protected static class Factory extends EssentialOCLCSScopeProvider.Factory
	{
		protected Factory() {
			addSwitch(OCLstdlibCSTPackage.eINSTANCE, new OCLstdlibScopeSwitch());
		}
	}

	public static ModelElementCSScopeAdapter.Factory FACTORY = new Factory();
	
	public static class OCLstdlibScopeSwitch 
		extends OCLstdlibCSTSwitch<ScopeAdapter>
		implements ScopeAdapter.Switch
	{

		@Override
		public ScopeAdapter caseLibIterationCS(LibIterationCS eObject) {
			return new LibOperationScopeAdapter(eObject);
		}

		@Override
		public ScopeAdapter caseLibOperationCS(LibOperationCS eObject) {
			return new LibOperationScopeAdapter(eObject);
		}

		@Override
		public ScopeAdapter caseLibRootPackageCS(LibRootPackageCS eObject) {
			return new RootPackageCSScopeAdapter(eObject);
		}

		@Override
		public ScopeAdapter defaultCase(EObject eObject) {
			return new DefaultScopeAdapter((ModelElementCS) eObject);
		}

		public ScopeAdapter doInPackageSwitch(EObject eObject) {
			return doSwitch(eObject.eClass(), eObject);
		}
	}

}
